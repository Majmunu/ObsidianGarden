{"/":{"title":"🪴 Wangc.TECH","content":"\n  你好，网络旅行者。 欢迎来到我的博客主页！\n\n  这里是一个旨在分享知识、启发思考、传递正能量的空间。我相信，知识是通向成功的阶梯，而分享知识则是为更多人搭建这座阶梯的桥梁。因此，我致力于将我所学、所思、所感与大家分享，希望能够为你带来一些启发与灵感。\n\n  欢迎来到我的小花园在互联网，我在这里花了很多时间玩,写作和在开放中构建.它在某些地方有点蓬头垢面，但我认为它给了它一点魅力。\n\n  在这个博客中，你将会看到我对各种话题的思考和总结。我会分享我在学习、生活、工作等方面的经验和教训，希望能够为你提供一些参考和启示。同时，我也会分享一些有趣、有益的资源和资讯，让你更好地了解这个世界和自己。\n\n  我相信每个人都有无限的潜力和可能性，只要我们肯去学习、思考和实践，就能够成为更好的自己。因此，我希望我的博客能够成为一个与你一同成长的伙伴，陪伴你走过人生的每一个阶段。\n\n  最后，感谢你来到我的博客主页，我希望你能在这里找到自己需要的东西，并且能够和我一起交流和分享。如果你有任何问题或建议，欢迎联系我，让我们一起创造更美好的未来！\n\n  在我人生的这个时代，我正在努力成为一个对世界毫不掩饰地兴奋和好奇的人。\n\n  虽然我还不能为您提供这个数字花园的导游，但我可以为您提供一份探索地点列表作为建议。\n\n\n\n\n## 探索列表\n\n\u003e🍈 [[Record/DigitalGarden/Antd/Antd]]\n\n\u003e🍊 [[Record/DigitalGarden/Css/CSS]]\n\n\u003e🍍 [[Record/DigitalGarden/git/GIT]]\n\n\u003e🍏 [[Record/DigitalGarden/JavaScript/JAVASCRIPT]]\n\n\u003e🍑 [[Record/DigitalGarden/NextJs/NextJs]]\n\n\u003e🍅 [[Record/DigitalGarden/React/REACT]]\n \n\u003e🥝 [[Record/DigitalGarden/Vue/Vue]]\n\n\u003e🍒 [[Record/DigitalGarden/Typescript/TYPESCRIPT]]\n\n\u003e🍓 [[Record/DigitalGarden/Node/Node]]\n\n\u003e 🥥[[Record/DigitalGarden/Nebulas/Nebulas]] \n\n\n\n\n","lastmodified":"2023-11-27T14:24:29.327502041Z","tags":null},"/%E4%BB%8E%E8%BF%99%E5%BC%80%E5%A7%8B":{"title":"从这开始","content":"## 新手入门主题Tips\n\n[[tips 文件夹说明]]\n\n##  从这里开始，了解Topaz\n\n```ad-tip\n本[Examples库](https://github.com/cumany/Blue-topaz-examples)由Cuman建立，Tips教程由BT主题作者3F撰写。\n本库是一个包含Obsidian基本功能的入门库，精简版删减了不必要的插件，并优化了文件夹目录，如果想看完整版功能请下载[Examples](https://github.com/cumany/Blue-topaz-examples)完整库。\n特别感谢@Johnny @Lillianwho  @lavi @成雙酱 @锋华 提供的教程和创作思路。\n如果有问题或者建议 请加入Topaz社区[Topaz QQ群](https://jq.qq.com/?_wv=1027\u0026k=TWGhXs40)  [Obsidian频道](https://qun.qq.com/qqweb/qunpro/share?_wv=3\u0026_wwv=128\u0026inviteCode=zHpby\u0026from=246610\u0026biz=ka)  [Cuman的B站](https://b23.tv/2Uqt2dn)\n```\n\n\n## MOC\n```ad-kanban\n- **快速导航**\n\t- `button-richeng`\n\t- `button-kanban`\n\t- `button-suibi2`\n\t-  `button-renwu2`\n\t- 👉 `$= '[[日记统计#'+ moment().format(\"YYYY-MM\") +'|当月日记]]'`\n- **教程**\n\t- [Cuman的B站](https://b23.tv/2Uqt2dn)\n\t- [[🥑Blue Topaz Themes Tips|🥑 主题TIPS]]\n\t- [[魔方配色设置说明|🎲 魔方配色]]\n\t- [[分栏效果示例|💶 分栏效果]]\n\t- [[伪看板-yaml声明|📊 伪看板]]\n\t- [[ob提示框(callout)样式展示|🌈Callout效果]]\n\n- **帮助**\n\t- [[css基础教学|🥏 CSS教学]]\n\t- [[MarkDown教程 Obsidian版 2022.4.22|📙 Markdown超级教程]]\n\t- [Obsidian中文教程](https://publish.obsidian.md/chinesehelp/README)\n\t- [[Johnny学OB 资料汇总|💾 Johnny学OB]]\n\t- [[Lillian Who Obsidian新手入门教程| 🥠 Ob新手入门教程系列]]\n\n```\n\n## 最近编辑\n````ad-flex\n\u003cdiv\u003e\n\n### 最近编辑\n```dataview\ntable WITHOUT ID file.link AS \"标题\",file.mtime as \"时间\"\nfrom !\"模板\" and !\"kanban\"\nsort file.mtime desc\nlimit 5\n```\n\u003c/div\u003e\n\n\u003cdiv\u003e\n\n### 三天内创建的笔记\n```dataview\ntable file.ctime as 创建时间\nfrom \"\"\nwhere date(today) - file.ctime \u003c=dur(3 days)\nsort file.ctime desc\nlimit 5\n```\n\u003c/div\u003e\n````\n## 快速检索\n![[通过下拉框检索文件示例]]\n## 项目追踪\n![[项目追踪（完成的字数和任务）#选择需要跟踪的项目]]\n## 更新日志\n![[Changlog]]\n## 内置插件解释\n![[README#内置的插件]]\n## 主题内置cssclass 声明样式\n![[README#主题内置的cssclass样式表]]\n## 常见问题解答\n![[README#❓ 常见问题]]\n\n","lastmodified":"2023-11-27T14:24:29.375502173Z","tags":null},"/README":{"title":"README","content":"## 💡引言\nThis Vault  contains the basic functions of Obsidian and has built-in common Obsidian plugins.\nNotice：You need to open this vault with [Obsidian](https://obsidian.md/)\n\n---\n\u003e **Example-lite 库删除了大量辅助插件都是一些非必须插件，如果实际用到根据需要安装即可**\n\n本[Examples库](https://github.com/cumany/Blue-topaz-examples)由Cuman建立，Tips教程由[BT主题](https://github.com/whyt-byte/Blue-Topaz_Obsidian-css)作者3F撰写。\n本库是一个包含Obsidian基本功能的入门库，并内置了Obsidian的常用插件。\n需要用[Obsidian](https://obsidian.md/)软件打开本库即可。\n特别感谢@Johnny @Lillianwho  @lavi @成雙酱 @锋华 提供的教程和创作思路。\n如果有问题或者建议 请加入Topaz社区[Topaz QQ群](https://jq.qq.com/?_wv=1027\u0026k=TWGhXs40)  [Obsidian频道](https://qun.qq.com/qqweb/qunpro/share?_wv=3\u0026_wwv=128\u0026inviteCode=zHpby\u0026from=246610\u0026biz=ka)\n## 🎞视频教程\n\u003chttps://space.bilibili.com/1970226/channel/series\u003e\n## 👉后续更新 请关注\n- [Examples库](https://github.com/cumany/Blue-topaz-examples)\n- [Blue topaz 主题用法示例 - 飞书文档 (feishu.cn)](https://kknwfe6755.feishu.cn/docs/doccn67RYLVN4IQZiJTwviIdnog)\n\n另外推荐鸟姐的Homepage 也是很棒的风格\n[Rainbell129/Obsidian-Homepage: A dashboard for your obsidian vault. (github.com)](https://github.com/Rainbell129/Obsidian-Homepage)\n## 🚩更新日志\n\n\n## 主题内置的cssclass样式表  \n```expander\npath: 77-Example usage:\n^|文件名称|cssclass|用法|\n^|---|---|\t---|\n|[[$filename]]|$frontmatter:cssclass|$frontmatter:usage|\n```\n \n|文件名称|cssclass|用法|\n|---|---|\t---|\n|[[电影观看清单-状态控制（dvjs）]]|cards|对dataview表格渲染成卡片视图|\n|[[电影观看清单（dv）]]|cards|对dataview表格渲染成卡片视图|\n|[[多彩高亮（三种语法）]]|colorful-highlight|实时预览模式下正确显示多彩高亮|\n|[[各类列表和彩虹大纲线]]|noscroll|隐藏当前页面滚动条|\n|[[全宽显示-表格测试]]|fullwidth|缩减栏宽开启下，控制页面全宽显示|\n|[[四象限表格]]|matrix|四象限表格样式|\n|[[图书阅读清单-状态控制(dvjs)]]|cards|对dataview表格渲染成卡片视图|\n|[[图书阅读清单(dv)]]|cards|对dataview表格渲染成卡片视图|\n|[[涂黑和挖空效果（三种语法）]]|cloze|实时预览模式下正确显示涂黑和挖空效果|\n|[[伪看板-yaml声明]]|kanban|伪看板的样式，无序列表四分栏|\n|[[预览隐藏frontmatter]]|noyaml|预览状态不显示frontmatter区域|\n|[[Callout环绕布局、缩进效果示例]]|fullwidth|callout实现文章环绕，全文缩进效果|\n|[[code-wrap【代码块自动换行】]]|code-wrap|代码块自动换行|\n|[[Image-grid【图片自适应】]]|img-grid|图片自适应分布|\n|[[inline-list【行内列表】]]|inline-list|图片和列表混排|\n \n\u003c--\u003e\n\n| cssclass    | role                                                               |\n| ----------- | ------------------------------------------------------------------ |\n| code-wrap   | code-block-auto-wrap                                               |\n| img-grid    | image adaptive distribution                                        |\n| inline-list | images and lists mixed                                             |\n| kanban      | pseudo-kanban style, unordered list of four columns                |\n| fullwidth   | reduce column width on, control the full width of the page display |\n| noscroll    | hide the current page scrollbar                                    |\n| matrix      | four-quadrant table style                                          |\n| cards       | rendering-dataview-tables-to-cards-view                            |\n| cards       | rendering-dataview-tables-to-cards-view                            |\n| noyaml      | preview state does not show the frontmatter area                   |\n\n\n## 主题内置的ad样式表\nad样式使用方法参考\n[[分栏效果示例#前置条件]]\n[[分栏效果示例#AD样式效果]]\n\n| Admonition类型 | 解释             | 使用        |\n| ------------ | -------------- | --------- |\n| blank        | 全透明框           | ad-blank  |\n| def          | definition 定义  | ad-def    |\n| thm          | theorem 定理     | ad-thm    |\n| lem          | lemma 引理       | ad-lem    |\n| cor          | corollary 推论   | ad-cor    |\n| pro          | proposition 命题 | ad-pro    |\n| hibox        | 自动隐藏框          | ad-hibox  |\n| col2         | 内容分左右两栏        | ad-col2   |\n| kanban       | 伪看板 无序列表并列     | ad-kanban |\n| flex         | 自适应元素分栏        | ad-flex   |\n## Javascript作用\n\u003e 88-Template\\script\n\n| 名称                 | 功能                             | 调用js的功能             |\n| ------------------ | ------------------------------ | ------------------- |\n| bookfromdouban.js  | 根据url从豆瓣获取图书数据                 | Quickadd-宏-豆瓣读书     |\n| changeSticky.js    | 快捷修改home.md中的四个便签内容            | Quickadd-宏-添加首页便签   |\n| colorclock.js      | 彩色时钟js                         | 已通过react组件实现，此js已弃用 |\n| fetchhomepage.js   | 获取主页中的联网数据(OB启动后加载)            | quickadd-宏-Home工作区  |\n| movies.js          | 从IMDB获取电影数据                    | quickadd-宏-电影卡片     |\n| notice.js          | 生成自定义边栏提示                      | quickadd-宏-生成notice |\n| refreshhomepage.js | 重载主页数据，重新获取联网数据                | quickadd-宏-重新获取主页数据 |\n| getrandomImage.js  | 随机获取99-Attachment\\banner文件夹的图片 | tp-日记模板获取banner     |\n| getweather.js      | 获取天气数据                         | tp-日记模板获取天气         |\n## ❓ 常见问题\n1. 如何获取指定地区的天气？\n\t\t主页天气代码默认根据ip地址自动获取，如果手动指定`https://i.tianqi.com/?c=code\u0026id=34\u0026bdc=%23\u0026icon=4\u0026site=14\u0026py=chongqing` chongqing改为你想要的城市拼音即可。\n2. 如何更换字体？\n   示例库默认配置的主字体为[[LXGWWenKai-Light.ttf]]  代码块字体为[[JetBrainsMono-Regular.ttf]]  可以自行安装，即可自动识别。\n\t如果要安装其他字体，打开 style settings设置，2.2.1字体设置，主字体里填写**字体名称**即可。注意如果字体名称有空格需要用单引号括起来。\n\t\t字体需要安装到系统里才会成功调用，比如win系统安装后显示的**字体名称**才是真正的字体名称。\n\t\t![[Pasted image 20220119151051.png]] ^d0e999\n3. 如何更换Ob背景图？\n\t\t打开 style settings设置，1.2.1工作页面背景，开启背景，并在custom theme light(亮色主题使用)或者custom theme dark(暗色主题使用)里设置壁纸路径.壁纸路径需要使用类似格式url(\"app://local/XXXXX)设置本地图片。\n\t\t比如windows图片路径置\n\t\turl(app://local/D:/Documents/XXXX.jpg\")\n\t\tmac系统图片路径设置 url(\"app://local/Users/XXXX .jpg\")\n4. 工作区页面背景跟笔记背景的区别?\n\t\t工作区页面背景是指整个OB界面背景，笔记背景仅仅是当前md文档的背景。两者不冲突可以同时设置，当然这样背景也就叠加一起了。如果只需要整个OB是一个背景图，笔记背景关闭即可。\n5. 主页的歌曲和每日一言如何更新？\n\t\t点击主页的topaz图片 或者侧边栏的重载主页 都可以重新获取最新的歌曲和一言。重新获取后如何没有显示出来，点击刷新主页即可。\n\t\t![[Pasted image 20220119152758.png]]\n6. 备忘录Memos 无法启动打开？\n\t\t开启核心插件日记，并指定日记文件夹位置。\n7. 主页加载部分数据没有显示全？\n\t\t如果时钟不动或者主页没有显示全。手动点一下刷新主页即可。\n8. 带按钮的常用工具侧边栏如何实现？\n\t\t其实就是`88-template/常用工具`笔记文档，打开后拖动文档标题前的图标到侧边栏即可。\n9. 示例库目前有五十多个插件，实在太多了，想保持示例库主要功能的话需要几个插件\n\t\t示例库真正需要的核心插件并不多，大部分都是为了Ob使用更方便的辅助类插件，可以根据自己需要开启。\n\t\t如果想体验最精简版本的示例库很简单。\n\t\t按图修改[[FastStart-StartupScript]] ![[Pasted image 20220315145116.png|500]]  即可启动最低示例库运行插件配置。\n\t\t启动后启动ob只需要100ms\n\t\t![[Pasted image 20220315144725.png|300]]\n10. 侧边栏悬浮memos 无法打开有错误提示？\n\t\t\t需要先`ctrl+p` ==\u003e`打开其他库`，然后选择示例库“20-diary”文件夹，打开一次之后，这个悬浮按钮就自动生效。详情看[[Obsidian 库中库玩法#实现]]\n11. 为什么在style setting下切换配色没什么效果？\n\t![[Pasted image 20220429154332.png]]\n\t注意2.1 里面的颜色设置 是不是有自定义颜色。这里的自定义颜色设置优先级比较高，建议把里面的颜色设置都恢复成默认就可以了。\n12. 如何取消开启ob自动加载主页，我想打开ob出现上次关闭时的笔记？\n\t打开quickadd设置，宏管理 关闭home工作区的 启动加载选项。\n\t![[Pasted image 20220523110336.png]]\n13. 如何移植动画版天气到自己的主页？并获取指定城市天气？\n    直接复制\"文字版天气加图标\"注释之间的内容，并copy\"88-Template/script/dv_weatherSvg.js\"   启用【天气】weather.css 样式片段就移植成功了。设置指定地区天气，需要在quickadd宏home工作区中如图设置即可。![[Pasted image 20220531101243.png|400]]\n14. 如何移植动画猫到自己的主页中？\n    跟多彩时钟一样，动画猫也是react组件生成的。需要首先安装react_component插件，并copy`\\88-Template\\ReactJS\\react_cat.md`  这样动画猫代码就生效了。\n    \n## 捐赠\n如果你觉得不错，这个示例库对你使用ob有帮助，可以支持我一下。\n![image|inl|350](https://user-images.githubusercontent.com/42957010/172568261-8a732d3d-303a-4367-993e-23c3efbf62a8.png) ![[Pasted image 20220608162248.png|inl|350]]\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/%E6%A8%A1%E6%9D%BF/%E5%85%AC%E5%8F%B8%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81":{"title":"公司账号密码","content":"```ad-note\ntitle:禅道\n账号：wangchenchen\n密码：Wang123\n\\\\10.1.16.102\n```\n\n```ad-note\ntitle:Jenkins\n账号：wangchenchen\n密码：gemcc@pm.me\n```\n\n```ad-note\ntitle:GitLab\n账号：wangchenchen\n密码：63767412\n```\n\n```ad-note\ntitle:Ubuntu\n账号：ubuntu\n密码：12345678\n```\n\n```ad-note\ntitle:Windows\n账号：Wangcc\n密码：Wangcc01\n```\n\n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","lastmodified":"2023-11-27T14:24:29.327502041Z","tags":null},"/Record/%E6%A8%A1%E6%9D%BF/%E6%9C%AA%E5%91%BD%E5%90%8D":{"title":"未命名","content":"\n```ad-note\ntitle:Admonition\n\u003cfigure class=\"half\"\u003e\n\u003cimg src=\"https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20221211144629.png\"/\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20221211144659.png\"/\u003e\n\u003c/figure\u003e\n```\n\n","lastmodified":"2023-11-27T14:24:29.327502041Z","tags":null},"/Record/%E6%A8%A1%E6%9D%BF/%E6%A8%A1%E6%9D%BF":{"title":"模板","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[模板]]**\n\t- [[公司账号密码]]\n\t- [[每周笔记模板]]\n\t- [[../../../20230227162713]]\n\t- [[favicon.ico]]\n\t- [[Pasted image 20221211144611.png]]\n\t- [[Pasted image 20230128180704.png]]\n\t- [[Pasted image 20230215162902.png]]\n\t- [[Pasted image 20230215172643.png]]\n\t- [[Pasted image 20230215172929.png]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.327502041Z","tags":null},"/Record/%E6%A8%A1%E6%9D%BF/%E6%AF%8F%E5%91%A8%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF":{"title":"{{title}}","content":"\n\n\n\n\n![[Record/Diary/Day/{{monday:gggg-MM-DD}}]]\n![[Record/Diary/Day/{{tuesday:gggg-MM-DD}}]]\n![[Record/Diary/Day/{{wednesday:gggg-MM-DD}}]]\n![[Record/Diary/Day/{{thursday:gggg-MM-DD}}]]\n![[Record/Diary/Day/{{friday:gggg-MM-DD}}]]\n![[Record/Diary/Day/{{saturday:gggg-MM-DD}}]]\n![[Record/Diary/Day/{{sunday:gggg-MM-DD}}]]","lastmodified":"2023-11-27T14:24:29.327502041Z","tags":null},"/Record/Diary/Day/2022-12-11":{"title":"2022-12-11","content":"```ad-note\ntitle:  微服务框架运行和react运行有什么区别\nicon: book\n\n1. 用微服务框架可以控制子项目的生命周期和主项目进行联调\n2. 微服务框架会导出子项目的reducer交给主项目的redux统一管理\n\n```\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-12":{"title":"2022-12-12","content":"```ad-info\ntitle:自学一天 ES6string方法 \n\n\u003cimg src=\"https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20221212103243.png\"/\u003e\n```\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-13":{"title":"2022-12-13","content":"```ad-bug\ntitle:遇到错误 SassError: Undefined variable.\n解决方案：将 SCSS 文件导入主 SCSS 文件时，请确保使用 @import '';在所有文件上。**不要使用**@import URL（文件的路径）;。 它们是不一样的。\n```\n\n\n```ad-tip\ntitle:组件问题\n获取验证码刚开始使用[前置/后置标签]标签实现，后发现使用 suffix更加合适\n```\n\n\n```ad-success\ntitle:完成更换手机号弹窗\n更换手机弹窗完成70%，完成表单验证和获取验证码倒计时功能。但使用组件为antd，通过项目中代码发现原来使用的是司南弹窗库，明天需要询问需要用哪种方式完成\n```\n\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-14":{"title":"2022-12-14","content":"```ad-danger\ntitle:发烧一天两夜\n```\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-15":{"title":"2022-12-15","content":"```ad-success\ntitle:完成更换手机号和重置私钥\n```\n\n\n```ad-question\ntitle:存在问题\nintl-tel-input用于输入和验证国际电话号码的 JavaScript 插件在虚拟机中安装显示缺少依赖\n```\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-16":{"title":"2022-12-16","content":"```ad-example\ntitle:今日目标：尽可能完成账号注销功能\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-17":{"title":"2022-12-17","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2022-12-18":{"title":"2022-12-18","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-01-28":{"title":"2023-01-28","content":"```ad-note\ntitle:上午\nicon:person-digging\n\n上午完善鼠标移入的弹窗效果，优化了项目结构\n```\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-01-29":{"title":"2023-01-29","content":"```ad-note\n* 表单使用延时器进行防抖\n* useReducer 进行复杂的状态管理\n* useContent 上下文 简化代码\n* current.focus()使页面加载时聚焦\n* 导入图片，可以直接使用import导入 再通过src={}动态绑定图片地址\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-01-30":{"title":"2023-01-30","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-01-31":{"title":"2023-01-31","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-01":{"title":"2023-02-01","content":"中午吃了凉皮和肉夹馍，晚上预计吃饺子，下午想申请github学生 ，试了好久没成功","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-02":{"title":"2023-02-02","content":"```ad-question\n工资评价不如预期，S23u评价不如预期 双喜临门\n![引用退格1](https://www.google.com/imgres?imgurl=https%3A%2F%2Fi4.hoopchina.com.cn%2Fhupuapp%2Fbbs%2F192%2F44076192%2F1625805560_7991161IMG_5844.PNG%3Fx-oss-process%3Dimage%2Fresize%2Cw_600%2Fformat%2Cjpg%2Fquality%2CQ_60\u0026imgrefurl=https%3A%2F%2Fbbs.hupu.com%2F44125017.html\u0026tbnid=kcCZguve3Bc-iM\u0026vet=10CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ..i\u0026docid=qLVw5Oai9HDLgM\u0026w=600\u0026h=636\u0026itg=1\u0026q=%E8%A5%BF%E7%BA%A2%E6%9F%BF%E9%A6%96%E5%AF%8C%20%E5%8F%8C%E5%96%9C%E4%B8%B4%E9%97%A8%E8%A1%A8%E6%83%85%E5%8C%85\u0026ved=0CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ)\n![湘湖1](https://www.google.com/imgres?imgurl=https%3A%2F%2Fi4.hoopchina.com.cn%2Fhupuapp%2Fbbs%2F192%2F44076192%2F1625805560_7991161IMG_5844.PNG%3Fx-oss-process%3Dimage%2Fresize%2Cw_600%2Fformat%2Cjpg%2Fquality%2CQ_60\u0026imgrefurl=https%3A%2F%2Fbbs.hupu.com%2F44125017.html\u0026tbnid=kcCZguve3Bc-iM\u0026vet=10CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ..i\u0026docid=qLVw5Oai9HDLgM\u0026w=600\u0026h=636\u0026itg=1\u0026q=%E8%A5%BF%E7%BA%A2%E6%9F%BF%E9%A6%96%E5%AF%8C%20%E5%8F%8C%E5%96%9C%E4%B8%B4%E9%97%A8%E8%A1%A8%E6%83%85%E5%8C%85\u0026ved=0CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ)\n```\n\u003e 上午完成了购物车商品价格，要注意购物车的商品数量不能仅以数组的长度来展示，因为可能有免费的商品，需要使用 Array.prototype.reduce()来处理","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-03":{"title":"2023-02-03","content":"[Hack | A typeface designed for source code (sourcefoundry.org)](https://sourcefoundry.org/hack/)\n\n[tonsky/FiraCode：带有编程连字的免费等宽字体 (github.com)](https://github.com/tonsky/FiraCode)","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-04":{"title":"2023-02-04","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-05":{"title":"2023-02-05","content":"```js\nasync function fetchMoviesHandler() {\n\n    await fetch('https://swapi.dev/api/films/')\n\n      .then(response =\u003e {\n\n        return response.json();\n\n      })\n\n      .then(data =\u003e {\n\n        const transformedMovies = data.results.map(movieData =\u003e {\n\n          return {\n\n            id: movieData.episode_id,\n\n            title: movieData.title,\n\n            openingText: movieData.opening_crawl,\n\n            releaseDate: movieData.release_date,\n\n          };\n\n        })\n\n        setMovies(transformedMovies)\n\n        console.log(data);\n\n      });\n\n  }\n\n  // 更容易阅读的写法\n\n  async function fetchMoviesHandler2() {\n\n    const response = await fetch('https://swapi.dev/api/films/')\n\n    const data = await response.json()\n\n    const transformedMovies = data.results.map(movieData =\u003e {\n\n      return {\n\n        id: movieData.episode_id,\n\n        title: movieData.title,\n\n        openingText: movieData.opening_crawl,\n\n        releaseDate: movieData.release_date,\n\n      };\n\n    })\n\n    setMovies(transformedMovies)\n\n  }\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-07":{"title":"2023-02-07","content":"```ad-note\n配置开发环境\n```\n\n![[使用自定义钩子处理表单]]\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-14":{"title":"2023-02-14","content":"```ad-question\ntitle:表格点击标题跳转不知道怎么获取参数\n解决方案：通过查询antd的api 最后通过onclick回调将当前点击所属行的数据传递到onclick函数中\n解决方案：\n```js\n{\n\t\ttitle: '操作',\n\t\tdataIndex: 'rowguid',\n\t\tkey: 'rowguid',\n\t    render: (text, record) =\u003e (\n\t\t      \u003cSpace size=\"middle\"\u003e\n\t\t        \u003cButton type=\"primary\" size=\"small\" \u003e修改\u003c/Button\u003e\n\t\t        \u003cButton type=\"danger\" size=\"small\" onClick={(e)=\u003edelByGuid(text)}\u003e删除\u003c/Button\u003e\n\t\t      \u003c/Space\u003e\n\t\t\t)\n\t}\n onClick={(e)=\u003edelByGuid(text)} \n```\n\t \n\n```ad-question\ntitle: git两个分支merge之后还存在不同\n\ngit merge不是根据文件的差异来的，是根据提交来的。\n\n就算master分支和dev分支同一个文件中的同一行存在差异，但是只要在dev分支上你在上一次merge到这一次merge之间没有对这一行做过改动（注意：换行也算改动），那么这一次merge的时候git将不认为它们是冲突。\n\n理论上说这种情况很难出现，因为dev通常是基于master分支新建的，不会存在dev分支和master分支同一个文件同一行存在不同，而且dev分支上还没有对这一行做过改动。\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-18":{"title":"2023-02-18","content":"学习了grid布局\n![[Grid 布局]]\n## 学习了数组的at方法返回指定位置的元素\n![[Array.prototype.at()]]","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-25":{"title":"2023-02-25","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-02-28":{"title":"2023-02-28","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e二月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e28\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期二\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline59::timeline]\n```ad-flex\n(Weather::广州 🌞晴，11~23℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午配置 obsidian \n下午 [[../../DigitalGarden/Typescript/TypeScript Fundamentals]]\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-01":{"title":"2023-03-01","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e01\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期三\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline60::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，15~26℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午 [[../../DigitalGarden/Nebulas/Nebulas Fundamentals]]\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-02":{"title":"2023-03-02","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e02\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期四\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline61::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，13~25℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n上午目标：学习区块链 [[../../DigitalGarden/Nebulas/Nebulas Fundamentals#基本结构]]\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-03":{"title":"2023-03-03","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e03\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期五\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline62::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，14~24℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n\u003e 上午电脑显卡报废修复修复显卡在完成个人账号安全小窗户小窗口时时没有沟通好导致需要重新调试\n\n\u003e下午学习 react 性能性能处理\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-06":{"title":"2023-03-06","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e06\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期一\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline65::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，13~26℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\u003e每日数组\n\n[[../../DigitalGarden/JavaScript/数组/Array.prototype.reduce()]]\n\n\u003e上午面向对象编程\n\n[[../../DigitalGarden/JavaScript/Object Oriented#原型]]\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-07":{"title":"2023-03-07","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e07\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期二\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline66::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，15~25℃ 良 微风习习🌕)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\u003e上午修改用户安全账号样式\n\n\u003e下午配置 eslint prettier styleline 的 React 环境\n\n- 16:24 啥都没有","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-08":{"title":"2023-03-08","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e08\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期三\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline67::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，16~26℃ 良 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-09":{"title":"2023-03-09","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e09\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期四\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline68::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，18~29℃ 良 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-10":{"title":"2023-03-10","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e10\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期五\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline69::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，17~29℃ 轻度污染 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-13":{"title":"2023-03-13","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e13\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期一\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline72::timeline]\n```ad-flex\n(Weather::广州 🌥阴，14~22℃ 良 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午 webgl [[../../DigitalGarden/WebGL/ThreeJs]]\n下午修复bug\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-14":{"title":"2023-03-14","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e14\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期二\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline73::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，16~25℃ 轻度污染 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午 webgl 实例实例\n下午 wengl react useReducer\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-15":{"title":"2023-03-15","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e15\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期三\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline74::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，18~26℃ 良 微风习习🌗)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午进行任务任务发布管理的页面转移\n页面转移完成差页面主页和路由\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-16":{"title":"2023-03-16","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e16\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期四\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline75::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，17~28℃ 轻度污染 微风习习🌘)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n任务发布管理页面转移初步完成\n项目任务发布权限查询合约初步编写完成\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-17":{"title":"2023-03-17","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e17\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期五\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline76::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，18~28℃ 良 微风习习🌘)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午抓🐟与🐳与🐋与🐠与🐡\n等待开会 ing 🙄\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-23":{"title":"2023-03-23","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e23\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期四\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline82::timeline]\n```ad-flex\n(Weather::广州 🌧大雨，21~27℃ 优 清风徐徐🌒)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\u003e [!question] 什么是无代码开发平台？\n\u003e 允许开发人员通过将可视代码块拖放到工作流中以创建应用程序来快速设计应用程序并使用最少的手工编码的技术。\n\u003e  无代码平台提供了更大的简单性和易用性，因此任何人，无论其开发经验如何，都可以快速创建应用程序。\n\n\u003e[!question] 零代码开发优势\n\u003e * 提高开发速度\n\u003e * 增加生产力\n\u003e * 降低使用门槛\n\u003e * 更加专注于应用程序的功能和业务逻辑本身，而不是花费大量时间在编写底层代码上。\n\u003e * 增强业务和开发之间的沟通，通过可视化的方式让业务人员更容易熟悉开发过程，从而减少误解和漏洞。\n\n\u003e[!question] BI 的主要应用场景\n\u003e\"BI\"是商业智能（Business Intelligence）的缩写，它是通过收集、处理、分析和展示数据，来提供企\n\u003e业决策支持的一种应用。\nBI 的主要应用场景包括：\n\u003e1.  销售分析：帮助企业分析销售数据，了解销售趋势和销售区域、销售产品的情况，从而优化销售策略和提高销售业绩；\n\u003e2.  财务分析：帮助企业收集和分析财务数据，了解企业的经济状况，比如销售收入、成本、利润等，从而提高企业的盈利能力；\n\u003e3.  客户分析：帮助企业了解顾客的行为习惯、偏好和需求，从而制定精准的营销策略，提高客户满意度；\n\u003e4.  运营分析：帮助企业分析生产工艺、物流、库存管理等方面的数据，优化企业的生产和运营流程，提高企业的效率；\n\u003e5.  人力资源分析：帮助企业分析员工绩效、培训和开发等方面的数据，优化人力资源管理，提高员工满意度和企业绩效。\n\u003e6. 总之，BI 的主要应用场景就是帮助企业通过精确的数据分析，做出更加明智的决策，提高企业的效率、盈利能力和市场竞争力。\n\n\u003e[!question] 低代码无代码区别\n\u003e![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/20230323172307.png)\n\n\u003e[!question] 零代码面向的用户群体\n\u003e* 企业中的业务用户\n\u003e* 初学者和学生\n\u003e* 想快速开发的开发者和 IT 专业人士\n\n\u003e[!question] 为什么会出现低代码\n\u003e软件开发更快速、更高效、更创新，并使更多的人能参与到应用程序开发过程中来。\n\n\u003e[!零代码开发过程]\n\u003e1.  确定业务需求：在开始开发之前，业务用户需要确定应用程序的目标和目的。这个步骤需要确立应用程序的目标、主要的功能、约束等。\n\u003e2.  选择适当的平台：根据业务需求的特点，选择合适的零代码平台。可以在市场上选择合适的平台，并进行免费试用，然后根据实际情况作出最终的选择。  \n\u003e3.  搭建基础框架：在平台上，创建列表或数据模型等基础框架，用于管理和存储相关数据。一般而言，这个过程是根据应用程序的需求、功能、数据等来组织和设置数据模型 \n\u003e4.  添加用户界面和工作流程：根据业务需求，在平台上创建用户界面和工作流程，包括设计表单、页面、菜单、视图等，并添加必要的流程，如审批工作流、任务流等。\n\u003e5.  集成或生成必要的代码：在开发过程中，可能需要进行一些集成或自定义操作，例如使用固定的公式或函数库等，以适应业务需要。\n\u003e6.  测试和发布：新开发的应用程序需要在测试环境中进行测试，评估其功能和性能。通过测试后，可将应用程序发布到生产环境中供用户使用。\n\n\u003e[!如何从零代码中获利]\n\u003e* 自己使用提高开发效率\n\u003e* 为用户提供平台服务\n\u003e* 为企业提供定制服务\n\n\u003e[!question] 提高竞争力\n\u003e1.  提升易用性：该产品的用户界面应该简单易用，易于理解、操作、切换，以便广泛的客户能够使用它。通过用户测试，不断优化和改进产品的易用性和用户体验，帮助企业客户更快速、更轻松地构建应用程序。\n\u003e2.  面向不同的客户：针对不同的客户和领域位置进行平台服务和定制化支持，以满足客户特定的业务需求，同时提供一整套零代码開發生态圈。\n\u003e3.  社区参与：通过创造持续的开发者社区，结合上述产品企业的技术专家，以鼓励讨论、分享经验、学习知识和反馈意见，以不断提高产品质量和可用性。平台需要持续利用开发者社区作为促进产品发展的重要渠道，提供更好的技术和沟通支持，以扩大产品受众和市场。\n\u003e4.  提供垂直解决方案：在行業专业领域内，平台需要提供特定业务或行业的解决方案，例如金融业务、零售业务、公共部门服务等等，以满足行业内客户的具体需求。   \n\u003e5.  持续的更新和演进：零代码平台市场正在不断变化和发展。为了保持竞争优势，平台需要不断更新和演进，以改善现有的横向和纵向功能，并更好地应对市场需求，并定期发布报告，表明产品的可靠性和稳定性。\n\u003e6.  强化数据安全性：企业级应用程序通常涉及敏感数据，因此数据的安全性是至关重要的。这就要求零代码产品提供完善的安全性方案，包括数据加密、访问控制、用户权限管理、数据备份等多项措施，以保护客户数据的安全。\n\u003e7.  提供强大的分析与预测：随着数据分析和AI等技术的普及，越来越多的企业正在利用数据分析为其业务能。因此，零代码产品需要提供强大的数据分析和预测功能，帮助企业更好地把握业务趋势。  \n\u003e8.  连接其他系统：企业场景下的应用通常需要集成多个系统，如CRM、ERP等。因此，零代码产品需要提供易于集成的API，支持内部和外部系统的连接，以实现工作流自动化和数据共享。\n\u003e9.  提高可扩展性：企业应用程序通常需要在不断变化的业务需求下进行不断的升级和扩展，因此零代码产品需要支持快速的定制和扩展，以满足企业不断变化的业务需求。\n\u003e10.  提供客户支持和培训：为了使客户能够更加容易地使用和获得产品的价值，提供及时的客户支持和持续的培训是非常重要的。\n\u003e11.  适应移动化需求：随着移动设备的普及，许多企业都需要提供移动化应用程序。因此，零代码产品需要提供快速开发移动应用程序的功能和模板，满足客户的移动化需求。\n\u003e12.  引入新技术：零代码平台行业正在不断涌现出新的技术和工具，如低代码平台、人工智能、自动化测试等等。因此，要保持竞争优势，产品开发商需要引入新技术，不断创新升级自己的产品。\n\u003e13.  提高性能和稳定性：在满足客户易用性和功能需求的同时，产品的性能和稳定性也是至关重要的。持续优化性能和稳定性，确保产品能够承受高负载和高并发的压力，并且具有良好的容错机制。\n\u003e14.  建立品牌形象：一个强有力的品牌形象可以帮助零代码产品赢得更多的客户和市场份额。为此，开发商需要设计和实施一系列有效的品牌推广策略，如SEO、社交媒体宣传、事件营销等等。\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-03-29":{"title":"2023-03-29","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e三月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e29\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期三\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline88::timeline]\n```ad-flex\n(Weather::广州 🌧阵雨，14~20℃ 优 微风习习🌒)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n## 如何在选中边框或者边角时改变元素大小\n1. 使用 css 的 Resize 属性：\n\n```css\n.resizable \n{\nresize: both; /* 指定可水平和垂直调整 */ \noverflow: auto; /* 滚动条显示，以便在容器大小小于内容时进行滚动 */ \nwidth: 200px; \nheight: 200px; \nborder: 1px solid black; }\n```\n\n2 使用 javascript\n![[../../../BT_Example/99-Attach/Pasted image 20230328204902.png]]\n![[../../../BT_Example/99-Attach/Pasted image 20230328204928.png]]\n\n3. React-Resizable：React-Resizable 是一个基于 React 的库，可以帮助开发人员轻松地为元素添加可调整大小的功能。它支持垂直和水平缩放，并且可以在多个方向上进行调整。\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-03":{"title":"2023-04-03","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e03\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期一\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline93::timeline]\n```ad-flex\n(Weather::广州 🌧阵雨，15~19℃ 良 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-09":{"title":"2023-04-09","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e09\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期日\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline99::timeline]\n```ad-flex\n(Weather::广州 🌧阵雨，15~19℃ 良 微风习习🌖)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n机器翻译demo\n```jsx\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nexport default function Translate() {\n\nconst AK = \"RGR1efeeqzlcI646fAHjozec\"\n\nconst SK = \"fAXzcH27LgMzcAMIg4LxkPsRdH34XABz\"\n\n  \n\nasync function main() {\n\n    var options = {\n\n        'method': 'POST',\n\n        'url': 'https://aip.baidubce.com/rpc/2.0/mt/texttrans/v1?access_token=' + await getAccessToken(),\n\n        'headers': {\n\n                'Content-Type': 'application/json',\n\n                'Accept': 'application/json'\n\n        },\n\n        body: JSON.stringify({\n\n                \"from\": \"en\",\n\n                \"to\": \"zh\",\n\n                \"q\": \"hello\"\n\n        })\n\n  \n\n    };\n\n  \n\n    axios(options, function (error, response) {\n\n        if (error) throw new Error(error);\n\n        console.log(response.body);\n\n    });\n\n}\n\n  \n\n/**\n\n * 使用 AK，SK 生成鉴权签名（Access Token）\n\n * @return string 鉴权签名信息（Access Token）\n\n */\n\nfunction getAccessToken() {\n\n  \n\n    let options = {\n\n        'method': 'POST',\n\n        'url': 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials\u0026client_id=' + AK + '\u0026client_secret=' + SK,\n\n    }\n\n    return new Promise((resolve, reject) =\u003e {\n\n        axios(options, (error, response) =\u003e {\n\n            if (error) { reject(error) }\n\n            else { resolve(JSON.parse(response.body).access_token) }\n\n        })\n\n    })\n\n}\n\nmain();\n\n  \n  \n\n  return \u003cdiv\u003eTranslate\u003c/div\u003e;\n\n}\n```\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-19":{"title":"2023-04-19","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e19\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期三\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline109::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，22~29℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午，短信合约的编写，参数限制，线下测试已完成，但线上部署测试时报错提示找不到数据合约待解决\n下午\n1. 解决权限问题\n 1. 找不到数据合约\n- 原因：使用框架进行自动部署时缺少权限\n- 解决方案：手动部署覆盖\n 2. 数据合约方法无权限\n- 解决方法：添加权限注意地址不是用户地址而是合约地址\n2. 学习 mongodb 数据库\n  遇到问题命令行无法使用提示不是内部或外部命令\n  解决方案，查阅文档发送 6.0 之后需要使用专门的 shell 工具\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-20":{"title":"2023-04-20","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e20\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期四\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline110::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，22~29℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n上午：学习 mongodb 基本操作和增删改查\n下午：排序、分页、聚合查询、索引\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-21":{"title":"2023-04-21","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e21\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期五\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline111::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，22~29℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-23":{"title":"2023-04-23","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e23\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期日\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline113::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，22~29℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n连接数据库遇见问题连接超时，检查多次代码，数据库无果，\n通过查找资料发现，报错原因是 nodejs 在后台使用 ipv6，所以 localhost 不是指向 127.0.0.1，\nConst timeoutError = new error_1.MongoServerSelectionError(`Server selection timed out after ${serverSelectionTimeoutMS} ms`, this.description);\n解决方案：将 localhost 手动改为 127.0.0.1","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/2023-04-24":{"title":"2023-04-24","content":"\n```ad-icon\n\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-label=\"Calendar\" role=\"img\" viewBox=\"0 0 512 512\" width=\"100%\" height=\"100%\" style=\"cursor: default\"\u003e\n      \u003cpath d=\"m512,455c0,32 -25,57 -57,57l-398,0c-32,0 -57,-25 -57,-57l0,-327c0,-31 25,-57 57,-57l398,0c32,0 57,26 57,57l0,327z\" fill=\"#efefef\"/\u003e\n      \u003cpath d=\"m484,0l-47,0l-409,0c-15,0 -28,13 -28,28l0,157l512,0l0,-157c0,-15 -13,-28 -28,-28z\" fill=\"#cf5659\"/\u003e\n      \u003cg fill=\"#f3aab9\"\u003e\n        \u003ccircle cx=\"462\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"462\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"419\" cy=\"94\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"136\" r=\"14\"/\u003e\n        \u003ccircle cx=\"376\" cy=\"94\" r=\"14\"/\u003e\n      \u003c/g\u003e\n      \u003ctext id=\"month\" x=\"32\" y=\"150\" fill=\"#fff\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"122px\" style=\"text-anchor: left\"\u003e四月\u003c/text\u003e\n      \u003ctext id=\"day\" x=\"256\" y=\"400\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"256px\" style=\"text-anchor: middle\"\u003e24\u003c/text\u003e\n      \n      \u003ctext id=\"weekday\" x=\"256\" y=\"480\" fill=\"#66757f\" font-family=\"-apple-system, BlinkMacSystemFont, 'Noto Sans', 'Noto Sans CJK SC', 'Microsoft YaHei', 微软雅黑, sans-serif, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" font-size=\"64px\" style=\"text-anchor: middle\"\u003e星期一\u003c/text\u003e\n\u003c/svg\u003e\n```\n\u003e [!blank] \n\u003e [timeline114::timeline]\n```ad-flex\n(Weather::广州 ⛅多云，22~29℃ 良 微风习习🌔)\n\u003e [!infobox|noicon]-  当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Day/Day":{"title":"Day","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Day\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Day]]**\n\t- [[2022-12-11]]\n\t- [[2022-12-12]]\n\t- [[2022-12-13]]\n\t- [[2022-12-14]]\n\t- [[2022-12-15]]\n\t- [[2022-12-16]]\n\t- [[2022-12-17]]\n\t- [[2022-12-18]]\n\t- [[2023-01-28]]\n\t- [[2023-01-29]]\n\t- [[2023-01-30]]\n\t- [[2023-01-31]]\n\t- [[2023-02-01]]\n\t- [[2023-02-02]]\n\t- [[2023-02-03]]\n\t- [[2023-02-04]]\n\t- [[2023-02-05]]\n\t- [[2023-02-07]]\n\t- [[2023-02-14]]\n\t- [[2023-02-18]]\n\t- [[2023-02-25]]\n\t- [[2023-02-28]]\n\t- [[2023-03-01]]\n\t- [[2023-03-02]]\n\t- [[2023-03-03]]\n\t- [[2023-03-06]]\n\t- [[2023-03-07]]\n\t- [[2023-03-08]]\n\t- [[2023-03-09]]\n\t- [[2023-03-10]]\n\t- [[2023-03-13]]\n\t- [[2023-03-14]]\n\t- [[2023-03-15]]\n\t- [[2023-03-16]]\n\t- [[2023-03-17]]\n\t- [[2023-03-23]]\n\t- [[2023-03-29]]\n\t- [[2023-04-03]]\n\t- [[2023-04-09]]\n\t- [[2023-04-19]]\n\t- [[2023-04-20]]\n\t- [[2023-04-21]]\n\t- [[2023-04-23]]\n\t- [[2023-04-24]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Diary":{"title":"Diary","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Diary\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Diary]]**\n\t- **[[Day]]**\n\t- **[[Week]]**\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Week/2022-W50":{"title":"2022-W50","content":"## 一周概览\n\n\n![[../Day/2022-12-12]]\n![[../Day/2022-12-13]]\n![[../Day/2022-12-14]]\n![[../Day/2022-12-15]]\n![[../Day/2022-12-16]]\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Week/2023-W04":{"title":"2023-W04","content":"## 一周概览\n\n![[../Day/2023-01-29]]\n![[2023-01-23]]\n![[2023-01-24]]\n![[2023-01-25]]\n![[2023-01-26]]\n![[2023-01-27]]\n![[../Day/2023-01-28]]","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Week/2023-W09":{"title":"2023-W09","content":"\n\n\n\n\n![[Record/Diary/Day/2023-02-27]]\n![[Record/Diary/Day/2023-02-28]]\n![[Record/Diary/Day/2023-03-01]]\n![[Record/Diary/Day/2023-03-02]]\n![[Record/Diary/Day/2023-03-03]]\n![[Record/Diary/Day/2023-03-04]]\n![[Record/Diary/Day/2023-03-05]]","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/Diary/Week/Week":{"title":"Week","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Week\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Week]]**\n\t- [[2022-W50]]\n\t- [[2023-W04]]\n\t- [[2023-W09]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE":{"title":"常用快捷键","content":"\n## ✍内容\n\u003e [!abstract] Windows\n\u003eWin + Ctrl + 左/右切换虚拟桌面\n\u003eAlt+F4，可以最快的方式关闭任何应用程序\n\u003e\n\n\u003e [!abstract] Ubuntu\n\u003e   Ctrl + Alt + T：打开终端\n\u003e  Ctrl + Shift + T：在同一个窗口新建终端标签页\n\u003e   Ctrl + Shift + W：关闭标签页\n\u003e     Ctrl + Shift + N：新建终端窗口\n Ctrl + Shift + Q：关闭终端窗口\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/%E6%9D%82%E6%8A%80":{"title":"杂技","content":"[通过分析github代码库总结出来的工程师代码书写习惯Code Guide by @AlloyTeam](http://alloyteam.github.io/CodeGuide/#css-declaration-order)\n\n\n[Firebase console (google.com)](https://console.firebase.google.com)\nhttps://chat.openai.com/chat/","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83":{"title":"配置环境","content":"```ad-info\ntitle:vscode\n插件\n字体 fira code 苹方\n\n```\n\n```ad-info\ntitle:浏览器\npolypane\n```\n\n\n```ad-info\ntitle:git\ngitlens tower\n[Download Helix Visual Merge Tool Today | Perforce](https://www.perforce.com/downloads/visual-merge-tool)\n[源齿轮|差异合并 (sourcegear.com)](http://sourcegear.com/diffmerge/downloads.html)\n```\n\n```ad-note\ntitle:bootstrap 密匙\n**8f0a5faccca5ccb1b80a58ad662e3fde6aaf1050**\n```\n\n```ad-note\nControl-C\n^C\nC:\\Users\\admin\u003e\nC:\\Users\\admin\u003eping 192.168.90.89\n\n正在 Ping 192.168.90.89 具有 32 字节的数据:\n来自 192.168.90.89 的回复: 字节=32 时间\u003c1ms TTL=64\n来自 192.168.90.89 的回复: 字节=32 时间\u003c1ms TTL=64\n来自 192.168.90.89 的回复: 字节=32 时间\u003c1ms TTL=64\n\n192.168.90.89 的 Ping 统计信息:\n    数据包: 已发送 = 3，已接收 = 3，丢失 = 0 (0% 丢失)，\n往返行程的估计时间(以毫秒为单位):\n    最短 = 0ms，最长 = 0ms，平均 = 0ms\nControl-C\n^C\nC:\\Users\\admin\u003eping 192.168.90.89\n\n正在 Ping 192.168.90.89 具有 32 字节的数据:\n来自 192.168.90.89 的回复: 字节=32 时间\u003c1ms TTL=64\n来自 192.168.90.89 的回复: 字节=32 时间\u003c1ms TTL=64\n来自 192.168.90.89 的回复: 字节=32 时间\u003c1ms TTL=64\n\n192.168.90.89 的 Ping 统计信息:\n    数据包: 已发送 = 3，已接收 = 3，丢失 = 0 (0% 丢失)，\n往返行程的估计时间(以毫秒为单位):\n    最短 = 0ms，最长 = 0ms，平均 = 0ms\nControl-C\n^C\nC:\\Users\\admin\u003eping 192.168.90.99\n\n正在 Ping 192.168.90.99 具有 32 字节的数据:\n来自 192.168.90.99 的回复: 字节=32 时间\u003c1ms TTL=64\n来自 192.168.90.99 的回复: 字节=32 时间\u003c1ms TTL=64\n\n192.168.90.99 的 Ping 统计信息:\n    数据包: 已发送 = 2，已接收 = 2，丢失 = 0 (0% 丢失)，\n往返行程的估计时间(以毫秒为单位):\n    最短 = 0ms，最长 = 0ms，平均 = 0ms\nControl-C\n^C\nC:\\Users\\admin\u003eping 192.168.90.79\n\n正在 Ping 192.168.90.79 具有 32 字节的数据:\n来自 192.168.90.108 的回复: 无法访问目标主机。\n\n192.168.90.79 的 Ping 统计信息:\n    数据包: 已发送 = 1，已接收 = 1，丢失 = 0 (0% 丢失)，\nControl-C\n^C\nC:\\Users\\admin\u003e\n```","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Algorithms/Algorithms":{"title":"Algorithms","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Algorithms\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Algorithms]]**\n\t- [[AlgorithmsCourse]]\n\n%% End Waypoint %%\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Algorithms/AlgorithmsCourse":{"title":"{{title}}","content":"\n## ✍内容\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Antd/Antd":{"title":"Antd","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Antd\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Antd]]**\n\t- [[antd-popover样式更改，及参数详解]]\n\t- [[antd轮播图带箭头样式]]\n\t- [[TreeSelect带搜索框]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Antd/TreeSelect%E5%B8%A6%E6%90%9C%E7%B4%A2%E6%A1%86":{"title":"TreeSelect带搜索框","content":"\n## ✍内容\n\n\n```jsx\nimport { Button, Input, Radio, TreeSelect } from \"antd\";  \nimport React, { useEffect, useState } from \"react\";  \nimport { FolderOutlined ,DownOutlined} from \"@ant-design/icons\";  \nimport styles from \"../theme/SNSelectTree.module.scss\";  \nfunction SNTreeSelect(props) {  \n// 搜索框值  \nconst [searchValue, setSearchValue] = useState(\"\"); // 搜索框值  \n//树形选择器  \nconst [tree, setTree] = useState();  \n//树形选择器数据  \nconst treeData = [  \n{  \ntitle: \"南国药业\",  \nvalue: \"南国药业\",  \n  \nchildren: [  \n{  \ntitle: \"司南科技\",  \nvalue: \"司南科技\",  \n},  \n{  \ntitle: \"著忙科技\",  \nvalue: \"著忙科技\",  \n},  \n],  \n},  \n{  \ntitle: \"重负信息\",  \nvalue: \"重负信息\",  \nchildren: [],  \n},  \n];  \n//树形选择器事件  \nuseEffect(() =\u003e {  \nsetTree(props.treeValue);  \n}, [props]);  \nconst treeChangeHandler = (newValue) =\u003e {  \nif (props.handleTreeData) {  \nprops.handleTreeData({ ...props.identify, post: newValue });  \n}  \nif (props.treeSelect) {  \nprops.treeSelect(newValue);  \n}  \nsetTree(newValue);  \n};  \n// 搜索框的值发生改变searchValue值也跟着改变  \nconst handleChangeSearch = (e) =\u003e {  \nsetSearchValue(e.target.value || \"\");  \n};  \n  \n// 下拉数据二级处理  \nconst formatChildTreeData = (data, result) =\u003e {  \ndata.forEach((cur) =\u003e {  \nif (cur.title.includes(searchValue)) {  \nresult.push(cur);  \n} else if (cur.children \u0026\u0026 cur.children.length) {  \nconst childResult = formatChildTreeData(cur.children, result);  \nif (childResult.length) {  \nresult.push({  \n...cur,  \nchildren: childResult,  \n});  \n}  \n}  \n});  \nreturn result;  \n};  \n// 处理下拉框数据  \nconst formatTreeData = () =\u003e {  \n// 当搜索框没有值的时候不做处理  \nif (!searchValue) return treeData;  \nconst result = [];  \ntreeData.forEach((item) =\u003e {  \nif (item.title.includes(searchValue)) {  \nresult.push(item);  \n} else if (item.children \u0026\u0026 item.children.length) {  \nconst childResult = formatChildTreeData(item.children, []);  \nif (childResult.length) {  \nresult.push({  \n...item,  \nchildren: childResult,  \n});  \n}  \n}  \n});  \nreturn result;  \n};  \n  \n  \nfunction renderTreeNodes(data) {  \nreturn data.map((item) =\u003e {  \nif (item.children) {  \nitem.icon = \u003cFolderOutlined /\u003e;  \nreturn (  \n\u003cTreeSelect.TreeNode  \nkey={item.key}  \ntitle={\u003cdiv\u003e123\u003c/div\u003e}  \n\u003e  \n{renderTreeNodes(item.children)}  \n\u003c/TreeSelect.TreeNode\u003e  \n);  \n} else {  \nlet test  \nif(tree)  \n{  \ntest=tree.value===item.value  \n}  \nitem.title = \u003cRadio checked={test}\u003e{item.title}\u003c/Radio\u003e;  \n  \n  \n}  \nreturn (  \n\u003cTreeSelect.TreeNode key={item.key} title={item.title.props.children} /\u003e  \n);  \n});  \n}  \n  \nconst renderTitle=(value)=\u003e{  \nconsole.log(123,value);  \n}  \n  \nreturn (  \n\u003cdiv\u003e  \n\u003cTreeSelect  \nstyle={{  \nwidth: \"100%\",  \n}}  \n  \nlabelInValue  \nclassName={styles.tree}  \nbordered={props.border}  \ntreeNodeFilterProp=\"title\"  \ntreeIcon={true}  \nfieldNames={{  \ntitle:456  \n}}  \nvalue={tree}  \ndropdownStyle={{  \nmaxHeight: 400,  \noverflow: \"auto\",  \n}}  \nonDropdownVisibleChange={() =\u003e setSearchValue(\"\")} // 展开下拉菜单的回调  \ndropdownRender={(menu) =\u003e (  \n\u003c\u003e  \n\u003cInput  \nstyle={{  \nwidth: \"300\",  \nborderBottom: \"1px solid #d9d9d9\",  \nmarginBottom: \"10px\",  \n}}  \nsuffix=\"RMB\"  \nonChange={handleChangeSearch}  \nvalue={searchValue}  \nplaceholder=\"请搜索\"  \nallowClear={true}  \nbordered={false}  \n/\u003e  \n{menu}  \n\u003c/\u003e  \n)} // 自定义下拉框内容  \nallowClear={true}  \nshowSearch  \nsuffixIcon={\u003cFolderOutlined /\u003e}//搜索按钮  \ntreeData={formatTreeData()}  \ntreeDefaultExpandAll  \nonChange={treeChangeHandler}  \n\u003e  \n{renderTreeNodes(treeData)}  \n\u003c/TreeSelect\u003e  \n\u003c/div\u003e  \n);  \n}  \nexport default React.memo(SNTreeSelect);\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Antd/antd%E8%BD%AE%E6%92%AD%E5%9B%BE%E5%B8%A6%E7%AE%AD%E5%A4%B4%E6%A0%B7%E5%BC%8F":{"title":"antd轮播图带箭头样式","content":"\n```javascript\n.ant-carousel .slick-prev,\n\n.ant-carousel .slick-next,\n\n.ant-carousel .slick-prev:hover,\n\n.ant-carousel .slick-next:hover {\n\nfont-size: inherit;\n\ncolor: currentColor;\n\n}\n\n  \n\n.ant-carousel .slick-prev,\n\n.ant-carousel .slick-prev:hover {\n\nleft: 10px;\n\nz-index: 2;\n\ncolor: white;\n\n}\n\n  \n\n.ant-carousel .slick-next,\n\n.ant-carousel .slick-next:hover {\n\nright: 10px;\n\nz-index: 2;\n\ncolor: white;\n\n}\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Antd/antd-popover%E6%A0%B7%E5%BC%8F%E6%9B%B4%E6%94%B9%E5%8F%8A%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3":{"title":"antd-popover样式更改，及参数详解","content":"---\n\n\n \n\n```html\n\u003cPopover\n     overlayClassName={ styles.ant_popover }//样式类\n     title={111}//标题\n     content={222}//内容\n     trigger='click'//触发方式-hover-focus\n     visible={show}//手动显示\n     placement=\"topLeft\"//相对页面内容，popover位置变化-共有12种方向\n     onVisibleChange={this.datePageChange}//popover焦点变化-聚焦-失焦\n \u003e\n     \u003cButton\u003eclick\u003c/Button\u003e//页面内容\n \u003c/Popover\u003e\n```   \n\n```css\n.pop{\n    :global{\n        .ant-popover-inner{\n            background-color: #2D3B5A;\n        }\n        .ant-popover-arrow-content {\n\n            --antd-arrow-background-color: #171F29!important;\n\n        }\n        .ant-popover-placement-top \u003e .ant-popover-content \u003e .ant-popover-arrow, .ant-popover-placement-topLeft \u003e .ant-popover-content \u003e .ant-popover-arrow, .ant-popover-placement-topRight \u003e .ant-popover-content \u003e .ant-popover-arrow{\n            border-right-color: #2d3b5a;\n            border-bottom-color: #2d3b5a;\n            background: #2d3b5a;\n        }\n    } \n}\n```\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Css/%E6%A0%B7%E5%BC%8F%E8%A7%84%E8%8C%83":{"title":"样式规范","content":"\n## ✍内容\n\u003enpx stylelint \"**/*.scss\" 查找不符合规范的属性\n\u003enpx stylelint --fix \"**/*.scss\" 自动修复不符合规范的属性\n\n\n\u003e stylelint-config-rational-order 用来规范 css 属性顺序，其提倡的顺序：  \n(1).positioning 位置属性  \n(2).box model 盒子属性  \n(3).typography 文字属性  \n(4).visual 视觉属性  \n(5).animation misc 其他\n`\n```css\n.declaration-order {\n\n  /* 1.Positioning 位置属性 */\n\n  position: absolute;\n\n  top: 0;\n\n  right: 0;\n\n  bottom: 0;\n\n  left: 0;\n\n  z-index: 10;\n\n  /* 2.Box Model 盒子属性 */\n\n  display: block;\n\n  float: right;\n\n  width: 100px;\n\n  height: 100px;\n\n  margin: 10px;\n\n  padding: 10px;\n\n  /* 3.Typography 文字属性 */\n\n  color: #888;\n\n  font: normal 16px Helvetica, sans-serif;\n\n  line-height: 1.3;\n\n  text-align: center;\n\n  /* 4.Visual 视觉属性 */\n\n  background-color: #eee;\n\n  border: 1px solid #888;\n\n  border-radius: 4px;\n\n  opacity: 1;\n\n  /* 5.Animation Misc 其他 */\n\n  transition: all 1s;\n\n  user-select: none;\n\n}\n```\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Css/CSS":{"title":"CSS","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: CSS\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Css]]**\n\t- [[样式规范]]\n\t- [[Grid 布局]]\n\t- [[SCSS]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Css/Grid-%E5%B8%83%E5%B1%80":{"title":"Grid 布局","content":"## Grid 布局是什么？\n\n`Grid` 布局即网格布局，是一种新的 `CSS` 布局模型，比较擅长将一个页面划分为几个主要区域，以及定义这些区域的大小、位置、层次等关系。号称是最强大的的 `CSS` 布局方案，是目前唯一一种 `CSS` 二维布局。利用 `Grid` 布局，我们可以轻松实现类似下图布局，[演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FqBbveKB%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/qBbveKB?editors=1100\")\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591885783dd~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n## Grid 布局和 flex 布局\n\n讲到布局，我们就会想到 `flex` 布局，甚至有人认为竟然有 `flex` 布局了，似乎没有必要去了解 `Grid` 布局。但 `flex` 布局和 `Grid` 布局有实质的区别，那就是 **`flex` 布局是一维布局，`Grid` 布局是二维布局**。`flex` 布局一次只能处理一个维度上的元素布局，一行或者一列。`Grid` 布局是将容器划分成了“行”和“列”，产生了一个个的网格，我们可以将网格元素放在与这些行和列相关的位置上，从而达到我们布局的目的。\n\n**`Grid` 布局远比 `flex` 布局强大！**\n\nflex布局示例:\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/28/173945aadff842d1~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\nGrid 布局示例：\n\n![Grid 布局](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895918bcb5190~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n## Grid 的一些基础概念\n\n我们使用 Grid 实现一个小例子，演示 Grid 的一些基础概念，[演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FQWyoexm%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/QWyoexm?editors=1100\")\n\n```angelscript\n\u003cdiv class=\"wrapper\"\u003e\n  \u003cdiv class=\"one item\"\u003eOne\u003c/div\u003e\n  \u003cdiv class=\"two item\"\u003eTwo\u003c/div\u003e\n  \u003cdiv class=\"three item\"\u003eThree\u003c/div\u003e\n  \u003cdiv class=\"four item\"\u003eFour\u003c/div\u003e\n  \u003cdiv class=\"five item\"\u003eFive\u003c/div\u003e\n  \u003cdiv class=\"six item\"\u003eSix\u003c/div\u003e\n\u003c/div\u003e复制代码\n```\n\n```css\n.wrapper {\n  margin: 60px;\n  /* 声明一个容器 */\n  display: grid;\n  /*  声明列的宽度  */\n  grid-template-columns: repeat(3, 200px);\n  /*  声明行间距和列间距  */\n  grid-gap: 20px;\n  /*  声明行的高度  */\n  grid-template-rows: 100px 200px;\n}\n.one {\n  background: #19CAAD;\n}\n.two { \n  background: #8CC7B5;\n}\n.three {\n  background: #D1BA74;\n}\n.four {\n  background: #BEE7E9;\n}\n.five {\n  background: #E6CEAC;\n}\n.six {\n  background: #ECAD9E;\n}\n.item {\n  text-align: center;\n  font-size: 200%;\n  color: #fff;\n}复制代码\n```\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895918bfd94e9~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n容器和项目：我们通过在元素上声明 `display：grid` 或 `display：inline-grid` 来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格项目。比如上面 `.wrapper` 所在的元素为一个网格容器，其直系子元素将成为网格项目。\n\n网格轨道：`grid-template-columns` 和 `grid-template-rows` 属性来定义网格中的行和列。容器内部的水平区域称为行，垂直区域称为列。上图中 `One`、`Two`、`Three` 组成了一行，`One`、`Four` 则是一列\n\n![行和列](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895918ee0ecb6~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n网格单元：一个网格单元是在一个网格元素中最小的单位， 从概念上来讲其实它和表格的一个单元格很像。上图中 `One`、`Two`、`Three`、`Four`...都是一个个的网格单元\n\n网格线：划分网格的线，称为\"网格线\"。应该注意的是，当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid 会为我们创建编号的网格线来让我们来定位每一个网格元素。m 列有 m + 1 根垂直的网格线，n 行有 n + 1 跟水平网格线。比如上图示例中就有 4 根垂直网格线。一般而言，是从左到右，从上到下，1，2，3 进行编号排序。当然也可以从右到左，从下到上，按照 -1，-2，-3...顺序进行编号排序\n\n![网格线](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591934e1560~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n## 容器属性介绍\n\n`Grid` 布局相关的属性以及值众多，需要记忆的不少，建议可以跟 `demo` 一起结合起来，边敲代码边理解，再利用一些空闲时间记忆一下。笔者会在介绍每个属性的时候，做个小 `demo` 演示，建议大家可以自己修改看看效果加深记忆\n\n`Grid` 布局属性可以分为两大类，一类是容器属性，一类是项目属性。我们先来看容器属性\n\n### display 属性\n\n[display 属性演示](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FwvMZwqY \"https://codepen.io/gpingfeng/pen/wvMZwqY\")\n\n我们通过在元素上声明 `display：grid` 或 `display：inline-grid` 来创建一个网格容器。声明 `display：grid` 则该容器是一个块级元素，设置成 `display: inline-grid` 则容器元素为行内元素\n\n```pgsql\n.wrapper {\n  display: grid;\n}复制代码\n```\n\n![块级元素](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591baa442ef~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n```pgsql\n.wrapper-1 {\n  display: inline-grid;\n}复制代码\n```\n\n![行内属性](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591c03b6883~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### grid-template-columns 属性和 grid-template-rows 属性\n\n[grid-template-columns 和 grid-template-rows 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FBajEBYq%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/BajEBYq?editors=1100\")\n\n`grid-template-columns` 属性设置列宽，`grid-template-rows` 属性设置行高，这两个属性在 `Grid` 布局中尤为重要，它们的值是有多种多样的，而且它们的设置是比较相似的，下面针对 `grid-template-columns` 属性进行讲解\n\n**固定的列宽和行高**\n\n```pgsql\n.wrapper {\n  display: grid;\n  /*  声明了三列，宽度分别为 200px 100px 200px */\n  grid-template-columns: 200px 100px 200px;\n  grid-gap: 5px;\n  /*  声明了两行，行高分别为 50px 50px  */\n  grid-template-rows: 50px 50px;\n}复制代码\n```\n\n以上表示固定列宽为 200px 100px 200px，行高为 50px 50px\n\n![固定行高和列宽](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591c0fc1214~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n**repeat() 函数**：可以简化重复的值。该函数接受两个参数，第一个参数是重复的次数，第二个参数是所要重复的值。比如上面行高都是一样的，我们可以这么去实现，实际效果是一模一样的\n\n```pgsql\n.wrapper-1 {\n  display: grid;\n  grid-template-columns: 200px 100px 200px;\n  grid-gap: 5px;\n  /*  2行，而且行高都为 50px  */\n  grid-template-rows: repeat(2, 50px);\n}复制代码\n```\n\n**auto-fill 关键字**：表示自动填充，让一行（或者一列）中尽可能的容纳更多的单元格。`grid-template-columns: repeat(auto-fill, 200px)` 表示列宽是 200 px，但列的数量是不固定的，只要浏览器能够容纳得下，就可以放置元素，代码以及效果如下图所示：\n\n```pgsql\n.wrapper-2 {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591c300e81a~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n**fr 关键字**：`Grid` 布局还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。`fr` 单位代表网格容器中可用空间的一等份。`grid-template-columns: 200px 1fr 2fr` 表示第一个列宽设置为 200px，后面剩余的宽度分为两部分，宽度分别为剩余宽度的 1/3 和 2/3。代码以及效果如下图所示：\n\n```pgsql\n.wrapper-3 {\n  display: grid;\n  grid-template-columns: 200px 1fr 2fr;\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591ccc256d1~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n**minmax() 函数**：我们有时候想给网格元素一个最小和最大的尺寸，`minmax()` 函数产生一个长度范围，表示长度就在这个范围之中都可以应用到网格项目中。它接受两个参数，分别为最小值和最大值。`grid-template-columns: 1fr 1fr minmax(300px, 2fr)` 的意思是，第三个列宽最少也是要 300px，但是最大不能大于第一第二列宽的两倍。代码以及效果如下：\n\n```pgsql\n.wrapper-4 {\n  display: grid;\n  grid-template-columns: 1fr 1fr minmax(300px, 2fr);\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591dc05edac~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n**auto 关键字**：由浏览器决定长度。通过 `auto` 关键字，我们可以轻易实现三列或者两列布局。`grid-template-columns: 100px auto 100px` 表示第一第三列为 100px，中间由浏览器决定长度，代码以及效果如下：\n\n```pgsql\n.wrapper-5 {\n  display: grid;\n  grid-template-columns: 100px auto 100px;\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591f2146e1d~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### grid-row-gap 属性、grid-column-gap 属性以及 grid-gap 属性\n\n[grid-row-gap 属性、grid-column-gap 属性以及 grid-gap 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FjOWRNeg \"https://codepen.io/gpingfeng/pen/jOWRNeg\")\n\n`grid-row-gap` 属性、`grid-column-gap` 属性分别设置行间距和列间距。`grid-gap` 属性是两者的简写形式。\n\n`grid-row-gap: 10px` 表示行间距是 10px，`grid-column-gap: 20px` 表示列间距是 20px。`grid-gap: 10px 20px` 实现的效果是一样的\n\n```pgsql\n.wrapper {\n  display: grid;\n  grid-template-columns: 200px 100px 100px;\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n```pgsql\n.wrapper-1 {\n  display: grid;\n  grid-template-columns: 200px 100px 100px;\n  grid-auto-rows: 50px;\n  grid-row-gap: 10px;\n  grid-column-gap: 20px;\n}复制代码\n```\n\n以上两种写法效果是一样的。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389591f78de6f2~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### grid-template-areas 属性\n\n[grid-area 以及 grid-template-areas演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FRwrObEJ%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/RwrObEJ?editors=1100\")\n\n`grid-template-areas` 属性用于定义区域，一个区域由一个或者多个单元格组成\n\n一般这个属性跟网格元素的 `grid-area` 一起使用，我们在这里一起介绍。 `grid-area` 属性指定项目放在哪一个区域\n\n```css\n.wrapper {\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: 120px  120px  120px;\n  grid-template-areas:\n    \". header  header\"\n    \"sidebar content content\";\n  background-color: #fff;\n  color: #444;\n}复制代码\n```\n\n上面代码表示划分出 6 个单元格，其中值得注意的是 `.` 符号代表空的单元格，也就是没有用到该单元格。\n\n```css\n.sidebar {\n  grid-area: sidebar;\n}\n\n.content {\n  grid-area: content;\n}\n\n.header {\n  grid-area: header;\n}复制代码\n```\n\n以上代码表示将类 `.sidebar` `.content` `.header`所在的元素放在上面 `grid-template-areas` 中定义的 `sidebar` `content` `header` 区域中\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895920bbe824a~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### grid-auto-flow 属性\n\n[grid-auto-flow 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FMWKRWKj%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/MWKRWKj?editors=1100\")\n\n`grid-auto-flow` 属性控制着自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列。默认的放置顺序是\"先行后列\"，即先填满第一行，再开始放入第二行，即下图英文数字的顺序 `one`,`two`,`three`...。这个顺序由 `grid-auto-flow` 属性决定，默认值是 `row`。\n\n```pgsql\n.wrapper {\n  display: grid;\n  grid-template-columns: 100px 200px 100px;\n  grid-auto-flow: row;\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895921548265c~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n细心的同学可能发现了一个问题，就是第五个项目和第六个项目之间有个空白（如下图所示），这个是由于第六块的长度大于了空白处的长度，被挤到了下一行导致的。在实际应用中，我们可能想让下面长度合适的填满这个空白，这个时候可以设置 `grid-auto-flow: row dense`，表示尽可能填满表格。代码以及效果如下所示：\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592211e1d6b~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n```pgsql\n.wrapper-2 {\n  display: grid;\n  grid-template-columns: 100px 200px 100px;\n  grid-auto-flow: row dense;\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895923612a19b~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n可以设置 `grid-auto-flow: column`，表示先列后行，代码以及效果如下图所示：\n\n```pgsql\n.wrapper-1 {\n  display: grid;\n  grid-auto-columns: 100px;\n  grid-auto-flow: column;\n  grid-gap: 5px;\n  grid-template-rows:  50px 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895923f11dd83~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### justify-items 属性、align-items 属性以及 place-items 属性\n\n[justify-items 属性、align-items 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FzYrXYrz%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/zYrXYrz?editors=1100\")\n\n`justify-items` 属性设置单元格内容的水平位置（左中右），`align-items` 属性设置单元格的垂直位置（上中下）\n\n下面以 justify-items 属性为例进行讲解，align-items 属性同理，只是方向为垂直方向。它们都有如下属性：\n\n```coq\n.container {\n  justify-items: start | end | center | stretch;\n  align-items: start | end | center | stretch;\n}复制代码\n```\n\n其代码实现以及效果如下：\n\n```pgsql\n.wrapper, .wrapper-1, .wrapper-2, .wrapper-3 {\n  display: grid;\n  grid-template-columns: 100px 200px 100px;\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n  justify-items: start;\n}\n.wrapper-1 {\n  justify-items: end;\n}\n.wrapper-2 {\n  justify-items: center;\n}\n.wrapper-3 {\n  justify-items: stretch;\n}复制代码\n```\n\n-   start：对齐单元格的起始边缘\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/1738959244947d96~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n-   end：对齐单元格的结束边缘\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592560e3fc2~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n-   center：单元格内部居中\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895925bd879fa~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n-   stretch：拉伸，占满单元格的整个宽度（默认值）\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/1738959270057d0c~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### justify-content 属性、align-content 属性以及 place-content 属性\n\n[justify-content 属性、align-content 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FqBbwBZx%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/qBbwBZx?editors=1100\")\n\n`justify-content` 属性是整个内容区域在容器里面的水平位置（左中右），`align-content` 属性是整个内容区域的垂直位置（上中下）。它们都有如下的属性值。\n\n```applescript\n.container {\n  justify-content: start | end | center | stretch | space-around | space-between | space-evenly;\n  align-content: start | end | center | stretch | space-around | space-between | space-evenly;  \n}复制代码\n```\n\n下面以 `justify-content` 属性为例进行讲解，`align-content` 属性同理，只是方向为垂直方向\n\n-   start - 对齐容器的起始边框\n-   end - 对齐容器的结束边框\n-   center - 容器内部居中\n\n```pgsql\n.wrapper, .wrapper-1, .wrapper-2, .wrapper-3, .wrapper-4, .wrapper-5, .wrapper-6 {\n  display: grid;\n  grid-template-columns: 100px 200px 100px;\n  grid-gap: 5px;\n  grid-auto-rows: 50px;\n  justify-content: start;\n}\n.wrapper-1 {\n  justify-content: end;\n}\n.wrapper-2 {\n  justify-content: center;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895926d20f5d6~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n-   space-around - 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍\n-   space-between - 项目与项目的间隔相等，项目与容器边框之间没有间隔\n-   space-evenly - 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔\n-   stretch - 项目大小没有指定时，拉伸占据整个网格容器\n\n```pgsql\n.wrapper-3 {\n  justify-content: space-around;\n}\n.wrapper-4 {\n  justify-content: space-between;\n}\n.wrapper-5 {\n  justify-content: space-evenly;\n}\n.wrapper-6 {\n  justify-content: stretch;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895927ba770c4~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### grid-auto-columns 属性和 grid-auto-rows 属性\n\n[grid-auto-columns 属性和 grid-auto-rows 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FzYrXvYZ%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/zYrXvYZ?editors=1100\")\n\n在讲 `grid-auto-columns` 属性和 `grid-auto-rows` 属性之前，先来看看隐式和显式网格的概念\n\n**隐式和显式网格**：显式网格包含了你在 `grid-template-columns` 和 `grid-template-rows` 属性中定义的行和列。如果你在网格定义之外又放了一些东西，或者因为内容的数量而需要的更多网格轨道的时候，网格将会在隐式网格中创建行和列\n\n假如有多余的网格（也就是上面提到的隐式网格），那么它的行高和列宽可以根据 `grid-auto-columns` 属性和 `grid-auto-rows` 属性设置。它们的写法和`grid-template-columns` 和 `grid-template-rows` 完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高\n\n```pgsql\n.wrapper {\n  display: grid;\n  grid-template-columns: 200px 100px;\n/*  只设置了两行，但实际的数量会超出两行，超出的行高会以 grid-auto-rows 算 */\n  grid-template-rows: 100px 100px;\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n`grid-template-columns` 属性和 `grid-template-rows` 属性只是指定了两行两列，但实际有九个元素，就会产生隐式网格。通过 `grid-auto-rows` 可以指定隐式网格的行高为 50px\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895927d99af1c~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n## 项目属性介绍\n\n### grid-column-start 属性、grid-column-end 属性、grid-row-start 属性以及grid-row-end 属性\n\n[演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FPoZgopr \"https://codepen.io/gpingfeng/pen/PoZgopr\")\n\n可以指定网格项目所在的四个边框，分别定位在哪根网格线，从而指定项目的位置\n\n-   grid-column-start 属性：左边框所在的垂直网格线\n-   grid-column-end 属性：右边框所在的垂直网格线\n-   grid-row-start 属性：上边框所在的水平网格线\n-   grid-row-end 属性：下边框所在的水平网格线\n\n```css\n.wrapper {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  grid-auto-rows: minmax(100px, auto);\n}\n.one {\n  grid-column-start: 1;\n  grid-column-end: 2;\n  background: #19CAAD;\n}\n.two { \n  grid-column-start: 2;\n  grid-column-end: 4;\n  grid-row-start: 1;\n  grid-row-end: 2;\n  /*   如果有重叠，就使用 z-index */\n  z-index: 1;\n  background: #8CC7B5;\n}\n.three {\n  grid-column-start: 3;\n  grid-column-end: 4;\n  grid-row-start: 1;\n  grid-row-end: 4;\n  background: #D1BA74;\n}\n.four {\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 2;\n  grid-row-end: 5;\n  background: #BEE7E9;\n}\n.five {\n  grid-column-start: 2;\n  grid-column-end: 2;\n  grid-row-start: 2;\n  grid-row-end: 5;\n  background: #E6CEAC;\n}\n.six {\n  grid-column: 3;\n  grid-row: 4;\n  background: #ECAD9E;\n}复制代码\n```\n\n上面代码中，类 `.two` 所在的网格项目，垂直网格线是从 2 到 4，水平网格线是从 1 到 2。其中它跟 `.three` （垂直网格线是从3 到 4，水平网格线是从 1 到 4） 是有冲突的。可以设置 `z-index` 去决定它们的层级关系\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/173895928bc7e88e~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### grid-area 属性\n\n`grid-area` 属性指定项目放在哪一个区域，在上面介绍 `grid-template-areas` 的时候有提到过，这里不再具体展开，具体的使用可以参考演示地址：\n\n[grid-area 以及 grid-template-areas 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FRwrObEJ \"https://codepen.io/gpingfeng/pen/RwrObEJ\")\n\n### justify-self 属性、align-self 属性以及 place-self 属性\n\n[justify-self 属性/ align-self 属性/ place-self 属性演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FZEQZEJK%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/ZEQZEJK?editors=1100\")\n\n`justify-self` 属性设置单元格内容的水平位置（左中右），跟 `justify-items` 属性的用法完全一致，但只作用于单个项目\n\n`align-self` 属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目\n\n两者很相像，这里只拿 `justify-self` 属性演示，`align-self` 属性同理，只是作用于垂直方向。`place-self` 是设置 `align-self` 和 `justify-self` 的简写形式，这里也不重复介绍。\n\n```coq\n.item {\n  justify-self: start | end | center | stretch;\n  align-self: start | end | center | stretch;\n}复制代码\n```\n\n```applescript\n.item {\n  justify-self: start;\n}\n.item-1 {\n  justify-self: end;\n}\n.item-2 {\n  justify-self: center;\n}\n.item-3 {\n  justify-self: stretch;\n}复制代码\n```\n\n-   start：对齐单元格的起始边缘\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/1738959292160e78~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n-   end：对齐单元格的结束边缘\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592a0d5a3c0~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n-   center：单元格内部居中\n    \n    ![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592b1378c8d~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n    \n-   stretch：拉伸，占满单元格的整个宽度（默认值）\n    \n    ![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592b895f0ed~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n    \n\n## Grid 实战——实现响应式布局\n\n经过上面的介绍，相信大家都可以看出，Grid 是非常强大的。一些常见的 CSS 布局，如居中，两列布局，三列布局等等是很容易实现的。我们接下来看看 Grid 布局是如何实现响应式布局的\n\n### fr 实现等分响应式\n\n[fr 实现等分响应式](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FwvMZKpB%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/wvMZKpB?editors=1100\")\n\n`fr` 等分单位，可以将容器的可用空间分成想要的多个等分空间。利用这个特性，我们能够轻易实现一个等分响应式。`grid-template-columns: 1fr 1fr 1fr` 表示容器分为三等分\n\n```pgsql\n.wrapper {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592bf7e44dd~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### repeat + auto-fit——固定列宽，改变列数量\n\n等分布局并不只有 `Grid` 布局才有，像 `flex` 布局也能轻松实现，接下来看看更高级的响应式\n\n上面例子的始终都是三列的，但是需求往往希望我们的网格能够固定列宽，并根据容器的宽度来改变列的数量。这个时候，我们可以用到上面提到 `repeat()` 函数以及 `auto-fit` 关键字。`grid-template-columns: repeat(auto-fit, 200px)` 表示固定列宽为 200px，数量是自适应的，只要容纳得下，就会往上排列，代码以及效果实现如下：\n\n[演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FeYJopVE%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/eYJopVE?editors=1100\")\n\n```pgsql\n.wrapper {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592c297495a~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### repeat+auto-fit+minmax 去掉右侧空白\n\n上面看到的效果中，右侧通常会留下空白，这是我们不希望看到的。如果列的宽度也能在某个范围内自适应就好了。`minmax()` 函数就帮助我们做到了这点。将 `grid-template-columns: repeat(auto-fit, 200px)` 改成 `grid-template-columns: repeat(auto-fit, minmax(200px, 1fr))` 表示列宽至少 200px，如果还有空余则一起等分。代码以及效果如下所示：\n\n[演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FdyGLYdQ \"https://codepen.io/gpingfeng/pen/dyGLYdQ\")\n\n```pgsql\n.wrapper {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}复制代码\n```\n\n![auto-auto-minmax.gif](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592cc3c2bf9~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n### repeat+auto-fit+minmax-span-dense 解决空缺问题\n\n似乎一切进行得很顺利，但是某天 UI 来说，每个网格元素的长度可能不相同，这也简单，通过 `span` 关键字进行设置网格项目的跨度，`grid-column-start: span 3`，表示这个网格项目跨度为 3。具体的代码与效果如下所示：\n\n```css\n.item-3 {\n  grid-column-start: span 3;\n}复制代码\n```\n\n[演示地址](https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fgpingfeng%2Fpen%2FBajEoxy%3Feditors%3D1100 \"https://codepen.io/gpingfeng/pen/BajEoxy?editors=1100\")\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592f9da3763~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n不对，怎么右侧又有空白了？原来是有一些长度太长了，放不下，这个时候就到我们的 `dense` 关键字出场了。`grid-auto-flow: row dense` 表示尽可能填充，而不留空白，代码以及效果如下所示：\n\n```pgsql\n.wrapper, .wrapper-1 {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}\n\n.wrapper-1 {\n  grid-auto-flow: row dense;\n}复制代码\n```\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389593009f7fe7~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n## Grid 布局兼容性\n\n最后，聊聊 `Grid` 布局兼容性问题，在 [caniuse](https://link.juejin.cn?target=https%3A%2F%2Fcaniuse.com%2F%23search%3Dgrid \"https://caniuse.com/#search=grid\") 中，我们可以看到的结果如下，总体兼容性还不错，但在 IE 10 以下不支持。个人建议在公司的内部系统运用起来是没有问题的，但 TOC 的话，可能目前还是不太合适\n\n![image](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/26/17389592fa541366~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\n\n## 参考\n\n[常见的 Grid 布局用例](https://link.juejin.cn?target=https%3A%2F%2Fgridbyexample.com%2Fexamples%2F \"https://gridbyexample.com/examples/\")\n\n[CSS Grid 网格布局教程](https://link.juejin.cn?target=https%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2019%2F03%2Fgrid-layout-tutorial.html \"https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html\")\n\n[Grid 布局草案](https://link.juejin.cn?target=https%3A%2F%2Fdrafts.csswg.org%2Fcss-grid%2F%23intro \"https://drafts.csswg.org/css-grid/#intro\")\n\n[一行 CSS 代码实现响应式布局 – 使用 Grid 实现的响应式布局](https://link.juejin.cn?target=https%3A%2F%2Fwww.html.cn%2Farchives%2F8706 \"https://www.html.cn/archives/8706\")\n\n[MDN](https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2FCSS_Grid_Layout%2FBasic_Concepts_of_Grid_Layout \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout\")\n\n  \n\n作者：Gopal  \n链接：https://juejin.cn/post/6854573220306255880  \n来源：稀土掘金  \n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Css/SCSS":{"title":"SCSS","content":"\n## ✍内容\n## 混合（Mixins）\n\nCSS 中的一些东西编写起来有点乏味，尤其是对于 CSS3 和存在的许多供应商前缀。mixin 允许您创建要在整个站点中重复使用的 CSS 声明组。您甚至可以传入值以使您的混合更加灵活。mixin 的一个很好的用法是用于供应商前缀。下面是 的示例。`transform`\n\n-   [SCSS](https://sass.bootcss.com/guide#example-4-scss)\n-   [SASS](https://sass.bootcss.com/guide#example-4-sass)\n-   [.CSS](https://sass.bootcss.com/guide#example-4-css)\n\n### SCSS\n\n```SCSS\n@mixin transform($property) {\n  -webkit-transform: $property;\n  -ms-transform: $property;\n  transform: $property;\n}\n.box { @include transform(rotate(30deg)); }\n```\n\n### .CSS输出\n\n```CSS\n.box {\n  -webkit-transform: rotate(30deg);\n  -ms-transform: rotate(30deg);\n  transform: rotate(30deg);\n}\n\n```\n\n\u003e要创建 mixin，请使用该指令并为其命名。我们命名了我们的混合蛋白。我们还在括号中使用变量，以便我们可以传入我们想要的任何变换。创建 mixin 后，您可以将其用作 CSS 声明，开头为后跟 mixin 的名称。`@mixin``transform``$property``@include`\n\n%是 scss 中的一种特殊的选择器，用来定义一个占位符选择器（placeholder selector）。占位符选择器可以被其他选择器继承，但是不会被编译成 CSS 代码。这样可以避免生成多余的 CSS 代码，提高性能和可维护性。\n\n## 扩展/继承\n\n这是 Sass 最有用的功能之一。使用允许您从一个选择器共享一组 CSS 属性到另一个选择器。它有助于保持你的Sass非常干燥。在我们的示例中，我们将使用另一个功能为错误、警告和成功创建一系列简单的消息传递，该功能与扩展占位符类齐头并进。占位符类是一种特殊类型的类，仅在扩展时打印，可以帮助保持编译的 CSS 整洁干净。`@extend`\n\n-   [南海](https://sass.bootcss.com/guide#example-5-scss)\n-   [萨斯](https://sass.bootcss.com/guide#example-5-sass)\n-   [.CSS](https://sass.bootcss.com/guide#example-5-css)\n\n### scss语法\n\n```scss\n/* This CSS will print because %message-shared is extended. */\n%message-shared\n  border: 1px solid #ccc\n  padding: 10px\n  color: #333\n\n\n// This CSS won't print because %equal-heights is never extended.\n%equal-heights\n  display: flex\n  flex-wrap: wrap\n\n\n.message\n  @extend %message-shared\n\n\n.success\n  @extend %message-shared\n  border-color: green\n\n\n.error\n  @extend %message-shared\n  border-color: red\n\n\n.warning\n  @extend %message-shared\n  border-color: yellow\n\n```\n\n```css\n/* This CSS will print because %message-shared is extended. */\n.message, .success, .error, .warning {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: #333;\n}\n\n.success {\n  border-color: green;\n}\n\n.error {\n  border-color: red;\n}\n\n.warning {\n  border-color: yellow;\n}\n```\n\n上面的代码所做的是告诉 、、 和行为就像 .这意味着任何出现的地方，、、、和将会出现。神奇的事情发生在生成的 CSS 中，其中每个类都将获得与 相同的 CSS 属性。这有助于您避免在 HTML 元素上编写多个类名。`.message``.success``.error``.warning``%message-shared``%message-shared``.message``.success``.error``.warning``%message-shared`\n\n除了 Sass 中的占位符类之外，您还可以扩展大多数简单的 CSS 选择器，但使用占位符是确保不会扩展嵌套在样式中其他位置的类的最简单方法，这可能会导致 CSS 中出现意外的选择器。\n\n请注意，不会生成 中的 CSS，因为永远不会扩展。`%equal-heights``%equal-heights`","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Css/udemy":{"title":"{{title}}","content":"\n## ✍内容\n\n### background -size\n `background-size` 设置背景图片大小。图片可以保有其原有的尺寸，或者拉伸到新的尺寸，或者在保持其原有比例的同时缩放到元素的可用空间的尺寸。\n### background-position\n **`background-position`** [CSS](https://developer.mozilla.org/zh-CN/docs/Web/CSS) 属性为每一个背景图片设置初始位置。这个位置是相对于由 [`background-origin`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-origin) 定义的位置图层的。窗口大小改变时设置按照哪个方向保持不变\n ### linear-gradient()\n CSS **`linear-gradient()`** 函数用于创建一个表示两种或多种颜色线性渐变的图片。其结果属于[`\u003cgradient\u003e`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient)数据类型，是一种特别的[`\u003cimage\u003e`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/image)数据类型。\n\n### clip-path\n**`clip-path`** [CSS](https://developer.mozilla.org/zh-CN/docs/Web/CSS) 属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/DigitalGarden":{"title":"DigitalGarden","content":"---\ncssclass: kanban gridlist noyaml\ntitle: DigitalGarden\ntag: moc\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[DigitalGarden]]**\n\t- [[常用快捷键]]\n\t- [[配置环境]]\n\t- [[杂技]]\n\t- **[[Algorithms]]**\n\t- **[[Antd]]**\n\t- [[catalogue]]\n\t- **Css**\n\t\t- [[样式规范]]\n\t\t- [[CSS]]\n\t\t- [[Grid 布局]]\n\t\t- [[SCSS]]\n\t\t- [[udemy]]\n\t- **[[git]]**\n\t- **JavaScript**\n\t\t- [[迭代器和生成器]]\n\t\t- **[[数组]]**\n\t\t- [[Aarry]]\n\t\t- [[for...in for...of]]\n\t\t- [[JavaScript and React]]\n\t\t- [[JAVASCRIPT]]\n\t\t- [[Object Oriented]]\n\t- [[MarkDown语法 超详细教程]]\n\t- **MongoDB**\n\t\t- [[基础操作]]\n\t\t- [[Question]]\n\t- **[[Nebulas]]**\n\t- **[[NextJs]]**\n\t- **[[Node]]**\n\t- **React**\n\t\t- [[处理数据加载情况 无 错误 加载中]]\n\t\t- [[防抖]]\n\t\t- [[简单介绍就能理解的 React Portals（传送门）]]\n\t\t- [[使用自定义钩子处理表单]]\n\t\t- [[颜色选择器]]\n\t\t- [[http自定义钩子]]\n\t\t- [[react css解决方案]]\n\t\t- [[REACT]]\n\t\t- [[React动态样式+useReducer]]\n\t\t- [[React扩展]]\n\t\t- [[React受控组件和非受控组件]]\n\t\t- [[React优化 适用于复杂的页面]]\n\t\t- [[Redux+React-redux]]\n\t\t- [[ReduxTool]]\n\t\t- [[Ref扩展]]\n\t- **Typescript**\n\t\t- [[TypeScript Fundamentals]]\n\t\t- [[TYPESCRIPT]]\n\t- [[Vscode快捷键]]\n\t- **[[WebGL]]**\n\t- **[[WebStorage]]**\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84":{"title":"数组","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[数组]]**\n\t- [[Array.prototype.at()]]\n\t- [[Array.prototype.flat()]]\n\t- [[Array.prototype.includes()]]\n\t- [[Array.prototype.reduce()]]\n\t- [[String.prototype.trim()]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.at":{"title":"Array.prototype.at()","content":"# Array.prototype.at()\n\n\u003e **`at()`** 方法接收一个整数值并返回该索引对应的元素，允许正数和负数。负整数从数组中的最后一个元素开始倒数。\n\n```js\nconst array1 = [5, 12,8, 130, 44];\n\nlet index = 2;\n\nconsole.log(`Using an index of ${index} the item returned is ${array1.at(index)}`);\n// Expected output: \"Using an index of 2 the item returned is 8\"\n\nindex = -1;\n\nconsole.log(`Using an index of ${index} item returned is ${array1.at(index)}`);\n// Expected output: \"Using an index of -2 item returned is 130\"\n```\n\n## [语法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at#%E8%AF%AD%E6%B3%95)\n\n```\nat(index)\n```\n\n### [参数](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at#%E5%8F%82%E6%95%B0)\n\n`index`\n\n要返回的数组元素的索引（位置）。当传递负数时，支持从数组末端开始的相对索引；也就是说，如果使用负数，返回的元素将从数组的末端开始倒数。\n\n### [返回值](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at#%E8%BF%94%E5%9B%9E%E5%80%BC)\n\n匹配给定索引的数组中的元素。如果找不到指定的索引，则返回 [`undefined`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined)。\n\n## [示例](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at#%E7%A4%BA%E4%BE%8B)\n\n### [返回数组的最后一个值](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at#%E8%BF%94%E5%9B%9E%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%80%BC)\n\n下面的示例提供了一个函数，它返回在一个指定的数组中找到的最后一个元素。\n\n```\n// 数组及数组元素\nconst cart = ['apple', 'banana', 'pear'];\n\n// 一个函数，用于返回给定数组的最后一个元素\nfunction returnLast(arr) {\n  return arr.at(-1);\n}\n\n// 获取 'cart' 数组的最后一个元素\nconst item1 = returnLast(cart);\nconsole.log(item1); // 输出：'pear'\n\n// 在 'cart' 数组中添加一个元素\ncart.push('orange');\nconst item2 = returnLast(cart);\nconsole.log(item2); // 输出：'orange'\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.flat":{"title":"{{title}}","content":"\n## ✍内容\n# Array.prototype.flat()\n**`flat()`** 方法创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。\n```js\nconst arr1 = [0, 1, 2, [3, 4]];\n\nconsole.log(arr1.flat());\n// Expected output: Array [0, 1, 2, 3, 4]\n\nconst arr2 = [0, 1, 2, [[[3, 4]]]];\n\nconsole.log(arr2.flat(2));\n// Expected output: Array [0, 1, 2, Array [3, 4]]\n```\n\n# Array.prototype.flatMap()\n\n```js\nconst arr1 = [1, 2, 3, 4];\n\narr1.map((x) =\u003e [x * 2]);\n// [[2], [4], [6], [8]]\n\narr1.flatMap((x) =\u003e [x * 2]);\n// [2, 4, 6, 8]\n\n// 只有一层被展平\narr1.flatMap((x) =\u003e [[x * 2]]);\n// [[2], [4], [6], [8]]\n```\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.includes":{"title":"Array.prototype.includes()","content":"# Array.prototype.includes()\n\n**`includes()`** 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 `true`，否则返回 `false`。\n\n## [尝试一下](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E5%B0%9D%E8%AF%95%E4%B8%80%E4%B8%8B)\n\n## [语法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E8%AF%AD%E6%B3%95)\n\n```\nincludes(searchElement)\nincludes(searchElement, fromIndex)\n```\n\nCopy to Clipboard\n\n### [参数](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E5%8F%82%E6%95%B0)\n\n`searchElement`\n\n需要查找的元素值。\n\n**备注：** 使用 `includes()` 比较字符串和字符时是区分大小写的。\n\n`fromIndex` 可选\n\n从`fromIndex` 索引处开始查找 `searchElement`。如果为负值，则按升序从 `array.length + fromIndex` 的索引开始搜（即使从末尾开始往前跳 `fromIndex` 的绝对值个索引，然后往后搜寻）。默认为 0。\n\n### [返回值](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E8%BF%94%E5%9B%9E%E5%80%BC)\n\n返回一个布尔值 [`Boolean`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean) 。 如果在数组中（或 `fromIndex` 指定的范围中）找到了 `searchElement`，则返回 `true`，否则返回 `false`。\n\n0 的值将全部视为相等，与符号无关（即 -0 与 0 和 +0 相等），但 `false` 不被认为与 0 相等。\n\n**备注：** 技术上来讲，`includes()` 使用 [`零值相等`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness#%E9%9B%B6%E5%80%BC%E7%9B%B8%E7%AD%89) 算法来确定是否找到给定的元素。\n\n## [示例](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E7%A4%BA%E4%BE%8B)\n\n```\n[1, 2, 3].includes(2);     // true\n[1, 2, 3].includes(4);     // false\n[1, 2, 3].includes(3, 3);  // false\n[1, 2, 3].includes(3, -1); // true\n[1, 2, NaN].includes(NaN); // true\n```\n\nCopy to Clipboard\n\n### [fromIndex 大于等于数组长度](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#fromindex_%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6)\n\n如果 `fromIndex` 大于等于数组的长度，则将直接返回 `false`，且不搜索该数组。\n\n```\nvar arr = ['a', 'b', 'c'];\n\narr.includes('c', 3);   // false\narr.includes('c', 100); // false\n```\n\nCopy to Clipboard\n\n### [计算出的索引小于 0](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E8%AE%A1%E7%AE%97%E5%87%BA%E7%9A%84%E7%B4%A2%E5%BC%95%E5%B0%8F%E4%BA%8E_0)\n\n如果 `fromIndex` 为负值，计算出的索引将作为开始搜索`searchElement`的位置。如果计算出的索引小于 0，则整个数组都会被搜索。\n\n```\n// array length is 3\n// fromIndex is -100\n// computed index is 3 + (-100) = -97\n\nvar arr = ['a', 'b', 'c'];\n\narr.includes('a', -100); // true\narr.includes('b', -100); // true\narr.includes('c', -100); // true\narr.includes('a', -2); // false\n```\n\nCopy to Clipboard\n\n### [作为通用方法的 includes()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E4%BD%9C%E4%B8%BA%E9%80%9A%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84_includes)\n\n`includes()` 方法有意设计为通用方法。它不要求`this`值是数组对象，所以它可以被用于其他类型的对象 (比如类数组对象)。下面的例子展示了 在函数的 [arguments](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments) 对象上调用的 `includes()` 方法。\n\n```\n(function() {\n  console.log([].includes.call(arguments, 'a')); // true\n  console.log([].includes.call(arguments, 'd')); // false\n})('a','b','c');\n```\n\nCopy to Clipboard\n\n## [规范](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#%E8%A7%84%E8%8C%83)","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.reduce":{"title":"Array.prototype.reduce()","content":"\n# [Array.prototype.reduce() - JavaScript | MDN (mozilla.org)](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)\n\n**`reduce()`** 方法对数组中的每个元素按序执行一个由您提供的 **reducer** 函数，每一次运行 **reducer** 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值。\n\n第一次执行回调函数时，不存在“上一次的计算结果”。如果需要回调函数从数组索引为 0 的元素开始执行，则需要传递初始值。否则，数组索引为 0 的元素将被作为初始值 _initialValue_，迭代器将从第二个元素开始执行（索引为 1 而不是 0）。\n\n下面的例子能够帮助你理解 `reduce()` 的用处——计算数组所有元素的总和：\n## [尝试一下](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#%E5%B0%9D%E8%AF%95%E4%B8%80%E4%B8%8B)\n\u003e常见用法求和\n```js\nlet sum = [0, 1, 2, 3].reduce(function (previousValue, currentValue) {\n  return previousValue + currentValue\n}, 0)\n// sum is 6\n\n**reducer** 逐个遍历数组元素，每一步都将当前元素的值与上一步的计算结果相加（上一步的计算结果是当前元素之前所有元素的总和）——直到没有更多的元素被相加。\n```\n\n## [语法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#%E8%AF%AD%E6%B3%95)\n\n```\n// 箭头函数\nreduce((previousValue, currentValue) =\u003e { /* … */ } )\nreduce((previousValue, currentValue, currentIndex) =\u003e { /* … */ } )\nreduce((previousValue, currentValue, currentIndex, array) =\u003e { /* … */ } )\n\nreduce((previousValue, currentValue) =\u003e { /* … */ } , initialValue)\nreduce((previousValue, currentValue, currentIndex) =\u003e { /* … */ } , initialValue)\nreduce((previousValue, currentValue, currentIndex, array) =\u003e { /* … */ }, initialValue)\n\n// 回调函数\nreduce(callbackFn)\nreduce(callbackFn, initialValue)\n\n// 内联回调函数\nreduce(function(previousValue, currentValue) { /* … */ })\nreduce(function(previousValue, currentValue, currentIndex) { /* … */ })\nreduce(function(previousValue, currentValue, currentIndex, array) { /* … */ })\n\nreduce(function(previousValue, currentValue) { /* … */ }, initialValue)\nreduce(function(previousValue, currentValue, currentIndex) { /* … */ }, initialValue)\nreduce(function(previousValue, currentValue, currentIndex, array) { /* … */ }, initialValue)\n```\n\n### [参数](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#%E5%8F%82%E6%95%B0)\n`callbackFn`\n\n一个“reducer”函数，包含四个参数：\n\n-   `previousValue`：上一次调用 `callbackFn` 时的返回值。在第一次调用时，若指定了初始值 `initialValue`，其值则为 `initialValue`，否则为数组索引为 0 的元素 `array[0]`。\n-   `currentValue`：数组中正在处理的元素。在第一次调用时，若指定了初始值 `initialValue`，其值则为数组索引为 0 的元素 `array[0]`，否则为 `array[1]`。\n-   `currentIndex`：数组中正在处理的元素的索引。若指定了初始值 `initialValue`，则起始索引号为 0，否则从索引 1 起始。\n-   `array`：用于遍历的数组。\n\n`initialValue` 可选\n\n作为第一次调用 `callback` 函数时参数 _previousValue_ 的值。若指定了初始值 `initialValue`，则 `currentValue` 则将使用数组第一个元素；否则 `previousValue` 将使用数组第一个元素，而 `currentValue` 将使用数组第二个元素\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e 7cdf15a65fae3d3a232b5f58f142594ab9aa4eea\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E6%95%B0%E7%BB%84/String.prototype.trim":{"title":"String.prototype.trim()","content":"# String.prototype.trim()\n\n**`trim()`** 方法从字符串的两端清除空格，返回一个新的字符串，而不修改原始字符串。此上下文中的空格是指所有的空白字符（空格、tab、不换行空格等）以及所有行终止符字符（如 LF、CR 等）。\n\n## [尝试一下](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim#%E5%B0%9D%E8%AF%95%E4%B8%80%E4%B8%8B)\n\n## [语法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim#%E8%AF%AD%E6%B3%95)\n\n```\ntrim()\n```\n\nCopy to Clipboard\n\n### [返回值](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim#%E8%BF%94%E5%9B%9E%E5%80%BC)\n\n一个表示 `str` 去掉了开头和结尾的空白字符后的新字符串。\n\n如果 `str` 的开头和结尾都没有空白字符，仍然会返回一个新字符串（本质上是 `str` 的副本），而不会抛出异常。\n\n要返回一个只从一端删除空白字符的新字符串，可以使用 [`trimStart()`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart) 或 [`trimEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd)。\n\n## [示例](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim#%E7%A4%BA%E4%BE%8B)\n\n### [使用 `trim()`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim#%E4%BD%BF%E7%94%A8_trim)\n\n下面的例子显示小写字符串 `'foo'`：\n\n```\nconst orig = \"   foo  \";\nconsole.log(orig.trim()); // 'foo'\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E7%90%86%E8%AE%BA/%E6%9C%AA%E5%91%BD%E5%90%8D":{"title":"未命名","content":"","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%92%8C%E7%94%9F%E6%88%90%E5%99%A8":{"title":"迭代器和生成器","content":"\n# 迭代器和生成器\n\n## 迭代器\n![[../../../BT_Example/99-Attach/Pasted image 20230413140400.png]]\n\n\u003e 依次打印hello\n```js\nlet str = 'hello';\n\n  \n\nfor (let it = str[Symbol.iterator](), v, result; (result = it.next()) \u0026\u0026 !result.done \u0026\u0026 (v = result.value || true); ) {\n\n    console.log(v);\n\n}\n```\n\n简单点\n```js\nlet it1 = str[Symbol.iterator]();\n\nfor (let v of it1) {\n\n    console.log(v);\n\n}\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/Aarry":{"title":"Aarry","content":"![[Array.prototype.at()]]","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/JAVASCRIPT":{"title":"JAVASCRIPT","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: JavaScript\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[JavaScript]]**\n\t- **[[数组/数组]]**\n\t- [[Aarry]]\n\t- [[Object Oriented]]\n\t- [[JavaScript and React]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/JavaScript-and-React":{"title":"JavaScript and React","content":"\n##  Object.freeze() \n**`Object.freeze()`** 方法可以**冻结**一个对象。一个被冻结的对象再也不能被修改；冻结了一个对象则不能向这个对象添加新的属性，不能删除已有属性，不能修改该对象已有属性的可枚举性、可配置性、可写性，以及不能修改已有属性的值。此外，冻结一个对象后该对象的原型也不能被修改。`freeze()` 返回和传入的参数相同的对象。\n\n\u003e[!question]\n\u003e代理\n\u003e做验证\n\n```js\nconst user = {\n\n    firstName: 'John',\n\n    lastName: 'Doe',\n\n    age: 30,\n\n    email: 'TEST@TEST.com',\n\n    address: {\n\n        street: '50 Main st',\n\n        city: 'Boston',\n\n        state: 'MA',\n\n    },\n\n};\n\nconst handler = {\n\n    get: function (target, property) {\n\n        console.log(123, target, 456, property);\n\n  \n\n        if (property === 'email') {\n\n            console.log('My name is email');\n\n        }\n\n        return property in target ? target[property] : 'Not found';\n\n    },\n\n    set: function (target, property, value) {\n\n        console.log(target, property, value);\n\n    },\n\n};\n\nconst proxy = new Proxy(user, handler);\n\nproxy.email;\n\nproxy.firstName;\n```\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/Object-Oriented":{"title":"ObjectOriented","content":"\n## 对象\n\u003e增量函数\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/202303031610722.png)\n\n\u003e 函数创建对象\n\u003e ![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/202303031613560.png)\n\n---\n## 原型\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/202303060957593.png)\n\n\u003e Object.create() 方法用于创建一个新对象，使用现有的对象来作为新创建对象的原型（prototype）。\n\n\n### New\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230306103553.png)\n\n\u003e既是函数又是对象\n\u003e![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230306103949.png)\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230306104441.png)\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230306114017.png)\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230307174126.png)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230307175327.png)\n\u003e good\n\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230307175353.png)\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230307180239.png)\n\n---\n## 默认原型链\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230307180635.png)\n\n### 函数原型和数组原型\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230308094243.png)\n\n## 工厂函数\n### 子类化和继承简介\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230310154716.png)\n\n### 使用工厂函数创建对象\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230310160653.png)\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230310160933.png)\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/JavaScript/for...in-for...of":{"title":"{{title}}","content":"\n## ✍内容\n# For... In\n## [为什么用 for ... in?](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in#%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8_for_..._in)\n\n`for ... in`是为遍历对象属性而构建的，不建议与数组一起使用，数组可以用`Array.prototype.forEach()`和`for ... of`，那么`for ... in`的到底有什么用呢？\n\n它最常用的地方应该是用于调试，可以更方便的去检查对象属性（通过输出到控制台或其他方式）。尽管对于处理存储数据，数组更实用些，但是你在处理有`key-value`数据（比如属性用作“键”），需要检查其中的任何键是否为某值的情况时，还是推荐用`for ... in`。\n```js\nvar obj = {a:1, b:2, c:3};\n\nfor (var prop in obj) {\n  console.log(\"obj.\" + prop + \" = \" + obj[prop]);\n}\n\n// Output:\n// \"obj.a = 1\"\n// \"obj.b = 2\"\n// \"obj.c = 3\"\n```\n\n\n# For... Of\n\n**`for...of` 语句**在[可迭代对象](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols)（包括 [`Array`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array)，[`Map`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map)，[`Set`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set)，[`String`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String)，[`TypedArray`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray)，[arguments](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments) 对象等等）上创建一个迭代循环，调用自定义迭代钩子，并为每个不同属性的值执行语句\n```js\nconst array1 = ['a', 'b', 'c'];\n\nfor (const element of array1) {\n  console.log(element);\n}\n\n// Expected output: \"a\"\n// Expected output: \"b\"\n// Expected output: \"c\"\n\n```\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/MarkDown%E8%AF%AD%E6%B3%95-%E8%B6%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B":{"title":"Majmunu","content":"\n# 什么是 Markdown?\n\n1.  **Markdown** 是一款轻量级标记语言，不同于HTML **(Hypertext Markup Language)**，**Markdown** 的语法非常简单 且 容易上手\n2.  **Markdown** 以 **纯文本格式** 编写文档，依赖键盘而非鼠标，专注于**写作本身**，感受**书写**的魅力\n3.  **Markdown** 的通过添加一些简单的 **标识符**，让文本具有**恰到好处**的格式\n4.  **Markdown** 核心特征就是 **删繁剪芜**， **简扼 **+ **精炼**\n5.  **Markdown** 是 **笔记** 与 **网页文章** 的最佳载体\n6.  **Down** 的核心：坐 **下** 来，就能把思维写 **下** 来\n    -   **牛津高阶英汉双解词典第九版** 中，关于 **down** 的释义：\n\n![牛津9down释义](https://forum-zh.obsidian.md/uploads/default/original/1X/fa876e7537c1c16434019eb6e806e97dbc9a3004.png \"牛津9 down释义\")\n\n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#markdown-2)Markdown 相关软件推荐\n\n-   **Markdown** **书写软件** 推荐：**Typora** 优秀的 MD网页文章 书写软件\n    -   [点击跳转下载地址 318](https://www.typora.io/ \"Typora编辑器\")\n-   **Markdown** **笔记软件** 推荐：**Obsidian** **银河系最强** **MD+ 双向链** 笔记软件\n    -   [点击跳转下载地址 396](https://obsidian.md/ \"银河系第一笔记软件 Obsidian\")  \n          \n        \n\n# [](https://forum-zh.obsidian.md/t/topic/435#markdown-3)Markdown 语法\n\n## [](https://forum-zh.obsidian.md/t/topic/435#1-4)1. 标题\u0026目录\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#11-5)1.1 标题\n\n-   Markdown标题共有 **六级**，和 HTML 一样\n    \n-   区分 **一级标题 → 六级标题**\n    \n    -   **标题 的格式：**\n        \n        -   **#** × 标题级数 + **空格** + 文本内容\n\n```markdown\n这是一段普通的文本\n\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题 \n```\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#12-6)1.2 目录\n\n-   **目录的 格式：**\n    -   在文档的顶部 输入 **`[toc]`** ，会根据 **标题** 自动生成目录 ( **Table of Content** )\n-   不是所有 **MD编辑器** 都支持目录生成\n\n```markdown\n输入下方内容会生成一个目录：\n\n[toc]\n```\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#2-7)2. 斜体\u0026粗体\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#21-8)2.1 斜体\n\n-   **斜体 的格式：**\n    \n    1.  `*` + 文本内容 + `*`\n    2.  `_` + 文本内容 + `_` ( 下划线 )\n-   **说明：**\n    \n-   斜体文本，首尾只有 **单个** 标识符\n    \n\n```markdown\n这是一段普通文本\n\n*这里一段斜体文本*\n_这也是一段斜体文件_\n```\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#22-9)2.2 粗体\n\n-   **粗体 的格式：**\n    \n    1.  `**` + 文本内容 + `**`\n    2.  `__` + 文本内容 + `__` (这里是两个 **_** )\n-   **说明：**\n    \n    -   粗体文本，首尾各有 **两个** 标识符\n\n```markdown\n这是一段普通文本\n\n**这里是一段加粗文本**\n__这也是一段加粗文本__\n```\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#23-10)2.3 粗斜体 (斜粗体)\n\n-   **粗斜体 的格式：**\n    \n    1.  `***` + 文本内容 + `***`\n    2.  `___` + 文本内容 + `___` （ 这里是3个 _ )\n    3.  `**_` + 文本内容 + `_**`\n    4.  `__*` + 文本内容 + `*__`\n    5.  `*__` + 文本内容 + `__*`\n    6.  `_**` + 文本内容 + `**_`\n-   **说明：**\n    \n    -   粗斜体文本，首尾各有 **三个** 标识符\n\n```markdown\n这是一段普通文本\n\n***粗斜体文本1***\n___粗斜体文本2___\n**_粗斜体文本3_**\n*__粗斜体文本5__*\n_**粗斜体文本6**_\n```\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#24-11)2.4 斜体包含粗体\n\n-   **斜体中包含粗体 的格式：**\n    \n    1.  `*` + 斜体文本 + `**` + 粗体文本 + `**` + 斜体文本 + `*`\n    2.  `_` + 斜体文本 + **`__`** + 粗体文本 + `__` + 斜体文本 + `_` （ 这里是两个 **_** )\n    3.  `*` + 斜体文本 + `__` + 粗体文本 + `__` + 斜体文本 + `*`\n    4.  `_` + 斜体文本 + `**` + 粗体文本 + `**` + 斜体文本 + `_`\n-   **说明：**\n    \n    -   **斜体** 中包含 **粗体**，其实就是嵌套的关系，**外层** 是 **斜体**，**内层** 是 **粗体**\n    -   外层是**斜体**，标识符是**单个**；内层是**粗体**，标识符是**两个**\n    -   因为 **粗体** 是被包裹在 **斜体** 中的，所以显示效果为 **斜粗体**\n\n```markdown\n这是一段普通文本\n\n*这是一段斜体中**包含粗体**的文字*\n_这也一段斜体中**包含粗体**的文字_\n*这又是一段斜体中__包含粗体__的文字*\n_这还是一段粗体中**包含粗体**的文字_\n```\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#25-12)2.5 粗体包含斜体\n\n-   **粗体中包含斜体 的格式：**\n    1.  `**` + 粗体文本 + `*` + 斜体文本 + `*` + 粗体文本 + `**`\n    2.  `__` + 粗体文本 + `_` + 斜体文本 + `_` + 粗体文本 + `__` （ 这里是两个 **_** )\n    3.  `**` + 粗体文本 + `_` + 斜体文本 + `_` + 粗体文本 + `**`\n    4.  `__` + 粗体文本 + `*` + 斜体文本 + `*` + 粗体文本 + `__`\n-   **说明：**\n    -   **粗体** 中包含 **斜体**，也是嵌套的关系，**外层** 是 **粗体**，**内层** 是 **斜体**\n    -   外层是**粗体**，标识符是**两个**；内层是**斜体**，标识符是**单个**\n    -   因为 **斜体** 是被包裹在 **粗体** 中的，所以显示效果为 **粗斜体**\n\n```markdown\n这是一段普通文本\n\n**这是一段粗体中*包含斜体*的文字**\n__这也是一段粗体中_包含斜体_的文字__\n**这又是一段粗体中_包含斜体_的文字**\n__这还是一段粗体中*包含斜体*的文字__\n```\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#3-13)3. 线\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#31-14)3.1 水平分割线\n\n```markdown\n下面是一条水平分割线：\n---\n***\n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-15)示范\n\n---\n\n---\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#32-16)3.2 文本删除线\n\n-   **删除线 的格式：**\n    -   **`~~`** + 文本内容 +**`~~`** 首尾各加两个 **~** 波浪号\n\n```markdown\n  ~~这是一段加了删除线的文本~~\n```\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#33-17)3.3 文本下划线\n\n-   下划线的格式，和 HTML 是一样的\n    -   **`\u003cu\u003e`** + 文本内容 + **`\u003c/u\u003e`**\n\n```xml\n\u003cu\u003e这是一段加了下划线的文本\u003c/u\u003e\n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-18)示范\n\n这是一段加了下划线的文本\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#4-19)4. 列表\u0026引用\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#41-20)4.1 有序列表\n\n-   **有序列表 的格式：**\n    \n    -   **`1.`** + **空格** + 文本内容\n-   **说明：**\n    \n    -   输入文本内容后，敲击 **Enter** 自动补全格式，并进入 **下个** 有序列表\n    -   若需要在同个列表内，增加 **换行显示** 的内容 (**但不进入下个列表**)  \n        敲击 **Shift** + **Enter** ，即可另起一行输入文本\n    -   在有序列表的中间，插入一个新的列表，后面列表的 **数字序号** 会自动 **递进** 一层\n    -   即便在源代码模式中修改了数字序号，渲染界面依然是 **依照顺序** 显示的\n\n```markdown\n1. 这是第一个有序列表 \u003c!-- (Enter) --\u003e\n2. 这是第二个有序列表 \u003c!-- (Enter) --\u003e\n3. 这是第三个有序列表 \n\n\n1. 这是第一个有序列表 \u003c!-- (Shift + Enter) --\u003e\n   这是同个列表下，另起一行的文本内容 \u003c!-- (Enter) --\u003e\n2. 这是第二个有序列表 \u003c!-- (Shift + Enter) --\u003e\n   这是同个列表下，另起一行的文本内容 \n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-21)示范\n\n1.  这是第一个有序列表\n    \n2.  这是第二个有序列表\n    \n3.  这是第三个有序列表\n    \n4.  这是第一个有序列表  \n    这是同个列表下，另起一行的文本内容\n    \n5.  这是第二个有序列表  \n    这是同个列表下，另起一行的文本内容\n    \n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-22)补充\n\n-   由于有序列表存在**强制排序性**，它的数字序号必然是**逐一递进**的  \n    若你希望内容前的数字，不依照**递进顺序**排序，或者以 **整百**，**整十数** 排序\n-   可以配合**无序列表**，在无序列表中输入：\n    -   `数字` + `.` + 内容  \n        #注意 点号 与 内容 之间，**没有空格** (其实有空格也行，就是会感觉有点奇怪)\n\n```markdown\n- 10.这是无序列表下，整十数排列的内容\n- 20.这是无序列表下，整十数排列的内容\n- 30.这是无序列表下，整十数排列的内容\n\n\n- 100.这是无序列表下，整百数排列的内容\n- 200.这是无序列表下，整百数排列的内容\n- 300.这是无序列表下，整百数排列的内容\n```\n\n**效果：**\n\n-   10.这是无序列表下，整十数排列的内容\n-   20.这是无序列表下，整十数排列的内容\n-   30.这是无序列表下，整十数排列的内容\n\n  \n\n-   100.这是无序列表下，整百数排列的内容\n-   200.这是无序列表下，整百数排列的内容\n-   300.这是无序列表下，整百数排列的内容\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#42-23)4.2 无序列表\n\n-   **无序列表 的格式：**\n-   **-** + **空格** + 文本内容\n-   **说明：**\n    -   输入文本内容后，敲击 **Enter** 自动补全格式，并进入 **下个** 无序列表\n    -   若需要在同个列表内，增加**换行**显示的内容 (**但不进入下个列表**)  \n        敲击 **Shift** + **Enter** ，即可另起一行输入文本\n-   **补充：**\n    -   在**Obsidian**中，按下 **Ctrl** + **Enter**\n    -   即可快速生成一个无序列表\n\n```markdown\n- 这是第1个无序列表 \u003c!-- (Enter) --\u003e\n- 这是第2个无序列表 \u003c!-- (Enter) --\u003e\n- 这是第3个无序列表\n\n- 这是第一个无序列表 \u003c!-- (Shift + Enter) --\u003e\n  这是同个列表下，另起一行的文本内容\n- 这是第二个无序列表 \u003c!-- (Shift + Enter) --\u003e\n  这是同个列表下，另起一行的文本内容 \n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-24)示范\n\n-   这是第1个无序列表\n-   这是第2个无序列表\n-   这是第3个无序列表\n\n  \n\n-   这是第一个无序列表  \n    这是同个列表下，另起一行的文本内容\n-   这是第二个无序列表  \n    这是同个列表下，另起一行的文本内容\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#43-25)4.3 引用\n\n-   **引用 的格式：**\n    -   **\u003e** + 文本内容 （**不需要空格**)\n-   **说明：**\n    -   **同个引用段落**内的换行直接敲击 **Enter** 即可\n    -   若需添加 **第二个独立引用段落** ，连续敲击 **两下** **Enter** 即可\n\n```xml\n\u003e这是第一段引用文本的第1行 \u003c!-- (Enter) --\u003e\n\u003e这是第一段引用文本的第2行 \u003c!-- (Enter) --\u003e\n\u003c!-- (Enter) --\u003e\n\u003e这是第二段引用文本的第1行 \u003c!-- (Enter) --\u003e\n\u003e这是第二段引用文本内第2行\n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-26)示范\n\n\u003e 这是第一段引用文本的第1行  \n\u003e 这是第一段引用文本的第2行\n\n\u003e 这是第二段引用文本的第1行  \n\u003e 这是第二段引用文本的第2行\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#44-27)4.4 缩进\u0026退格\n\n**在列表和引用的书写过程中，我们需要利用 ==缩进== 与 ==退格== ，让文章肌理分明，更具层级**\n\n-   **缩进：**\n    \n    1.  **Tab**\n    2.  **Ctrl** + **[**   (左中括号)\n-   **退格：**\n    \n    1.  **Shift** + **Tab**\n    2.  **Ctrl** + **]** （右中括号）\n\n  \n\n#### [](https://forum-zh.obsidian.md/t/topic/435#441-28)4.4.1 有序列表的缩\u0026退\n\n```markdown\n1. 第一级有序列表1 \u003c!-- (Enter) --\u003e\n\t1. 第二级有序列表1    \u003c!-- 写文本之前，先( Tab 或 Ctrl + ] ) ；写完文本后，再(Enter) --\u003e\n\t2. 第二级有序列表2 \u003c!-- (Enter) --\u003e\n2. 第一级有序列表2    \u003c!-- 写文本前，先 ( Shift + Tab 或 Ctrl + [ ) --\u003e \n```\n\n-   **补充说明：**\n    -   有序列表的**数字序号**，即便你在源代码模式里 强行改掉 数字，它仍然会 **依照顺序** 显示\n\n##### [](https://forum-zh.obsidian.md/t/topic/435#heading-29)示范\n\n1.  第一级有序列表1\n    1.  第二级有序列表1\n    2.  第二级有序列表2\n2.  第一级有序列表2\n\n  \n\n#### [](https://forum-zh.obsidian.md/t/topic/435#442-30)4.4.2 无序列表的缩\u0026退\n\n```markdown\n- 第一级无序列表1 \u003c!-- (Enter) --\u003e\n\t- 第二级无序列表1  \u003c!-- 写文本前，先( Tab 或 Ctrl + ] ) ；写完后，再(Enter) --\u003e\n\t- 第二级无序列表2 \u003c!-- (Enter) --\u003e\n- 第一级无序列表2  \u003c!-- 写文本前，先 ( Shift + Tab 或 Ctrl + [ ) --\u003e\n```\n\n##### [](https://forum-zh.obsidian.md/t/topic/435#heading-31)示范\n\n-   第一级无序列表1\n    -   第二级无序列表1\n    -   第二级无序列表2\n-   第一级无序列表2\n\n  \n\n#### [](https://forum-zh.obsidian.md/t/topic/435#443-32)4.4.3 引用的缩\u0026退\n\n-   引用的 **缩进** 和列表 **不同**\n    -   引用需另起一行，并额外多打一个 \u003e 来完成 **缩进**\n-   引用的 **退格** 与列表 **相同**\n    1.  **Shift** + **Tab**\n    2.  **Ctrl** + **]** （右中括号）\n\n```markdown\n\u003e第一级引用1 \u003c!-- (enter) --\u003e\n\u003e\u003e第二级引用1 \u003c!-- 先打1个 \u003e (这里的第一个 \u003e 是会自动补充的，只需额外增补1个即可) ，再(enter) --\u003e\n\u003e\u003e第二级引用2 \u003c!-- (enter) --\u003e\n\u003e第一级引用2   \u003c!-- 写文本前，先 ( Shift + Tab 或 Ctrl + [ ) --\u003e\n```\n\n##### [](https://forum-zh.obsidian.md/t/topic/435#heading-33)示范\n\n\u003e 第一级引用1\n\u003e \n\u003e \u003e 第二级引用1  \n\u003e \u003e 第二级引用2\n\u003e \n\u003e 第一级引用2\n\n  \n\n-   **补充：**  \n    在 **Obsidian** 中，引用的退格是不太一样的\n-   **Obsidian** 中，如果想让已经缩进的引用 **退回一层**\n    -   得使用 **`Shift`** + **`Enter`** ，配合方向键，在多个 `\u003e` 之间灵活断行  \n        并在下一行 根据需要 选择性补充 `\u003e`\n-   这个用文字比较难以描述，这里选择用2个带键位的 **Gif图** 来描述\n\n**Gif演示1：**\n\n  \n\n![引用退格1](https://z3.ax1x.com/2021/08/09/fGPDVs.gif)\n\n**Gif演示2：**  \n  \n\n![引用退格2](https://forum-zh.obsidian.md/uploads/default/original/1X/be3258e488e5454aa5aa798f97aa287ab892588e.gif)\n\n  \n\n#### [](https://forum-zh.obsidian.md/t/topic/435#444-34)4.4.4 有序\u0026无序\u0026引用 连续套娃\n\n-   **有序列表**、**无序列表**、**引用** 三者之间，可以相互嵌套\n-   **核心键** ： **Shift** + **Enter** **\u0026** **Enter** **\u0026** **Shift** + **Tab** ( 或 **Ctrl** + **[** )\n    -   **Shift** + **Enter** 在切换格式的嵌套中，是 自带一层 **缩进** 效果的\n\n```markdown\n1. 第一级 有序列表1 \u003c!-- (Shift + Enter) --\u003e \n\t- 第二级 无序列表1 \u003c!-- (Shift + Enter) --\u003e\n\t\t\u003e第三级 引用1  \u003c!-- (Enter) --\u003e\n\t\t\t- 第四级 无序列表2 \u003c!-- (Shift + Enter) --\u003e\n            \t1. 第五级 有序列表2 \u003c!-- (Enter) --\u003e\n            - 第四级 无序列表3   \u003c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) ；写完后再 (Enter) --\u003e\n        \u003e第三级 引用2  \u003c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) ；写完后再 (Enter × 2) --\u003e\n    - 第二级 无序列表4  \u003c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) --\u003e\n2. 第一级 有序列表3  \u003c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) --\u003e\n```\n\n##### [](https://forum-zh.obsidian.md/t/topic/435#heading-35)示范\n\n1.  第一级 有序列表1\n    \n    -   第二级 无序列表1\n        \n        \u003e 第三级 引用1\n        \u003e \n        \u003e -   第四级 无序列表2\n        \u003e     1.  第五级 有序列表2\n        \u003e -   第四级 无序列表3\n        \u003e \n        \u003e 第三级 引用2\n        \n    -   第二级 无序列表4\n        \n2.  第一级 有序列表3\n    \n\n#### [](https://forum-zh.obsidian.md/t/topic/435#445-obsidian-36)4.4.5 Obsidian 的一些缩退问题\n\n-   **Obsidian** 在列表首行使用缩进的时候，后续的列表会出现一些问题\n    -   `Tab` 和 `Shift + tab` 会无法 缩进 退格\n        -   可以使用 `Ctrl + ]` 与 `Ctrl + [` 来解决问题\n\n```markdown\n- - 这是第一段就被缩进的列表\n\t- 这是第二段被再次缩进的列表  \u003c!-- 这里需按两次 Ctrl + ] ,Tab键是无效的 --\u003e\n  - 这是第三段列表  \u003c!-- Ctrl + [ --\u003e\n```\n\n-   -   这是第一段就被缩进的列表  \n        - 这是第二段被再次缩进的列表\n        -   这是第三段列表\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#5-37)5. 网页链接与图像\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#51-38)5.1 网页链接\n\n-   **网页链接的 格式：**\n    -   **[** + 显示文本内容 + **]** + **(** + 链接地址 + **空格** + **\"** + 提示信息文本 + **\"** + **)**\n-   **说明：**\n    -   显示文本内容，是在渲染界面实际 **可见** 的文本，用以 **说明** 链接\n    -   提示信息文本，需鼠标悬停于 **显示文本内容** 方可触发，用于增加额外提示信息\n        -   **`\"提示信息文本\"`** 是可选项，可填可不填\n        -   一般来讲，需按住 **Ctrl** + **`鼠标左键点击`** 才可跳转链接，不过也有 **直接鼠标点击** 就能跳转的\n\n```markdown\n[显示文本内容](链接地址 \"提示信息文本\")\n\n[百度一下，你就知道](http://www.baidu.com \"按住Ctrl点击跳转百度\")\n```\n\n**示范：**\n\n[百度一下，你就知道 381](http://www.baidu.com/ \"按住Ctrl点击跳转百度\")  \n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#52-39)5.2 图像\n\n-   **图像格式：**\n    -   图像格式，就是在网页链接前面加个 **!** (英文格式的)，**`!`** 代表 **可见**\n    -   图片的提示信息，和网页链接一样，写在 **`\" \"`** 内\n    -   **`[ ]`** 方括号里的文字信息在 **Markdown** 没啥实质的作用，只是方便在源代码模式下，知道这个图片是什么，在渲染界面是不会显示的。有点类似于HTML **img标签** 里的 **alt属性**。\n\n```markdown\n![文字信息](图片链接 \"提示文本信息\")\t\n\n![湘湖1](upload://Ad5F9UZAOlZkz4iRuGeEuRugdZ.jpeg \"湘湖一角\")\n```\n\n-   **补充：**\n    \n    -   图像链接可以是**本地**的，也可以是**在线**的\n        \n        -   本地图像直接 **`Ctrl + C`** 黏贴，**`Ctrl + V`** 复制 就可以\n        -   在线图像推荐使用 [图床 265](https://imgtu.com/ \"这是一个在线图床网址\")\n    -   调整图像的大小需要使用 HTML 和 CSS，在 **Typora编辑器** 中右键可以直接缩放图片  \n        本质是转成了HTML的格式，最后会有一个 `style=\"zoom: %;\"` ，这里数值可以自己修改\n        \n    -   如果有使用 **Obsidian** 的朋友，在线图片链接是通用的，不过因为**Obsidian** 是双向链笔记\n        \n        它的本地图片的格式是：\n        \n        -   **`![[ 图片 ]]`**\n            -   本质是为图片建了一个新的MD文件，用 **!** 使它可见\n            -   **Obsidian**的图片设置大小是用 | 分隔后面跟宽度数值，单位是px。  \n                设置好宽度，高度会自动 **等比例调整**\n                -   **`![[图片名|宽度数值]]`**\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-40)示范\n\n[![湘湖1](https://forum-zh.obsidian.md/uploads/default/optimized/1X/0417e386f5933d7346f8fc78a7c855bbc2a0f143_2_375x500.jpeg \"湘湖一角\")\n\n湘湖一角1080×1440 198 KB\n\n](https://forum-zh.obsidian.md/uploads/default/original/1X/0417e386f5933d7346f8fc78a7c855bbc2a0f143.jpeg \"湘湖一角\")\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#6-41)6. 表格\n\n-   Markdown的表格，比HTML简单很多\n    -   **|** 是构成表格的主要 **框架**\n    -   **-** 区分 **表头** 和 **表格主体**\n    -   **:** 控制 表格内 **文本内容** 的 **对齐方式**\n    -   **Typora编辑器中** 输入 **`Ctrl + T`** 即可快速插入表格，自由定义样式\n\n```markdown\n|这里是表头1|这里是表头2|这里是表头3|\n|:-|:-:|-:|    \u003c!--区分表头和表格主体，:代表文本对齐方式，分别是左对齐，居中对齐，右对齐--\u003e\n|单元格数据1|单元格数据2|单元格数据3|\n|单元格数据4|单元格数据5|单元格数据6|\n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-42)示范\n\n这里是表头1\n\n这里是表头2\n\n这里是表头3\n\n单元格数据1\n\n单元格数据2\n\n单元格数据3\n\n单元格数据4\n\n单元格数据5\n\n单元格数据6\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#61-43)6.1 表格内文本内容的换行\n\n-   Mardown中表格，它的宽高是由 单元格数据内的文本内容 **撑开** 的\n-   当我们输入一段很长很长的文本，它所在的单元格会变得过宽\n\n**如下图所示：**\n\n表头1\n\n表头2\n\n这是一段很长很长很长很长很长很长很长很长很长很长很长很长很长很长的文本\n\n普通文本\n\n-   若想对一段长文本进行换行，可以在 **中间** 插入一个 **`\u003cbr\u003e`** （ 换行标签 )\n\n```markdown\n| 表头1 |  表头2 |\n|:-:|:-:|\n|这是第一行文本\u003cbr\u003e这是另起一行的文本|普通文本|\n```\n\n##### [](https://forum-zh.obsidian.md/t/topic/435#heading-44)示范\n\n表头1\n\n表头2\n\n这是第一行文本  \n这是另起一行的文本\n\n普通文本\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#7-45)7. 代码域\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#71-46)7.1 行内代码\n\n-   **行内代码 的格式：**\n    \n    -   输入两个 **`** 反撇号 ，在中间写代码内容\n-   **补充：**\n    \n    -   行内代码不一定非得写代码，也可以作为**`着重标记`**，突出显示内容\n    -   行内代码中，源代码界面和渲染界面是完全一致的，标识符会失效\n    -   **所谓行内代码：** 只要你的屏幕足够宽，它就不会换行\n\n```markdown\n`这是一段行内代码`\n\n`\u003ctable border=\"1\" cellspacing=\"0\" width=\"500\" height=\"500\"\u003e`\n\n`print(\"Hello, World!\")`\n\n`这是一行突出显示的文本内容`\n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-47)示范\n\n`\u003ctable border=\"1\" cellspacing=\"0\" width=\"500\" height=\"500\"\u003e`\n\n  \n\n`print(\"Hello, World!\")`\n\n  \n\n`这是一行突出显示的文本内容`\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#72-48)7.2 代码块\n\n-   **代码块 的格式：**\n    \n    1.  在首行和末行各加 **三个** **`** 反撇号\n    \n    -   **` ``` `** + 语言种类  \n        代码内容  \n        **` ``` `**\n    \n    2.  在首行和末行各加 **三个** **~** 波浪号\n        -   **`~~~`** + 语言种类  \n            代码内容  \n            **`~~~`**\n-   **补充：**\n    -   在代码块也不一定要写代码，可以写**一段**突出的文本内容，语言类型可以填写 **txt** 或者 **干脆不写**\n    -   代码块中，源代码界面和渲染界面是完全一致的，标识符会失效\n    -   在 **Typora编辑器** ，用键盘按键脱离代码块区域，需输入： **Ctrl + Enter**\n\n````markdown\n```语言种类\n代码内容\n代码内容\n代码内容\n```\n\n下面是HTML代码块\n\n```html\n\u003ctable border=\"1\"\u003e\n    \u003ctr\u003e\n        \u003ctd\u003erow 1, cell 1\u003c/td\u003e\n        \u003ctd\u003erow 1, cell 2\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n        \u003ctd\u003erow 2, cell 1\u003c/td\u003e\n        \u003ctd\u003erow 2, cell 2\u003c/td\u003e\n    \u003c/tr\u003e\n\u003c/table\u003e\n```\n\n下面是CSS代码块\n\n```css\n.box {\n\twidth: 600px;\n\theight: 400px;\n\tmargin: 100px auto;\n\tbackground-image: linear-gradient(black 33.3%,red 33.3%, red 66.6%, yellow 66.6%, yellow);\n}\t\n```\n\n下面是JavaScript代码块\n\n```js\n    // 定义一个30个整数的数组，按顺序分别赋予从2开始的偶数；然后按顺序每五个数求出一个平均值，放在另一个数组中并输出。试编程\n    var arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    var newarr = [];\n    for (var i = 0, count = 0, sum = 0, len = arr.length; i \u003c len; i++) {\n        sum += arr.shift();\n        count++;\n        if (count % 5 === 0) {\n            newarr.push(sum / 5);\n            sum =  0;\n        }\n    }\n    console.log(newarr);\n\n    var arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    var newarr = [];\n    for (var i = 0, len = arr.length; i \u003c len / 5; i++) {\n        var subarr = arr.splice(0, 5)\n        for (var j = 0, sum = 0; j \u003c subarr.length; j++) {\n            sum += subarr[j];\n        }\n        newarr.push(sum / 5);\n    }\n    console.log(newarr);\n```\n\n\n下面是Python代码块\n\n```python\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ni = 2\nwhile(i \u003c 100):\n   j = 2\n   while(j \u003c= (i/j)):\n      if not(i%j): break\n      j = j + 1\n   if (j \u003e i/j) : print i, \" 是素数\"\n   i = i + 1\n \nprint \"Good bye!\"\n```\n\n下面是一块突出显示的文本\n\n```txt\n这是一段\n突出显示的\n文本内容\n```\n````\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-49)示范\n\n```xml\n\u003ctable border=\"1\"\u003e\n    \u003ctr\u003e\n        \u003ctd\u003erow 1, cell 1\u003c/td\u003e\n        \u003ctd\u003erow 1, cell 2\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n        \u003ctd\u003erow 2, cell 1\u003c/td\u003e\n        \u003ctd\u003erow 2, cell 2\u003c/td\u003e\n    \u003c/tr\u003e\n\u003c/table\u003e\n```\n\n```css\n.box {\n\twidth: 600px;\n\theight: 400px;\n\tmargin: 100px auto;\n\tbackground-image: linear-gradient(black 33.3%, red 33.3%, red 66.6%, yellow 66.6%, yellow);\n}\t\n```\n\n```go\n    // 定义一个30个整数的数组，按顺序分别赋予从2开始的偶数；然后按顺序每五个数求出一个平均值，放在另一个数组中并输出。试编程\n    var arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    var newarr = [];\n    for (var i = 0, count = 0, sum = 0, len = arr.length; i \u003c len; i++) {\n        sum += arr.shift();\n        count++;\n        if (count % 5 === 0) {\n            newarr.push(sum / 5);\n            sum =  0;\n        }\n    }\n    console.log(newarr);\n\n    var arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    var newarr = [];\n    for (var i = 0, len = arr.length; i \u003c len / 5; i++) {\n        var subarr = arr.splice(0, 5)\n        for (var j = 0, sum = 0; j \u003c subarr.length; j++) {\n            sum += subarr[j];\n        }\n        newarr.push(sum / 5);\n    }\n    console.log(newarr);\n```\n\n```python\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ni = 2\nwhile(i \u003c 100):\n   j = 2\n   while(j \u003c= (i/j)):\n      if not(i%j): break\n      j = j + 1\n   if (j \u003e i/j) : print i, \" 是素数\"\n   i = i + 1\n \nprint \"Good bye!\"\n```\n\n```undefined\n这是一段\n突出显示的\n文本内容\n```\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#8-50)8. 任务列表（待办）\n\n-   **任务列表 的格式：**\n    \n    -   **-** + **空格** +**`[ ]`** +**空格** + 任务列表内容 ( 中括号`[ ]` 里面必须有个空格)\n    -   给待办任务列表打 **`√`** ，变成 **已办**\n        1.  在渲染界面，直接鼠标左键点击框框\n        2.  在源代码界面，在中括号内输入 **英文字母x**\n            -   部分编辑器，在 中括号内 输入**任意字符**都可以打 **`√`** ( 例如 **Obsidian** )\n-   **补充：**\n    \n    -   大部分 MD编辑器 支持输入第一个任务列表后，按下 **Enter** 进入下一行会 **自动补全待办格式**\n    -   在**Obsidian**中，连续输入**两次** `Ctrl + Enter` ，即可生成一个待办列表\n        -   再输入一次 `Ctrl + Enter` ，会在待办列表 打 **`√`**\n-   **格式：**\n    \n\n```markdown\n- [ ] 待办任务列表1\n- [ ] 待办任务列表2\n- [x] 已办任务列表1    \u003c!-- 英文字母X --\u003e\n- [x] 已办任务列表2\n```\n\n### [](https://forum-zh.obsidian.md/t/topic/435#heading-51)示范\n\n-   [ ] 待办任务列表1\n-   [ ] 待办任务列表2\n-   [x] 已办任务列表1\n-   [x] 已办任务列表2\n\n  \n\n-   在 **Obsidian** 中，可以利用 **Ctrl** + **Enter** ，快速生成任务列表\n    1.  **`-`** + **空格** + **Ctrl** + **Enter** +待办文本内容\n    2.  待办文本内容 + **Ctrl** + **Enter** **×2**   ( 输入文本后，连续2次 `Ctrl + enter` )\n\n  \n\n-   **任务列表也是可以缩进+退格的，操作跟 无序、有序列表一样**\n\n### [](https://forum-zh.obsidian.md/t/topic/435#heading-52)示范\n\n-   [ ] 第一级待办列表1\n    -   [ ] 第二级待办列表1  \n        另起一行的第二级待办列表1\n        -   [x] 第三级已办列表1\n        -   [x] 第三级已办列表2\n    -   [ ] 第二级待办列表2  \n        另起一行的第二级待办列表2\n-   [ ] 第一级待办列表2\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#9-53)9. 注释\n\n**Markdown** 的 **注释** 和 **HMTL** 一样，注释的内容在 **渲染界面** **不可见** （部分编辑器可见)\n\n-   **注释 的格式：**\n    -   `\u003c!-- 这里是注释的内容 --\u003e`\n        -   注释可以是单行，也可以是多行\n    -   如果有在使用 **Obsidian** 的，它的注释格式是不一样的\n        -   **`%%这是Obsidian的注释内容%%`**\n\n```markdown\n\u003c!-- 这里是一行注释 --\u003e\n\n\u003c!--\n这里是\n一段\n假装有\n很多行的\n注释\n--\u003e\n```\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#10-54)10. 变量\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#101-55)10.1 网页链接变量\n\n-   **网页链接变量 的格式：**\n    1.  首先输入\n        -   **`[显示文本内容]`** + **`[变量名]`**\n            -   变量名可以自己取，没啥限制，任意字符都可以\n    2.  在文档任意一个区域，输入：\n        -   **`[变量名]`** + **:** + **空格** + 链接地址 （这个 **空格** 不打也没事)\n\n```markdown\n[百度一下，你就知道][度娘]\n[知乎-有问题，就会有答案][知乎]\n\n\u003c!-- 这里是变量区域 --\u003e\n[度娘]: http://www.baidu.com \n[知乎]: https://www.zhihu.com    \n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-56)示范\n\n[百度一下，你就知道 381](http://www.baidu.com/)\n\n[知乎-有问题，就会有答案 26](https://www.zhihu.com/)\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#102-57)10.2 脚注\n\n-   **脚注 的格式：**\n    -   在需要脚注的地方，输入：\n        -   **`[^脚注代号]`** ( 脚注代号会直接显示在渲染界面 )\n            -   脚注代号可以随便命名，不过推荐使用 **数字序号**\n    -   在其他区域，输入：\n        -   **`[^脚注代号]`** + **:** +**空格** + 脚注内容 （这个 **空格** 不打也没事)\n\n```markdown\n鲁迅原名是什么[^1] ，浙江哪里人[^2]\n\n\u003c!-- 这里是变量区域 --\u003e\n[^1]: 周树人\n[^2]: 绍兴人\n```\n\n#### [](https://forum-zh.obsidian.md/t/topic/435#heading-58)示范\n\n鲁迅原名是什么^1 ，浙江哪里人^2  \n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#11-59)11. 拓展文本格式标记\n\n-   **Markdown** 想实现更多的文本显示效果，只能依赖HTML标记实现\n-   个人**不是很推荐**在 MD 中使用 HTML，不过一些简单的标记还是可以 **轻度使用** 的\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#111-60)11.1 键盘文本\n\n-   **键盘文本的 格式：**\n    \n    -   **`\u003ckbd\u003e键盘文本\u003c/kbd\u003e`**\n    -   **`\u003ckbd\u003eCtrl\u003c/kbd\u003e + \u003ckbd\u003eX\u003c/kbd\u003e`**\n-   **效果：**\n    \n    -   **键盘文本**\n    -   **Ctrl** + **X** ( 剪切 )\n-   **说明：**\n    \n    -   键盘文本也不一定非得是键盘按键，也可以作为**着重文本**突出显示\n        -   **效果：**这也算是一种着重文本的方式\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#112-61)11.2 放大文本\n\n-   **放大文本 的格式：**\n    \n    -   **`这是一段普通文本`**  \n        `\u003cbig\u003e这是一段放大文本\u003c/big\u003e`\n-   **效果：**\n    \n    -   这是一段普通文本  \n        这是一段放大文本\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#113-62)11.3 缩小文本\n\n-   **缩小文本 的格式：**\n    \n    -   **`这是一段普通文本`**  \n        **`\u003csmall\u003e这是一段缩小文本\u003c/small\u003e`**\n-   **效果：**\n    \n    -   这是一段普通文本\n        \n        这是一段缩小文本\n        \n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#114-63)11.4 多彩文本\n\n-   **多彩文本 的格式：**\n    \n    -   **`\u003cfont color=orange\u003e这是一段橘色文本\u003c/font\u003e`**\n-   **多彩加粗文本：**\n    \n    -   只需要在上面示例的基础上，为里面的文本内容加上 **加粗标识符**\n        \n        -   **格式：** `\u003cfont color=teal\u003e**这是一段加粗的水鸭色文本**\u003c/font\u003e`\n            -   color 里的颜色支持 英文单词，**[16进制 32](http://c.runoob.com/front-end/55 \"可跳转至菜鸟教程了解\")，[rgb 20](https://www.runoob.com/cssref/func-rgb-css.html \"可跳转至菜鸟教程了解\")，[rgba 10](https://www.runoob.com/cssref/func-rgba.html \"可跳转至菜鸟教程了解\")**\n    -   在部分编辑器中(例如**Obsidian**)，MD与HTML的混搭会导致 **样式失效** ，可以使用纯HTML标记\n        \n        -   **格式：** `\u003cstrong style=\"color:teal;\"\u003e这是一段加粗的水鸭色文本\u003c/strong\u003e` (标记略复杂，不是很推荐)\n-   **！注意：** 多彩文本尽量慎用，**Markdown** 的核心就是 **简洁精炼**，注重 **实质内容**，而非花哨的 颜色样式\n    \n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#12-64)12. 拓展文本显示效果\n\n-   拓展显示效果既不是原生 **Markdown语法** 支持的，也非 HTML标记，而是部分编辑器 提供的 **额外标识符**，属于拓展语法，旨在为 **Markdown使用者** 提供更多样式选择\n-   不同编辑器，支持不一样，这里以 **Typora编辑器** 为例\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#121-65)12.1 文本高亮\n\n-   **文本高亮 的格式：**\n    -   **`==这里是一段高亮文本==`**\n-   **效果：**\n    -   ==这里是一段高亮文本==\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#122-66)12.2 上标\n\n-   用一对 **^** 包裹 (**Shift+ 6**)\n    -   **格式：** **`x^2^`**\n    -   **效果：** x^2^\n-   **Obsidian** 没效果的，可以用后面会讲的 **Latex**\n-   或者，也可以使用 **HTML标记**\n    -   `\u003csup\u003e这里是上标内容\u003c/sup\u003e`\n    -   `X\u003csup\u003e2\u003c/sup\u003e`\n-   **效果：**\n    -   **X2**\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#123-67)12.3 下标\n\n-   用一对 **~** 包裹 (**Shift + `**)\n    -   **格式：** **`H~2~O`**\n    -   **效果：** H~2~O\n-   **Obsidian** 没效果的，可以用后面会讲的 **Latex**\n-   或者，也可以使用 **HTML标记**\n    -   `\u003csub\u003e这里是下标内容\u003c/sub\u003e`\n    -   `H\u003csub\u003e2\u003c/sub\u003eO`\n-   **效果：**\n    -   **H2O**\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#124-emoji-68)12.4 Emoji 符号\n\n-   用一对 : 包裹，里面是 **Emoji** 符号的 **语义化文本** ( **Typora编辑器** 中，输入 `:` 就会带提示器 )\n    \n    -   **示例：**\n        \n        -   `:smile:`  \n            `:sweat:`  \n            `:cat:`  \n            `:woman_cartwheeling:`\n    -   **效果：**\n        \n        -   ![:smile:](https://forum-zh.obsidian.md/images/emoji/twitter/smile.png?v=10 \":smile:\")  \n            ![:sweat:](https://forum-zh.obsidian.md/images/emoji/twitter/sweat.png?v=10 \":sweat:\")\n            \n            ![:cat:](https://forum-zh.obsidian.md/images/emoji/twitter/cat.png?v=10 \":cat:\")  \n            ![:woman_cartwheeling:](https://forum-zh.obsidian.md/images/emoji/twitter/woman_cartwheeling.png?v=10 \":woman_cartwheeling:\")\n            \n        -   **补充：**\n            \n            -   不支持上述方式的 MD编辑器或笔记软件，直接用 **输入法** 输入也是可以的\n            -   **Windows系统** 用户 **win + .** 就可以输入 Emoji 了\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#13-69)13. 转义字符\n\n-   在 **Markdown** 中，我们 通过 **标识符** 改变 **文本显示效果**\n    \n-   现在我们希望它不作为标识符，而是 **作为字符本身呈现出来** （不具备改变文本显示效果的功能，只是一个**普通字符**)\n    \n    -   首先我们可以用前面介绍的 **代码域** ，因为代码模式的显示效果就是源代码**完全一致**的\n        \n    -   还有一种方法，可以利用转义字符，在这些标识符 **前面** 加上 **反斜线** **\\** ( 反斜线要紧贴在标识符前面，**不能** 有 **空格** )\n        \n        -   **原理：**\n            \n            -   **`\\`** 的作用是让标识符 **转义** 变为一个**普通字符**，完成这个效果后，反斜线会**自动隐藏**\n            -   隐藏后的反斜线仅在**源代码**界面**可见**，在**渲染**界面**不可见**\n            -   反斜线只**争对标识符**起作用，其他字符添加 **`\\`**，**`\\`** 不会自动隐藏\n        -   **补充：**\n            \n            -   如果想给已经被加在标识符前面，会自动隐藏的 **`\\`** 显示出来，可以在反斜线前面再加一个 **\\** ，用它**自己来转义自己**\n                -   **示例：** **`这里紧跟在标识符前面的反斜线 \\\\*会被转义成普通字符显示出来，不会自动隐藏`**\n                -   **效果：** 这里紧跟在标识符前面的反斜线 \\*会被转义成普通字符显示出来，不会自动隐藏\n\n### [](https://forum-zh.obsidian.md/t/topic/435#1-70)例1\n\n-   如何让被一对或多对 **`*`** 号 包裹的文本内容，能够正常显示 **`*`** ，且文本不改变格式\n    -   `\\*这段文本被一对星号包裹，但不会倾斜\\*`\n        -   **效果：** *这段文本被1对星号包裹，但不会倾斜*\n    -   `\\*\\*这段文本被2对星号包裹，但不会加粗\\*\\*`\n        -   **效果：** **这段文本被2对星号包裹，但不会加粗**\n    -   `\\*\\*\\*这段文本被3对星号包裹，但它既不倾斜也不加粗\\*\\*\\*`\n        -   **效果：** ***这段文本被3对星号包裹，但它既不倾斜也不加粗***\n\n### [](https://forum-zh.obsidian.md/t/topic/435#2-71)例2\n\n-   在表格中，使用 **|** 作为单元格的内容，但**不会**被识别为**表格的结构**，不会增加额外的单元格\n\n```markdown\n|表头1|表头2|\n|-|-|\n|这里的文本被\\|分隔|这里的文本也被\\|分隔|\n```\n\n-   **效果：**\n\n表头1\n\n表头2\n\n这里的文本被|分隔\n\n这里的文本也被|分隔\n\n### [](https://forum-zh.obsidian.md/t/topic/435#3-72)例3\n\n-   在行内代码中，让反撇号 **`** 能被显示出来，有两种方法\n    \n    1.  首尾用**两个引号**包裹  \n        **`` `显示2个反撇号` ``** ， **`` `显示单个反撇号 ``**\n    \n    -   **效果：** **`` `显示两个反撇号` ``** ， **`` `显示单个反撇号 ``**\n    -   **注意：** 中间的内容 距离首尾引号 各有1个空格\n    \n    2.  之前提过，行内代码也可作为 突出显示的文本  \n        可以利用前面介绍的 键盘文本 + 转义符号 **`\\`** ，突出显示反撇号\n        \n        -   **格式：** **``\u003ckbd\u003e\\`首尾的反撇号会正常显示\\`\u003c/kbd\u003e``**\n        -   **效果：** `首尾的反撇号会正常显示`\n\n### [](https://forum-zh.obsidian.md/t/topic/435#4-73)例4\n\n在 **网页链接** 的 **显示文本内容** 中，使用 **中括号** **`[ ]`**\n\n-   在显示文本内容中，在其中一个中括号前面，加上**转义符号** 反斜杠 **\\**\n    -   **格式：** **`[链接里的 \\[中括号\\] 能被正常显示](https://www.runoob.com)`**\n    -   **效果：** [链接里的 [中括号] 能被正常显示 6](https://www.runoob.com/)\n\n### [](https://forum-zh.obsidian.md/t/topic/435#5-74)例5\n\n-   引用一段话，一般会在换行之后，加上 **`- 出处`**\n    \n-   因为 **-** 是标识符，会变成一个无序列表\n    \n\n**如下所示：**\n\n\u003e The Web, the Tree, and the String.  \n\u003e 写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。\n\u003e \n\u003e -   史蒂芬·平克\n\n-   **解决方法：**\n    \n    -   在 **-** 前面加上 转义符号 **\\**\n    \n    ```markdown\n    \u003eThe Web, the Tree, and the String.\n    \u003e写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。\n    \u003e\\- 史蒂芬·平克   \u003c!-- 加上转义符号 \\ , 不会变成无序列表 --\u003e\n    ```\n    \n-   **效果：**\n    \n\n\u003e The Web, the Tree, and the String.  \n\u003e 写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。  \n\u003e - 史蒂芬·平克\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#14-75)14. 空格\u0026换行\u0026强制删除\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#141-76)14.1 空格\n\n-   在一些编辑器或者支持MD的笔记软件里，无论你打多少个**空格**，它只会显示单个 **空格** 的距离\n    \n    -   可以使用 HTML中 **空格** 的 **字符实体** —— **`\u0026nbsp;`**\n    -   若要添加 **多个** 空格，就输入多个 —— **`\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`**\n-   **格式：**\n    \n    -   **`这里有\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;6个空格分隔`**\n-   **效果：**\n    \n    -   这里有      6个空格分隔\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#142-77)14.2 换行\n\n**场景1：**\n\n-   在一些编辑器或者支持MD的笔记软件里，无论你打多少个 **回车**，它只会显示单个 **回车** 的空行间距\n    -   可以使用之前表格里提到的 **`\u003cbr\u003e`** 标签，在 **单独一行** 中使用，增加额外的空行间距\n    -   如果要增加 **多个**，就输入 **多个** —— **`\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e`**\n    -   **注意：** 当单独一行使用 `\u003cbr\u003e` 标签的时候，如果前后有标题标识符或者列表标识符，确保 **br标签** 前后两行都是空白行\n-   **格式：**\n\n```markdown\n这里第一段文本\n\n\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e     \u003c!-- 这里插入了5个空行间距 --\u003e\n\n这里是第二段文本\n```\n\n-   **效果：**\n\n这里第一段文本  \n  \n  \n  \n  \n  \n  \n这里是第二段文本\n\n  \n  \n\n**场景2：**\n\n-   在列表中也可以插入换行符\n\n```markdown\n- 这是一段无序列表\n  \u003cbr\u003e     \u003c!-- 插入一个空行间距，需单独一行，上下不用预留空格 --\u003e\n  这是同一段无序列表中，空一行距离显示的内容\n- 这是第二段无序列表\n```\n\n**效果：**\n\n-   这是第一段无序列表  \n      \n      \n    这是同一段无序列表中，空一行距离显示的内容\n-   这是第二段无序列表\n\n  \n\n-   **补充：**\n    -   有一些MD编辑器或笔记软件，严格遵循MD的换行规则，你敲一个回车是没法换行的，必须在 **行末** 敲 **2个空格**，再按回车键\n        -   **格式：**\n            -   这里是一段想换行的文本空格 空格 Enter  \n                这是换行后的文本\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#143-78)14.3 强制删除\n\n-   很多编辑器都有英文标点自动补全功能，自动生成一对，光标落在中间  \n    只想删除前面1个，却会把 **一整对** 都删掉\n-   在多个列表的嵌套中，也许会遇到一些 **无法被删除** 的 **列表标识符**\n-   **解决方法：**  \n    使用 **`Shift`** + **`Backspace`** 即可强制删除\n    -   **Bcakspace**   ( 退格键 )\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#15-79)15. 嵌入\n\n-   嵌入都是依赖 **HTML标签** 实现的\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#151-80)15.1 嵌入音频\n\n-   **格式：**\n    \n    -   **`\u003caudio controls=\"controls\" preload=\"none\" src=\"音频链接地址\"\u003e\u003c/audio\u003e`**\n-   **示例：**\n    \n\n```xml\n\u003caudio controls=\"controls\" preload=\"none\" src=\"https://www.ldoceonline.com/media/english/exaProns/p008-001803372.mp3?version=1.2.30\"\u003e\u003c/audio\u003e\n```\n\n-   **效果：**\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#152-81)15.2 嵌入视频\n\n-   **格式：**\n\n```bash\n\u003cvideo width=\"600\" height=\"420\" controls\u003e\n  \u003csource src=\"movie.mp4\" type=\"video/mp4\"\u003e\n  \u003csource src=\"movie.ogg\" type=\"video/ogg\"\u003e\n  \u003csource src=\"movie.webm\" type=\"video/webm\"\u003e  \n\u003c/video\u003e\n```\n\n-   **说明：**\n    \n    -   width ( 宽度 ) height ( 高度 ) ，可以自己设置，直接输入数字即可，单位默认是 px(像素)  \n        也可以使用 **百分比**  \n        **`width=100%`** 代表水平撑满整个窗口  \n        **`height=50%`** 代表垂直撑满半个窗口\n    -   **Video标签** 支持的视频格式 ：MP4 ogg webm\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#153-82)15.3 嵌入页面\n\n-   **格式：** **`\u003ciframe width=600 height=400 src=\"页面链接地址\" scrolling=\"auto\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"\u003e \u003c/iframe\u003e`**\n\n```xml\n\u003ciframe width=600 height=400 src=\"https://www.runoob.com/html/html-tutorial.html\" scrolling=\"auto\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"\u003e \u003c/iframe\u003e\n```\n\n-   **iframe标签** 除了嵌入页面，也可以嵌入**在线视频**，主流的视频网站都会提供**嵌入代码**\n    \n    -   **B站** 的视频，得在 **`//`** 前面补充 **`http:`**\n    -   不是所有的 编辑器和笔记软件 都支持这个\n-   **示例：**\n    \n\n```xml\n\u003ciframe width=600 height=400 src=\"http://player.bilibili.com/player.html?aid=20190823\u0026bvid=BV1yW411s7og\u0026cid=32964980\u0026page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"\u003e \u003c/iframe\u003e\n```\n\n-   宽高设置和前面的 **video** 一样\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#16-latex-83)16. Latex\n\n-   **Latex** 主要用来书写 **数学公式** 与 **化学公式**\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#161-84)16.1 行内公式\n\n-   **格式：**\n    \n    -   **$** + 行内公式 + **$**\n\n  \n\n-   **示例：**\n    \n    -   **`$x^2 + 2x + 5 + \\sqrt x = 0$`**\n        \n        **`$\\ce{CO2 + C -\u003e 2 CO}$`**\n        \n-   **效果：**\n    \n\n![latex 行内公式](https://forum-zh.obsidian.md/uploads/default/original/1X/96d6e8c2d14580042d6b1208e77673745779690c.png)\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#162-85)16.2 公式块\n\n-   **格式：**\n    -   **`$$`**  \n        公式块  \n        **`$$`**\n\n  \n\n-   **示例：**\n\n```markdown\n$$\n$\\ce{Zn^2+  \u003c=\u003e[+ 2OH-][+ 2H+]  $\\underset{\\text{amphoteres Hydroxid}}{\\ce{Zn(OH)2 v}}$  \u003c=\u003e[+ 2OH-][+ 2H+]  $\\underset{\\text{Hydroxozikat}}{\\ce{[Zn(OH)4]^2-}}$}$\n$$\n\n\u003c!-- 麦克斯韦方程组 --\u003e\n$$\n\\begin{array}{lll}\n\\nabla\\times E \u0026=\u0026 -\\;\\frac{\\partial{B}}{\\partial{t}}   \n\\ \\nabla\\times H \u0026=\u0026 \\frac{\\partial{D}}{\\partial{t}}+J   \n\\ \\nabla\\cdot D \u0026=\u0026 \\rho\n\\ \\nabla\\cdot B \u0026=\u0026 0\n\\ \\end{array}\n$$\n```\n\n  \n\n**效果：**\n\n[![latex 公式块](https://forum-zh.obsidian.md/uploads/default/optimized/1X/aba50101dbc846e442f371961355ceef47a85b10_2_690x199.png \"latex 公式块\")\n\nlatex 公式块974×282 57.9 KB\n\n](https://forum-zh.obsidian.md/uploads/default/original/1X/aba50101dbc846e442f371961355ceef47a85b10.png \"latex 公式块\")\n\n-   **补充：**\n    -   需要详细教程的，可戳下方链接\n    -   [Latex详细教程 225](https://www.wolai.com/wolai/egjDbHiAfGfJmwR972fcEW \"wolai Latex教程\")\n\n  \n  \n\n## [](https://forum-zh.obsidian.md/t/topic/435#17-mermaid-86)17. Mermaid\n\n-   一些 **MD编辑器** 和 **笔记软件** 支持通过 [**Mermaid** 32](https://mermaid-js.github.io/ \"Mermaid官网\") 及其所提供的 [编译器 9](https://mermaid-js.github.io/mermaid-live-editor \"Mermaid在线编译器\") 来为用户提供图表的绘制功能\n    \n-   这里只提供一些演示的图表，具体教程可戳下方链接\n    \n    -   [Mermaid详细教程 228](https://zhuanlan.zhihu.com/p/355997933 \"知乎Mermaid教程\")\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#171-87)17.1 流程图\n\n-   **源码：**\n\n````markdown\n```mermaid\ngraph LR\nemperor((朱八八))-.子.-\u003e朱五四-.子.-\u003e朱四九-.子.-\u003e朱百六\n朱雄英--长子--\u003e朱标--长子--\u003eemperor\nemperor2((朱允炆))--次子--\u003e朱标\n朱樉--次子--\u003eemperor\n朱棡--三子--\u003eemperor\nemperor3((朱棣))--四子--\u003eemperor\nemperor4((朱高炽))--长子--\u003eemperor3\n```\n````\n\n**渲染：**\n\n[![mermaid 流程图](https://forum-zh.obsidian.md/uploads/default/optimized/1X/1d45d0418552fc61e2791604f981c69761cfa6b0_2_690x349.png)\n\nmermaid 流程图1108×561 87 KB\n\n](https://forum-zh.obsidian.md/uploads/default/original/1X/1d45d0418552fc61e2791604f981c69761cfa6b0.png \"mermaid 流程图\")\n\n  \n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#172-88)17.2 饼图\n\n-   **源码：**\n\n````markdown\n```mermaid\npie\n    title 为什么总是宅在家里？\n    \"喜欢宅\" : 45\n    \"天气太热\" : 70\n    \"穷\" : 500\n\t\"关你屁事\" : 95\n```\n````\n\n**渲染：**\n\n[![mermaid 饼图](https://forum-zh.obsidian.md/uploads/default/optimized/1X/c0bb1ec053714409c4dcd5b68426be4cae47f1be_2_690x419.png)\n\nmermaid 饼图965×587 74.9 KB\n\n](https://forum-zh.obsidian.md/uploads/default/original/1X/c0bb1ec053714409c4dcd5b68426be4cae47f1be.png \"mermaid 饼图\")\n\n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#173-89)17.3 顺序图 (时序图)\n\n-   **源码：**\n\n````markdown\n```mermaid\nsequenceDiagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant A as Aly\n        participant B as Bob\n        participant C as CofCai\n        %% 便签说明\n        Note left of A: 只复习了一部分\n        Note right of B: 没复习\n        Note over A,B: are contacting\n        \n        A-\u003e\u003eB: 明天是要考试吗？\n        B--\u003e\u003eA: 好像是的！\n        \n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par askA\n                C --\u003e\u003e A:你复习好了吗？\n            and askB\n                C --\u003e\u003e B:你复习好了吗？\n            and self\n                C -\u003e\u003eC:我还没准备复习......\n            end\n        end\n        \n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/Every min\n            %% \u003cbr/\u003e可以换行\n            C -\u003e\u003e C:我什么时候\u003cbr/\u003e开始复习呢？\n            end\n        end\n        \n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                A -\u003e\u003e C:复习了一点\n            else is common\n                B -\u003e\u003e C:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt Extra response\n                C -\u003e\u003e C:你们怎么不回答我\n            end\n        endsequenceDiagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant A as Aly\n        participant B as Bob\n        participant C as CofCai\n        %% 便签说明\n        Note left of A: 只复习了一部分\n        Note right of B: 没复习\n        Note over A,B: are contacting\n        \n        A-\u003e\u003eB: 明天是要考试吗？\n        B--\u003e\u003eA: 好像是的！\n        \n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par askA\n                C --\u003e\u003e A:你复习好了吗？\n            and askB\n                C --\u003e\u003e B:你复习好了吗？\n            and self\n                C -\u003e\u003eC:我还没准备复习......\n            end\n        end\n        \n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/Every min\n            %% \u003cbr/\u003e可以换行\n            C -\u003e\u003e C:我什么时候\u003cbr/\u003e开始复习呢？\n            end\n        end\n        \n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                A -\u003e\u003e C:复习了一点\n            else is common\n                B -\u003e\u003e C:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt Extra response\n                C -\u003e\u003e C:你们怎么不回答我\n            end\n        end\n```\n````\n\n**渲染：**\n\n[![mermaid 时序图](https://forum-zh.obsidian.md/uploads/default/optimized/1X/5a9de2149386fa6b665119d4eb2365cc629809bf_2_283x500.png)\n\nmermaid 时序图745×1312 91.4 KB\n\n](https://forum-zh.obsidian.md/uploads/default/original/1X/5a9de2149386fa6b665119d4eb2365cc629809bf.png \"mermaid 时序图\")\n\n  \n  \n\n### [](https://forum-zh.obsidian.md/t/topic/435#174-90)17.4 甘特图\n\n-   **源码：**\n\n````markdown\n```mermaid\ngantt\n    title A Gantt Diagram\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    another task      : 24d\n```\n````\n\n**渲染：**\n\n[![mermaid 甘特图](https://forum-zh.obsidian.md/uploads/default/optimized/1X/055649b00d70ed0fb49752c7192a67f23b049211_2_690x137.png)\n\nmermaid 甘特图1452×289 63 KB\n\n](https://forum-zh.obsidian.md/uploads/default/original/1X/055649b00d70ed0fb49752c7192a67f23b049211.png \"mermaid 甘特图\")","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/MongoDB/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C":{"title":"基础操作","content":"\n\n## 插入\n### 语法\n```\ndb.COLLECTION_NAME.insert(document)\n或\ndb.COLLECTION_NAME.save(document)\n```\n\u003e 可以用 for 循环批量插入数据\n\n-   save()：如果 _id 主键存在则更新数据，如果不存在就插入数据。该方法新版本中已废弃，可以使用 **db.collection.insertOne()* 或 **db.collection.replaceOne()** 来代替。\n-   insert(): 若插入的数据主键已经存在，则会抛 **org.springframework.dao.DuplicateKeyException** 异常，提示主键重复，不保存当前数据。\n\n***3.2 版本之后新增了 db.collection.insertOne() 和 db.collection.insertMany()。***\n\n\u003edb.collection.insertOne() 用于向集合插入一个新文档，语法格式如下：\n\n\n```\ndb.collection.insertOne(\n   \u003cdocument\u003e,\n   {\n      writeConcern: \u003cdocument\u003e\n   }\n)\n```\n\n\u003edb.collection.insertMany() 用于向集合插入一个多个文档，语法格式如下：\n\n```\ndb.collection.insertMany(\n   [ \u003cdocument 1\u003e , \u003cdocument 2\u003e, ... ],\n   {\n      writeConcern: \u003cdocument\u003e,\n      ordered: \u003cboolean\u003e\n   }\n)\n```\n\n参数说明：\n\n-   document：要写入的文档。\n-   writeConcern：写入策略，默认为 1，即要求确认写操作，0 是不要求。\n-   ordered：指定是否按顺序写入，默认 true，按顺序写入。\n\n\n---\n## 查询\nMongoDB 查询数据的语法格式如下：\n```\ndb.collection.find(query, projection)\n```\n\n-   **query** ：可选，使用查询操作符指定查询条件\n-   **projection** ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）。\n如果你需要以易读的方式来读取数据，可以使用 pretty() 方法，语法格式如下：\n```\ndb.col.find().pretty()\n```\npretty() 方法以格式化的方式来显示所有文档。\n\n```\nadmin\u003e db.student.find({age:6},{age:0}).pretty()\n[ { _id: ObjectId(\"64409d9bded84f0a882486ff\"), name: 'a6' } ]\nadmin\u003e db.student.find({age:6},{age:1}).pretty()\n[ { _id: ObjectId(\"64409d9bded84f0a882486ff\"), age: 6 } ]\n```\n\n\n###  MongoDB 与 RDBMS Where 语句比较\n![[../../../BT_Example/99-Attach/Pasted image 20230420101526.png]]\n\u003e补充：查询指定多个条件 in；以外nin\n### MongoDB AND 条件\n\nMongoDB 的 find() 方法可以传入多个键(key)，每个键(key)以逗号隔开，即常规 SQL 的 AND 条件。\n\n语法格式如下:\n\n\u003e db.col.find({key1: value1, key2: value2}).pretty()\n\n```\n\u003e db.col.find({\"by\": \"菜鸟教程\", \"title\": \"MongoDB 教程\"}).pretty()\n{\n        \"_id\" : ObjectId(\"56063f17ade2f21f36b03133\"),\n        \"title\" : \"MongoDB 教程\",\n        \"description\" : \"MongoDB 是一个 Nosql 数据库\",\n        \"by\" : \"菜鸟教程\",\n        \"url\" : \"http://www.runoob.com\",\n        \"tags\" : [\n                \"mongodb\",\n                \"database\",\n                \"NoSQL\"\n        ],\n        \"likes\" : 100\n}\n```\n以上实例中类似于 WHERE 语句：**WHERE by='菜鸟教程' AND title='MongoDB 教程'**\n\n---\n\n## 更新/修改\n\n\nMongoDB 使用 **update()** 和 **save()** 方法来更新集合中的文档\n### update ()\nupdate() 方法用于更新已存在的文档。语法格式如下：\n```\ndb.collection.update(\n   \u003cquery\u003e,\n   \u003cupdate\u003e,\n   {\n     upsert: \u003cboolean\u003e,\n     multi: \u003cboolean\u003e,\n     writeConcern: \u003cdocument\u003e\n   }\n)\n\n```\n\n**参数说明：**\n\n-   **query** : update的查询条件，类似sql update查询内where后面的。\n-   **update** : update的对象和一些更新的操作符（如$,$inc...）等，也可以理解为sql update查询内set后面的\n-   **upsert** : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。\n-   **multi** : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。\n-   **writeConcern** :可选，抛出异常的级别。\n![[../../../BT_Example/99-Attach/Pasted image 20230420104635.png]]\n### save() 方法\n\nsave() 方法通过传入的文档来替换已有文档，_id 主键存在就更新，不存在就插入。语法格式如下：\n\n```\ndb.collection.save(\n   \u003cdocument\u003e,\n   {\n     writeConcern: \u003cdocument\u003e\n   }\n)\n```\n\n**参数说明：**\n\n-   **document** : 文档数据。\n-   **writeConcern** :可选，抛出异常的级别。\n\n---\n## 删除\nMongoDB remove() 函数是用来移除集合中的数据。\n\nMongoDB 数据更新可以使用 update() 函数。在执行 remove() 函数前先执行 find() 命令来判断执行的条件是否正确，这是一个比较好的习惯。\n\n### 语法\n\nremove() 方法的基本语法格式如下所示：\n```\ndb.collection.remove(\n   \u003cquery\u003e,\n   {\n     justOne: \u003cboolean\u003e,\n     writeConcern: \u003cdocument\u003e\n   }\n)\n```\n\n**参数说明：**\n\n-   **query** :（可选）删除的文档的条件。\n-   **justOne** : （可选）如果设为 true 或 1，则只删除一个文档，如果不设置该参数，或使用默认值 false，则删除所有匹配条件的文档。\n-   **writeConcern** :（可选）抛出异常的级别。\n---\n## 排序\n在 MongoDB 中使用 sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。\n\n### 语法\n\nsort()方法基本语法如下所示：\n\n\u003e \u003edb.COLLECTION_NAME.find().sort({KEY: 1})\n\n---\n## MongoDB Limit 与 Skip 方法\n### MongoDB Limit() 方法\n如果你需要在 MongoDB 中读取指定数量的数据记录，可以使用 MongoDB 的 Limit 方法，limit()方法接受一个数字参数，该参数指定从 MongoDB 中读取的记录条数。\n\n#### 语法\n\nlimit()方法基本语法如下所示：\n\n\u003edb.COLLECTION_NAME.find().limit(NUMBER)\n\n\n### MongoDB Skip() 方法\n\n我们除了可以使用limit()方法来读取指定数量的数据外，还可以使用skip()方法来跳过指定数量的数据，skip方法同样接受一个数字参数作为跳过的记录条数。\n\n#### 语法\n\nskip() 方法脚本语法格式如下：\n\n\u003edb.COLLECTION_NAME.find().limit(NUMBER).skip(NUMBER)\n\n\n#### 实例\n\n以下实例只会显示第二条文档数据\n\ndb.col.find({},{\"title\":1,_id:0}).limit(1).skip(1)\n{ \"title\" : \"Java 教程\" }\n\n![[../../../BT_Example/99-Attach/Pasted image 20230420145718.png]]\n\n## MongoDB 聚合\n\nMongoDB 中聚合(aggregate)主要用于处理数据(诸如统计平均值，求和等)，并返回计算后的数据结果。\n\n有点类似 **SQL** 语句中的 count(*)。\n### aggregate () 方法\n\nMongoDB中聚合的方法使用aggregate()。\n\n### 语法\n\naggregate() 方法的基本语法格式如下所示：\n\n\u003edb.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)\n\n### 聚合的表达式 :\n![[../../../BT_Example/99-Attach/Pasted image 20230420150033.png]]\n### 实例\n![[../../../BT_Example/99-Attach/Pasted image 20230420161753.png]]\n![[../../../BT_Example/99-Attach/Pasted image 20230420163156.png]]\n![[../../../BT_Example/99-Attach/Pasted image 20230420163655.png]]\n![[../../../BT_Example/99-Attach/Pasted image 20230420163706.png]]\n![[../../../BT_Example/99-Attach/Pasted image 20230420164355.png]]\n### 管道\n管道在 Unix 和 Linux 中一般用于将当前命令的输出结果作为下一个命令的参数。\n\nMongoDB的聚合管道将MongoDB文档在一个管道处理完毕后将结果传递给下一个管道处理。管道操作是可以重复的。\n\n表达式：处理输入文档并输出。表达式是无状态的，只能用于计算当前聚合管道的文档，不能处理其它的文档。\n\n这里我们介绍一下聚合框架中常用的几个操作：\n\n-   $project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。\n-   $match：用于过滤数据，只输出符合条件的文档。$match使用MongoDB的标准查询操作。\n-   $limit：用来限制MongoDB聚合管道返回的文档数。\n-   $skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。\n-   $unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。\n-   $group：将集合中的文档分组，可用于统计结果。\n-   $sort：将输入文档排序后输出。\n-   $geoNear：输出接近某一地理位置的有序文档。\n\n---\n## 索引\n\u003e索引通常能够极大的提高查询的效率，如果没有索引，MongoDB 在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。\n这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。\n索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构\n\n### createIndex() 方法\n\nMongoDB 使用 createIndex() 方法来创建索引。\n#### 语法\n\ncreateIndex()方法基本语法格式如下所示：\n\n\u003edb.collection.createIndex(keys, options)\n\n语法中 Key 值为你要创建的索引字段，1 为指定按升序创建索引，如果你想按降序来创建索引指定为 -1 即可。\n\n#### 实例\n\n\u003edb.col.createIndex({\"title\":1})\n\u003e\n\ncreateIndex() 方法中你也可以设置使用多个字段创建索引（关系型数据库中称作复合索引）。\n\n\u003edb.col.createIndex({\"title\":1,\"description\":-1})\n\ncreateIndex() 接收可选参数，可选参数列表如下：\n![[../../../BT_Example/99-Attach/Pasted image 20230421092911.png]]\n\n#### 实例\n\n在后台创建索引：\n\ndb.values.createIndex({open: 1, close: 1}, {background: true})\n\n通过在创建索引时加 background: true 的选项，让创建工作在后台执行\n\n#### 注\n  \n\u003e[!note]\n\u003e  \n1、查看集合索引\n\u003e\n\u003edb.col.getIndexes()\n\u003e\n\u003e2、查看集合索引大小\n\u003e\ndb.col.totalIndexSize()\n\u003e\n\u003e3、删除集合所有索引\n\u003e\n\u003edb.col.dropIndexes()\n\u003e\n\u003e4、删除集合指定索引\n\u003e\n\u003edb.col.dropIndex(\"索引名称\")\n\n\n### 分析索引\n![[../../../BT_Example/99-Attach/Pasted image 20230421101500.png]]\n\n## 权限机制","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/MongoDB/%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%A4%A7%E5%85%A8":{"title":"操作符大全","content":"# $lte\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/MongoDB/Question":{"title":"{{title}}","content":"\n## ✍内容\n上午：\n数据库接口编写\n连接数据库遇见问题连接超时，检查多次代码，数据库无果，\n通过查找资料发现，报错原因是 nodejs 在后台使用 ipv6，所以 localhost 不是指向 127.0.0.1，\nConst timeoutError = new error_1.MongoServerSelectionError(`Server selection timed out after ${serverSelectionTimeoutMS} ms`, this.description);\n解决方案：将 localhost 手动改为 127.0.0.1\n下午：\n1. 编写前端 demo，使用 node 写 mongodb 接口进行测试\n遇到问题：在添加数据是，返回妆台为 200 成功但是数据没有写入到数据库，\n解决方案：因为使用 postcode 进行测试时，请求头内容格式为 x- www-form-urlencoded ，因此在前端 demo 中也用的这种格式，但发现无法写入数据，改为 json 后成功写入\n\n2. 学习 D 3.js 数据可视化设计\n使用 d3 练习画了一个笑脸和一个花瓣\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Nebulas/%E6%95%B0%E6%8D%AE%E5%90%88%E7%BA%A6":{"title":"Datacontract","content":"\n## ✍内容\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Nebulas/LocalContractStorage.defineProperties%E5%92%8C-LocalContractStorage.defineMapProperty%E5%8C%BA%E5%88%AB":{"title":"LocalContractStorage.defineProperties和 LocalContractStorage.defineMapProperty区别","content":"\n## ✍内容\n`LocalContractStorage.defineProperties` 和 `LocalContractStorage.defineMapProperty` 都是在 Nebulas 区块链上使用 JavaScript 编写智能合约时的方法，但它们有一些不同之处。\n\n`LocalContractStorage.defineProperties` 用于定义智能合约中的属性，这些属性可以是字符串、数字、数组或其他 JavaScript 数据类型。例如：\n```js\nLocalContractStorage.defineProperties(this, { \nname: null, \nage: 0, \nhobby: [] \n});\n```\n\n[新建应用1 (ivx.cn)](https://editor.ivx.cn/?#11221118)\n\n通过这个方法定义的属性可以直接在智能合约代码中被访问和修改，就像普通的 JavaScript 对象一样，例如：\n\n```js\nthis.name = \"Alice\";\nthis.age += 1; \nthis.hobby.push(\"reading\");\n```\n\n与此不同，`LocalContractStorage.defineMapProperty` 用于定义一个键值对存储映射，其中键和值都可以是字符串或数字。例如：\n```js\nLocalContractStorage.defineMapProperty(this, \"myMap\");\n```\n\n然后，您就可以使用 `myMap` 对象来存储和检索键值对，例如：\n\n```js\nthis.myMap.put(\"key1\", \"value1\"); var value = this.myMap.get(\"key1\");\n```\n\n总的来说，`defineProperties` 用于定义存储普通数据类型的属性，而 `defineMapProperty` 则用于定义键值对存储映射。\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Nebulas/Nebulas":{"title":"Nebulas","content":"\n`button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Nebulas]]**\n\t- [[数据合约]]\n\t- [[LocalContractStorage.defineProperties和 LocalContractStorage.defineMapProperty区别]]\n\t- [[Nebulas Fundamentals]]\n\n%% End Waypoint %%\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Nebulas/Nebulas-Fundamentals":{"title":"NebulasFundamentals","content":"# \u003cfont color=\"#7030a0\"\u003e简介\u003c/font\u003e\n\n---\n## 基本结构\n\n```js\nclass FirstContract {\n    //创建一个对象\n    constructor() {\n\n        //You need to ensure that each contract has a different __contractName\n\n        this.__contractName = 'FirstContract'\n        //使用LocalContractStorage.defineMapProperty方法定义size属性\n        LocalContractStorage.defineMapProperty(this, 'authentication')\n\n    }\n       部署时只会执行一次的函数\n    init (authentication) {\n         //将value存储到链上\n        this.authentication=authentication\n    }\n    accept() {\n\n        // You can use the following code to get the transaction information\n\n        Event.Trigger('transfer', {\n\n            // The transaction hash\n\n            from: Blockchain.transaction.from,\n\n            // The transaction hash\n\n            to: Blockchain.transaction.to,\n\n            // The transaction value\n\n            value: Blockchain.transaction.value,\n            //\n        })\n    }\n\n}\n \n\nmodule.exports = FirstContract\n```\n## \u003cfont color=\"#3f3151\"\u003e 函数\u003c/font\u003e\n\u003e 在 Nebulas 中为函数定义了两种可见性（Javascript 中中没有这种可见性）\n\n-  `publick` 名称名称与正则表达式匹配的所有函数都是公共的\n- `private` 名称的所有函数都是私有的，私有函数只能由公告函数调用 \n\n## \u003cfont color=\"#3f3151\"\u003e存储\u003c/font\u003e\n\u003e 星云的智能合约环境内置了存储对象，可以存储数字、字符串和JavaScript对象。存储的数据只能在智能合约中使用。其他合约无法读取存储的数据。`LocalContractStorage`\n### \u003cfont color=\"#b2a2c7\"\u003e基本\u003c/font\u003e\nAPI 包括和，可用于存储、读取和删除数据。存储可以是数字、字符串、对象 `LocalContractStorage` `set` `get`  `del`\n\n#### 存储数据：`LocalContractStorage`\n```js\n// store data. The data will be stored as JSON strings\nLocalContractStorage.put(key, value);\n// Or\nLocalContractStorage.set(key, value);\n```\n#### 读取数据：`LocalContractStorage`\n```js\n// get the value from key\nLocalContractStorage.get(key);\n```\n#### 删除数据：`LocalContractStorage`\n```js\n// delete data, data can not be read after deletion\nLocalContractStorage.del(key);\n// Or\nLocalContractStorage.delete(key);\n```\n\u003cfont color=\"#ccc1d9\"\u003e### 高深\u003c/font\u003e\n\u003e绑定映射属性\n\n```js\n'use strict';\n\nvar SampleContract = function () {\n    // Set `SampleContract`'s property to `userMap`. Map data then can be stored onto the chain using `userMap`\n    LocalContractStorage.defineMapProperty(this, \"userMap\");\n\n    // Set `SampleContract`'s property to `userBalanceMap`, and custom define the storing and serializtion reading functions.\n    LocalContractStorage.defineMapProperty(this, \"userBalanceMap\", {\n        stringify: function (obj) {\n            return obj.toString();\n        },\n        parse: function (str) {\n            return new BigNumber(str);\n        }\n    });\n\n    // Set `SampleContract`'s properties to mulitple map batches\n    LocalContractStorage.defineMapProperties(this,{\n        key1Map: null,\n        key2Map: null\n    });\n};\n\nSampleContract.prototype = {\n    init: function () {\n    },\n    testStorage: function () {\n        // Store the data in userMap and serialize the data onto the chain\n        this.userMap.set(\"robin\",\"1\");\n        // Store the data into userBalanceMap and save the data onto the chain using a custom serialization function\n        this.userBalanceMap.set(\"robin\",new BigNumber(1));\n    },\n    testRead: function () {\n        //Read and store data\n        var balance = this.userBalanceMap.get(\"robin\");\n        this.key1Map.set(\"robin\", balance.toString());\n        this.key2Map.set(\"robin\", balance.toString());\n    }\n};\n\nmodule.exports = SampleContract;\n```\n## \u003cfont color=\"#ccc1d9\"\u003e区块链\u003c/font\u003e\n\u003e 该模块用于获取当前执行合约中的交易和区块。此外，NAS 可以从合同中转移并提供地址验证 `Blockchain`\n\nBlockchain 具有两个属性\n1. `block` 具有属性的合约执行的当前块\n -  _块时间戳 `timsetamp`\n - _块哈希 `hash`\n - _块高度 height\n 2. 具有属性的合约执行的当前交易 `transaction`\n - _交易哈希 `hash`\n - _来自地址的交易 `from`\n - _交易到地址 `to`\n - _交易价值，合约使用的 BigNumber 对象 `value`\n - _交易随机数 `nonce`\n - _交易时间戳 `timestams`\n - _交易 gasLimit，一个用于合约的 BigNumber 对象 `gasLimit`\n \n 并提供两种方法：`Blockchain`\n 1. `transfer (address, value) ` 将 NAS 从从合同转到地址\n - 参数：接受 NAS 的星云地址 `address`\n - param：传输的值，一个 BigNumber 对象对象 `value`\n 返回：传输成功传输失败 0 1\n 2. `verifyAddress(address) address` 验证参数是否为有效的星云地址 \n 返回： 地址有效地址地址无效 1 0\n \n \n \n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/NextJs/NextJs":{"title":"NextJs","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: NextJs\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[NextJs]]**\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Node/Introduction-to-Node.js":{"title":"Introduction to Node.js","content":"\n#  Introduction to Node.js\n\n## \u003cfont color=\"#205867\"\u003e基本组件\u003c/font\u003e\n\n### \u003cfont color=\"#31859b\"\u003e全局\u003c/font\u003e  \n[Node.js 全局对象](https://www.runoob.com/nodejs/nodejs-global-object.html)\n\u003e 在浏览器 JavaScript 中，通常 window 是全局对象，而 Node.js 中的全局对象是 global，所有全局变量（除了 global 本身以外）都是 global 对象的属性。在 Node.js 我们可以直接访问到 global 的属性，而不需要在应用中包含它。\n\n#### __filename\n\n\u003e**__filename** 表示当前正在执行的脚本的文件名。它将输出文件所在位置的绝对路径，且和命令行参数所指定的文件名不一定相同。如果在模块中，返回的值是模块文件的路径。\n\n#### __dirname\n\n\u003e**__dirname** 表示当前执行脚本所在的目录。\n\n### \u003cfont color=\"#31859b\"\u003e模块\u003c/font\u003e\n\u003e \n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Node/Node":{"title":"Node","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntags: 目录\ntitle: Node\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Introduction to Node.js]]**\n\n%% End Waypoint %%\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E9%92%A9%E5%AD%90%E5%A4%84%E7%90%86%E8%A1%A8%E5%8D%95":{"title":"使用自定义钩子处理表单","content":"```js\nimport { useReducer } from 'react';\n\nconst initialInputState = {\n  value: '',\n  isTouched: false,\n};\n\nconst inputStateReducer = (state, action) =\u003e {\n  if (action.type === 'INPUT') {\n    return { value: action.value, isTouched: state.isTouched };\n  }\n  if (action.type === 'BLUR') {\n    return { isTouched: true, value: state.value };\n  }\n  if (action.type === 'RESET') {\n    return { isTouched: false, value: '' };\n  }\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) =\u003e {\n  const [inputState, dispatch] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid \u0026\u0026 inputState.isTouched;\n\n  const valueChangeHandler = (event) =\u003e {\n    dispatch({ type: 'INPUT', value: event.target.value });\n  };\n\n  const inputBlurHandler = (event) =\u003e {\n    dispatch({ type: 'BLUR' });\n  };\n\n  const reset = () =\u003e {\n    dispatch({ type: 'RESET' });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n```\n```js\n\n\n\n\n\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) =\u003e {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) =\u003e value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) =\u003e value.includes('@'));\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid \u0026\u0026 enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) =\u003e {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    // nameInputRef.current.value = ''; =\u003e NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    \u003cform onSubmit={formSubmissionHandler}\u003e\n      \u003cdiv className={nameInputClasses}\u003e\n        \u003clabel htmlFor='name'\u003eYour Name\u003c/label\u003e\n        \u003cinput\n          type='text'\n          id='name'\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        /\u003e\n        {nameInputHasError \u0026\u0026 (\n          \u003cp className='error-text'\u003eName must not be empty.\u003c/p\u003e\n        )}\n      \u003c/div\u003e\n      \u003cdiv className={emailInputClasses}\u003e\n        \u003clabel htmlFor='email'\u003eYour E-Mail\u003c/label\u003e\n        \u003cinput\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        /\u003e\n        {emailInputHasError \u0026\u0026 (\n          \u003cp className='error-text'\u003ePlease enter a valid email.\u003c/p\u003e\n        )}\n      \u003c/div\u003e\n      \u003cdiv className='form-actions'\u003e\n        \u003cbutton disabled={!formIsValid}\u003eSubmit\u003c/button\u003e\n      \u003c/div\u003e\n    \u003c/form\u003e\n  );\n};\n\nexport default SimpleInput;\n```","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/React/%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD%E6%83%85%E5%86%B5-%E6%97%A0-%E9%94%99%E8%AF%AF-%E5%8A%A0%E8%BD%BD%E4%B8%AD":{"title":"处理数据加载情况 无 错误 加载中","content":"```jsx\n  \nlet content = \u003cp\u003eFound no movies.\u003c/p\u003e;\n\nif (movies.length \u003e 0) {\n\ncontent = \u003cMoviesList movies={movies} /\u003e;\n\n}\n\nif (error) {\n\ncontent = \u003cp\u003e{error}\u003c/p\u003e;\n\n}\n\nif (isLoading) {\n\ncontent = \u003cp\u003eLoading...\u003c/p\u003e;\n\n}\n\nreturn (\n\n\u003cReact.Fragment\u003e\n\n\u003csection\u003e\n\n\u003cAddMovie onAddMovie={addMovieHandler} /\u003e\n\n\u003c/section\u003e\n\n\u003csection\u003e\n\n\u003cbutton onClick={fetchMoviesHandler}\u003eFetch Movies\u003c/button\u003e\n\n\u003c/section\u003e\n\n\u003csection\u003e{content}\u003c/section\u003e\n\n\u003c/React.Fragment\u003e\n\n);\n\n}\n```","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/React/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B0%B1%E8%83%BD%E7%90%86%E8%A7%A3%E7%9A%84-React-Portals%E4%BC%A0%E9%80%81%E9%97%A8":{"title":"简单介绍就能理解的 React Portals（传送门）","content":"React Portal 提供了一种将子节点渲染到父组件以外的 DOM 节点的优秀解决方案。Portal 的最常见用例是子组件需要从视觉上脱离父容器，如下所示。\n\n-   模态对话框\n-   工具提示\n-   悬浮卡\n-   加载动画\n\n可以使用 `ReactDOM.createPortal(child,container)` 创建一个 Portal。这里的 **child** 是一个 React 元素，fragment 片段或者是一个字符串，**container** 是 Portal 要插入的 DOM 节点的位置。\n\n下面是使用 `ReactDOM.createPortal(child,container)` 创建的一个简单 modal 组件。\n\n```\n```const Modal = ({ message, isOpen, onClose, children }) =\u003e {\n  if (!isOpen) return null;\n  return ReactDOM.createPortal(\n    \u003cdiv className=\"modal\"\u003e\n      \u003cspan className=\"message\"\u003e{message}\u003c/span\u003e\n      \u003cbutton onClick={onClose}\u003eClose\u003c/button\u003e\n    \u003c/div\u003e,\n    domNode\n  );\n};\n```\n\n即使 Portal 是在父级 DOM 元素之外呈现的，他的表现行为也跟平常我们在 React 组件中使用是一样的。它能够接受 **props** 以及 **context** API。这是因为 Portal 驻留在 React Tree 层次结构内（也就是保证在同一颗 React Tree 上）。\n\n## 为什么我们需要它呢\n\n当我们在特定元素（父组件）中使用模态弹窗时，模态的高度和宽度就会从模态弹窗所在的组件继承，也就是说模态弹窗的样式可能会被父组件影响。传统的模态框需将需要 CSS 属性，例如 `overflow：hidden` 和 `z-index` 来避免这个问题。\n\n![A typical modal where the parent component overrides the height and width](https://segmentfault.com/img/remote/1460000038457701 \"A typical modal where the parent component overrides the height and width\")\n\n上面的代码示例将导致模态框在 `root` 下的嵌套组件内部渲染。当使用浏览器检查元素时，如下所示。\n\n![Modal rendered without React Portal.](https://segmentfault.com/img/remote/1460000038457703 \"Modal rendered without React Portal.\")\n\n接下来，让我们看看 React Portal 是如何被使用的。下面的代码使用 **createPortal()** 在 **root** 树层次结构之外创建 DOM 节点来解决此问题。\n\nconst Modal = ({ message, isOpen, onClose, children }) =\u003e {\n  if (!isOpen) return null;\n  return ReactDOM.createPortal(\n    \u003cdiv className=\"modal\"\u003e\n      \u003cspan\u003e{message}\u003c/span\u003e\n      \u003cbutton onClick={onClose}\u003eClose\u003c/button\u003e\n    \u003c/div\u003e,\n    document.body\n  );\n};\n\nfunction Component() {\n  const [open, setOpen] = useState(false);\n  return (\n    \u003cdiv className=\"component\"\u003e\n      \u003cbutton onClick={() =\u003e setOpen(true)}\u003eOpen Modal\u003c/button\u003e\n      \u003cModal\n        message=\"Hello World!\"\n        isOpen={open}\n        onClose={() =\u003e setOpen(false)}\n      /\u003e\n    \u003c/div\u003e\n  );\n}\n\n下面显示的是 DOM 树层次结构，这是在使用 React Portal 时得到的，其中模态框组件将被注入 **root** 之外，并且与 **root** 处于同一层级。\n\n![Modal rendered with React Portal](https://segmentfault.com/img/remote/1460000038457700 \"Modal rendered with React Portal\")\n\n由于这个模态框是在根层次结构之外渲染的，因此模态框的大小不会因为继承父级组件而被更改。\n\n![A model rendered as a Portal](https://segmentfault.com/img/remote/1460000038457702 \"A model rendered as a Portal\")\n\n你可在 [CodeSandbox](https://link.segmentfault.com/?enc=80mk7v0RvTKgbxowW0ufEQ%3D%3D.JrpGW0eQhO%2FTaiyjWDvcJUIrrCdrrxvotGJuaVshE9tY0TcYYTzdgYjZ8fi%2BjOXg) 中找到这个例子，你可以在其中查看并修改代码以查看门户的工作方式，并解决我们讨论的问题。\n\n## 什么时候使用 Portal 呢\n\n使用 React Portal 时，你应该注意几个方面。除非你了解 React Portal，否则下面这些行为不容易被察觉。因此，在这里提及。\n\n-   **事件冒泡会正常工作** —— 通过将事件传播到 React 树的祖先，事件冒泡将按预期工作，而与 DOM 中的 Portal 节点位置无关。\n-   **React 可以控制 Portal 节点及其生命周期** — 当通过 Portal 渲染子元素时，React 仍然可以控制它们的生命周期。\n-   **React Portal 只影响 DOM 结构** —— Portal 只会影响 HTML DOM 结构，而不会影响 React 组件树。\n-   **预定义的 HTML 挂载点** —— 使用 React Portal 时，你需要提前定义一个 HTML DOM 元素作为 Portal 组件的挂载。\n\n## 结论\n\n在我们需要在正常 DOM 层次结构之外呈现子组件而又不通过 React 组件树层次结构破坏事件传播的默认行为时，React Portal（传送门）会派上用场。比如在渲染模态框，工具提示，弹出消息之类的组件时，这很有用。","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/React/%E9%98%B2%E6%8A%96":{"title":"防抖","content":"\n```swift\n\ntool.js文件\nexport function deBounce(func, wait) {\n  let timeOut = null;\n  return function (...args) {\n    clearTimeout(timeOut);//一定要清除定时器\n    timeOut = setTimeout(() =\u003e {\n      func(...args);\n    }, wait);\n  };\n}\n\n\n调用的时候\nimport { deBounce} from 'tool'\n\n//使用onChange 做为演示\nonChange = deBounce(() =\u003e {//格式一定要这么写！！！当然箭头函数 你也可以传方法\n    //此处放置需要防抖的功能\n    \n},2000);\n```\n---\n```JS\n  useEffect(() =\u003e {\n\n    const identifier = setTimeout(() =\u003e {\n\n      console.log('Checking form validity!');\n\n      setFormIsValid(\n\n        enteredEmail.includes('@') \u0026\u0026 enteredPassword.trim().length \u003e 6\n\n      );\n\n    }, 500);\n\n  \n\n    return () =\u003e {\n\n      console.log('CLEANUP');\n\n      clearTimeout(identifier);\n\n    };\n\n  }, [enteredEmail, enteredPassword]);\n```","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/React/%E9%A2%9C%E8%89%B2%E9%80%89%E6%8B%A9%E5%99%A8":{"title":"颜色选择器","content":"\n## ✍内容\n```jsx\nimport React, { useState, useMemo } from 'react';\n\nimport reactCSS from 'reactcss';\n\nimport { SketchPicker } from 'react-color';\n\nimport classes from './color.module.scss';\n\n  \n\nconst CustomColors = props =\u003e {\n\n  const [ color, setColor ] = useState('#fff');\n\n  const styles = useMemo(() =\u003e {\n\n    return reactCSS({\n\n      default: {\n\n        color: {\n\n          width: '36px',\n\n          height: '14px',\n\n          borderRadius: '2px',\n\n          // background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n\n          background: color,\n\n        },\n\n        swatch: {\n\n          padding: '5px',\n\n          background: '#fff',\n\n          borderRadius: '1px',\n\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n\n          display: 'inline-block',\n\n          cursor: 'pointer',\n\n        },\n\n        popover: {\n\n          position: 'absolute',\n\n          zIndex: '2',\n\n          top: -50,\n\n          right: -261,\n\n          paddingBottom: 60,\n\n        },\n\n      },\n\n    });\n\n  }, [color]);\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const handleClick = () =\u003e {\n\n    setDisplayColorPicker(!displayColorPicker);\n\n  };\n\n  \n\n  const handleClose = () =\u003e {\n\n    setDisplayColorPicker(false);\n\n  };\n\n  \n\n  const handleChange = color =\u003e {\n\n    setColor(\n\n      `rgba(${color.rgb.r},${color.rgb.g},${color.rgb.b},${color.rgb.a})`\n\n    );\n\n    console.log(color.hex);\n\n  };\n\n  return (\n\n    \u003cdiv id={classes.CustomColors}\u003e\n\n      \u003cdiv style={styles.swatch} onClick={handleClick}\u003e\n\n        \u003cdiv style={styles.color} /\u003e\n\n      \u003c/div\u003e\n\n      {displayColorPicker ? (\n\n        \u003cdiv style={styles.popover}\u003e\n\n          \u003cdiv style={styles.cover} onClick={handleClose} /\u003e\n\n          \u003cSketchPicker color={color} onChange={handleChange} /\u003e\n\n        \u003c/div\u003e\n\n      ) : null}\n\n    \u003c/div\u003e\n\n  );\n\n};\n\nexport default CustomColors;\n```\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/React/CustomHook":{"title":"CustomHook","content":"# 钩子使用规则\n- 只能在组件函数内部或者其他钩子内部使用![](https://raw.githubusercontent.com/Majmunu/Gallery-Img/main/202311182306269.png)\n- 不能在嵌套函数中使用![](https://raw.githubusercontent.com/Majmunu/Gallery-Img/main/202311182308814.png)\n# 为什么要自定义钩子\n- 复用\n# 什么情况下可以自定义钩子\n - 不返回jsx组件，多次复用\n - 只能在组件内部完成\n# 创建自定义钩子\n\u003e 以 use开头的函数被React默认识别为钩子函数\n# 使用自定义钩子","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/REACT":{"title":"REACT","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: React\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[React]]**\n\t- [[处理数据加载情况 无 错误 加载中]]\n\t- [[防抖]]\n\t- [[简单介绍就能理解的 React Portals（传送门）]]\n\t- [[使用自定义钩子处理表单]]\n\t- [[http自定义钩子]]\n\t- [[react css解决方案]]\n\t- [[React动态样式+useReducer]]\n\t- [[React扩展]]\n\t- [[React受控组件和非受控组件]]\n\t- [[React优化 适用于复杂的页面]]\n\t- [[Redux+React-redux]]\n\t- [[ReduxTool]]\n\t- [[Ref扩展]]\n\t- [[CustomHook]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/React%E4%BC%98%E5%8C%96-%E9%80%82%E7%94%A8%E4%BA%8E%E5%A4%8D%E6%9D%82%E7%9A%84%E9%A1%B5%E9%9D%A2":{"title":"React优化 适用于复杂的页面","content":"# React如何工作\n```ad-note\ntitle:React如何工作\n![[Pasted image 20230215162902.png]]\n \u003e `函数的变化不一定会引入页面的渲染 `\n \u003e 当组件props state content发生变化时，组件会重新渲染，然后执行函数\n \n```\n\n# 问题\n\n```JSX\n// DemoOutput.jsx\nfunction DemoOutput(props) {\n\n    console.log('DemoOutput Running');\n\n  return (\n\n    \u003cdiv\u003e{props.show?\u003ch1\u003eThis is DemoOutput\u003c/h1\u003e:''}\u003c/div\u003e\n\n  )\n\n}\n\nexport default DemoOutput;\n```\n\n```jsx\n//app.jsx\nfunction App() {\n\n  console.log('APP RUNNING');\n\n  const [showText, setShowText] = useState(false)\n\n  const  isShowText = () =\u003e {\n\n   setShowText((showText)=\u003e !showText)\n\n  }\n\n  return (\n\n    \u003cdiv className=\"App\"\u003e\n\n     \u003ch1\u003eHi there\u003c/h1\u003e\n\n     \u003cDemoOutput show={false}/\u003e\n\n     \u003cButton type='primary' onClick={isShowText}\u003eSWITCH\u003c/Button\u003e\n\n    \u003c/div\u003e\n\n  );\n```\n\n\u003e `问题：`当一个页面内部组件发生变化时，整个页面都会被重新渲染，当某个组件不是一直显示，而是条件显示时还是会被重新渲染一次（并不是渲染真实DOM，并没有改变页面结构）那么当我们嵌套组件时，只要一个组件变化或者组件的组件变化就会引起整个页面的重新渲染（diff），这样会很浪费资源\n\n`那么我们如何让React只对更改的组件进行渲染？`\n\n![[Pasted image 20230215172929.png]]\n# 解决方案 应用场景\n\u003e 我们可以给条件显示的组件加上 React.MEMO（仅适用于函数组件）\n\u003e比较耗时的函数或者组件\n\n```jsx\nfunction DemoOutput(props) {\n\n  console.log(\"DemoOutput Running\");\n\n  return \u003ch1\u003e{props.show ? \u003ch1\u003eThis is DemoOutput\u003c/h1\u003e : \"\"}\u003c/h1\u003e;\n\n}\n\nexport default React.memo(DemoOutput); \n```\n## 代价\n\u003e  这种优化是有代价的。 这里的memo方法告诉 React每当应用程序组件发生变化时， 它应该转到此处的此组件,并将新的道具值与以前的道具值进行比较， 因此 React 需要做两件事。它需要存储以前的属性值， 它需要进行比较。 当然，这也有自己的性能成本。因此，它在很大程度上取决于 在要应用此功能的组件上 是否值得因为您正在交易性能成本 重新评估组件 对于比较道具的性能成本。而且不可能说哪个成本更高 因为这取决于你拥有的道具数量 以及组件的复杂性以及组件具有的子组件数。 当然，React.memo可以是一个很好的工具,如果你有一个巨大的组件树有很多子组件。 在组件树中的高级别，你可以避免不必要的重新渲染周期 组件树的整个分支。 就像在这种情况下，通过避免重新评估此DemOutput组件演示输出， 我们也会自动避免组件的组件的重新评估。即使我们没有在那里使用 React Demo。 只是因为我们切断了整个分支，所以组件树的整个分支。 那是一些东西 React.memo绝对值得。 另一方面，如果您有一个组件 你知道它会改变的地方 或者它的道具值会改变，几乎每次重新评估 无论如何，父组件， 那么 React.memo 没有多大意义，如果结果是组件无论如何都应该重新渲染， 这取决于你的应用大小。 对于小应用、小型组件树等，对于某些页面，添加这个可能根本不值得。但是对于大型应用程序 避免不必要的重新评估这很可能是值得的。\n\n## useMemo\n\n### 应用场景 \n \u003e 作为父组件的方法 需要传到子组件里面去，会引起子组件的重新render\n\n## useCallback\n当我们知道这个函数应该永远不会改变，可以使用useCallback()来存储\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/React%E5%8A%A8%E6%80%81%E6%A0%B7%E5%BC%8F+useReducer":{"title":"React动态样式+useReducer","content":"\n## ✍内容\n\n## 动态样式\n```jsx\nclassName={`${classes.control} ${\n\n            passwordIsValid === false ? classes.invalid : \"\"\n\n          }`}\n```\n\n---\nuseReducer\n `useReducer` is a React Hook that lets you add a [reducer](https://beta.reactjs.org/learn/extracting-state-logic-into-a-reducer) to your component.\n \n\u003e const [state, dispatch] = useReducer(reducer, initialArg, init?)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230314165809.png)\n\n### 使用方法\n```js\nimport { useReducer } from 'react';  \n\nfunction reducer(state, action) {  \n\n// ...  \n\n}  \n\nfunction MyComponent() {  \n\nconst [state, dispatch] = useReducer(reducer, { age: 42 });  \n\n// ...\n```\n\n`useReducer` returns an array with exactly two items:  \n`useReducer` 返回一个正好包含两项的数组：\n\n1.  The current state of this state variable, initially set to the initial state you provided.  \n    此状态变量的当前状态，最初设置为您提供的初始状态。\n2.  The `dispatch` function that lets you change it in response to interaction.  \n    `dispatch` 函数，允许您更改它以响应交互。\n\nTo update what’s on the screen, call `dispatch` with an object representing what the user did, called an _action_:  \n要更新屏幕上的内容，请调用 `dispatch` ，其中包含一个表示用户所做操作的对象，称为 action：\n```js\nfunction handleClick() {  \n\ndispatch({ type: 'incremented_age' });  \n\n}\n```\nReact will pass the current state and the action to your reducer function. Your reducer will calculate and return the next state. React will store that next state, render your component with it, and update the UI.  \nReact 会将当前状态和动作传递给 reducer 函数。您的 Reducer 将计算并返回下一个状态。React 将存储下一个状态，用它呈现组件，并更新 UI。\n\n### 减速器函数  \n\nThen you need to fill in the code that will calculate and return the next state. By convention, it is common to write it as a [`switch` statement.](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/switch) For each `case` in the `switch`, you need to calculate and return some next state.  \n然后您需要填写将计算并返回下一个状态的代码。按照惯例，通常将其编写为 `switch` 语句。对于 `switch` 中的每个 `case` ，您需要计算并返回某个下一个状态。\n示例：\n```js\nfunction reducer(state, action) {  \n\nswitch (action.type) {  \n\ncase 'incremented_age': {  \n\nreturn {  \n\nname: state.name,  \n\nage: state.age + 1  \n\n};  \n\n}  \n\ncase 'changed_name': {  \n\nreturn {  \n\nname: action.nextName,  \n\nage: state.age  \n\n};  \n\n}  \n\n}  \n\nthrow Error('Unknown action: ' + action.type);  \n\n}\n```\nActions can have any shape. By convention, it’s common to pass objects with a `type` property identifying the action. It should include the minimal necessary information that the reducer needs to compute the next state.  \n动作可以有任何形状。按照约定，通常传递带有 `type` 属性的对象来标识操作。它应该包括归约器计算下一个状态所需的最少必要信息。\n```js\nfunction Form() {  \n\nconst [state, dispatch] = useReducer(reducer, { name: 'Taylor', age: 42 });  \n\n\nfunction handleButtonClick() {  \n\ndispatch({ type: 'incremented_age' });  \n\n}   \n\nfunction handleInputChange(e) {  \n\ndispatch({  \n\ntype: 'changed_name',  \n\nnextName: e.target.value  \n\n});  \n\n}  \n\n// ...\n```\n\n\u003e[!question] \n\u003eState is read-only. Don’t modify any objects or arrays in state:  \n\u003e状态为只读。不要修改状态中的任何对象或数组：\n\u003e ```js\n\u003e function reducer(state, action) {  \n\u003eswitch (action.type) {  \ncase 'incremented_age': {  \n// 🚩 Don't mutate an object in state like this:  \nstate.age = state.age + 1;  \nreturn state;  \n}\n\u003e```\nInstead, always return new objects from your reducer:  \n相反，始终从缩减器返回新对象：\n\u003e ```js\n\u003e // ✅ Instead, return a new object  \nreturn {  \n...state,  \nage: state.age + 1  \n};\n\u003e ```\n\n---\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/React%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6":{"title":"React受控组件和非受控组件","content":"# 一、受控组件\n\n**在HTML中**，表单元素的标签`\u003cinput\u003e`、`\u003ctextarea\u003e`、`\u003cselect\u003e`等的值改变通常是根据用户输入进行更新。 **在React中**，可变状态通常保存在组件的状态属性中，并且只能使用 setState() 进行更新，而呈现表单的React组件也控制着在后续用户输入时该表单中发生的情况，以这种**由React控制的输入表单元素而改变其值**的方式，称为**受控组件**。 比如，给表单元素input绑定一个onChange事件，当input状态发生变化时就会触发onChange事件，从而更新组件的state。\n\n```javascript\nimport React, { Component } from 'react'\nexport default class MyInput extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    }\n  }\n  handleChange = (event)=\u003e{\n    this.setState({\n        value: event.target.value\n    })\n  }\n  render(){\n    return(\n      \u003cdiv\u003e\n          \u003cinput\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n           /\u003e\n      \u003c/div\u003e\n    )\n  }\n}\n```\n\n复制\n\n**受控组件更新state的流程** 1、 可以通过初始state中设置表单的默认值 2、每当表单的值发生变化时，调用onChange事件处理器 3、事件处理器通过事件对象event拿到改变后的状态，并更新组件的state 4、一旦通过setState方法更新state，就会触发视图的重新渲染，完成表单组件的更新\n\n\u003e React中数据是单项流动的，从示例中，可以看出表单的数据来源于组件的state，并通过props传入，这也称为**单向数据绑定**。然后又通过onChange事件处理器将新的数据写回到state，完成了**双向数据绑定**。\n\n# 二、非受控组件\n\n非受控组件指的是，表单数据由DOM本身处理。即不受setState()的控制，与传统的HTML表单输入相似，input输入值即显示最新值。 在非受控组件中，可以使用一个ref来从DOM获得表单值。\n\n```javascript\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    console.log('A name was submitted: ' + this.input.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      \u003cform onSubmit={this.handleSubmit}\u003e\n        \u003clabel\u003e\n          Name:\n          \u003cinput type=\"text\" ref={(input) =\u003e this.input = input} /\u003e\n        \u003c/label\u003e\n        \u003cinput type=\"submit\" value=\"Submit\" /\u003e\n      \u003c/form\u003e\n    );\n  }\n}\n```\n\n复制\n\n非受控组件在底层实现时是在其内部维护了自己的状态state，这样表现出用户输入任何值都能反应到元素上。\n\n# 三、异同和使用场景\n\n1、受控组件 受控组件依赖于状态 受控组件的修改会实时映射到状态值上，此时可以对输入的内容进行校验 受控组件只有继承React.Component才会有状态 受控组件必须要在表单上使用onChange事件来绑定对应的事件 2、非受控组件 非受控组件不受状态的控制 非受控组件获取数据就是相当于操作DOM 非受控组件可以很容易和第三方组件结合，更容易同时集成 React 和非 React 代码\n\n**总的来说：**\n\n-   共同点，都是指表单元素，或者表单组件\n-   不同点，被react的state控制，就是受控组件。不会state控制，就是非受控。\n-   受控组件的实现方式，就是设置state，使用事件调用setstate，更新数据和视图。\n-   非受控组件，避开state，使用ref等等方式，更新数据和视图。\n\n**选择受控组件还是非受控组件** 1、受控组件使用场景：一般用在需要动态设置其初始值的情况。例如：某些form表单信息编辑时，input表单元素需要初始显示[服务器](https://cloud.tencent.com/product/cvm?from=10680)返回的某个值然后进行编辑。 2、非受控组件使用场景：一般用于无任何动态初始值信息的情况。例如：form表单创建信息时，input表单元素都没有初始值，需要用户输入的情况。","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/React%E6%89%A9%E5%B1%95":{"title":"React扩展","content":"## 1. setState\n\n### setState更新状态的2种写法\n\n```\n\t(1). setState(stateChange, [callback])------对象式的setState\n            1.stateChange为状态改变对象(该对象可以体现出状态的更改)\n            2.callback是可选的回调函数, 它在状态更新完毕、界面也更新后(render调用后)才被调用\n\t\t\t\t\t\n\t(2). setState(updater, [callback])------函数式的setState\n            1.updater为返回stateChange对象的函数。\n            2.updater可以接收到state和props。\n            4.callback是可选的回调函数, 它在状态更新、界面也更新后(render调用后)才被调用。\n总结:\n\t\t1.对象式的setState是函数式的setState的简写方式(语法糖)\n\t\t2.使用原则：\n\t\t\t\t(1).如果新状态不依赖于原状态 ===\u003e 使用对象方式\n\t\t\t\t(2).如果新状态依赖于原状态 ===\u003e 使用函数方式\n\t\t\t\t(3).如果需要在setState()执行后获取最新的状态数据, \n\t\t\t\t\t要在第二个callback函数中读取\n```\n\n\n\n------\n\n\n\n## 2. lazyLoad\n\n### 路由组件的lazyLoad\n\n```js\n\t//1.通过React的lazy函数配合import()函数动态加载路由组件 ===\u003e 路由组件代码会被分开打包\n\tconst Login = lazy(()=\u003eimport('@/pages/Login'))\n\t\n\t//2.通过\u003cSuspense\u003e指定在加载得到路由打包文件前显示一个自定义loading界面\n\t\u003cSuspense fallback={\u003ch1\u003eloading.....\u003c/h1\u003e}\u003e\n        \u003cSwitch\u003e\n            \u003cRoute path=\"/xxx\" component={Xxxx}/\u003e\n            \u003cRedirect to=\"/login\"/\u003e\n        \u003c/Switch\u003e\n    \u003c/Suspense\u003e\n```\n\n\n\n------\n\n\n\n## 3. Hooks\n\n#### 1. React Hook/Hooks是什么?\n\n```\n(1). Hook是React 16.8.0版本增加的新特性/新语法\n(2). 可以让你在函数组件中使用 state 以及其他的 React 特性\n```\n\n#### 2. 三个常用的Hook\n\n```\n(1). State Hook: React.useState()\n(2). Effect Hook: React.useEffect()\n(3). Ref Hook: React.useRef()\n```\n\n#### 3. State Hook\n\n```\n(1). State Hook让函数组件也可以有state状态, 并进行状态数据的读写操作\n(2). 语法: const [xxx, setXxx] = React.useState(initValue)  \n(3). useState()说明:\n        参数: 第一次初始化指定的值在内部作缓存\n        返回值: 包含2个元素的数组, 第1个为内部当前状态值, 第2个为更新状态值的函数\n(4). setXxx()2种写法:\n        setXxx(newValue): 参数为非函数值, 直接指定新的状态值, 内部用其覆盖原来的状态值\n        setXxx(value =\u003e newValue): 参数为函数, 接收原本的状态值, 返回新的状态值, 内部用其覆盖原来的状态值\n```\n\n#### 4. Effect Hook\n\n```\n(1). Effect Hook 可以让你在函数组件中执行副作用操作(用于模拟类组件中的生命周期钩子)\n(2). React中的副作用操作:\n        发ajax请求数据获取\n        设置订阅 / 启动定时器（防抖）\n        手动更改真实DOM\n(3). 语法和说明: \n        useEffect(() =\u003e { \n          // 在此可以执行任何带副作用操作\n          return () =\u003e { // 在组件卸载前执行\n            // 在此做一些收尾工作, 比如清除定时器/取消订阅等\n          }\n        }, [stateValue]) // 如果指定的是[], 回调函数只会在第一次render()后执行\n    \n(4). 可以把 useEffect Hook 看做如下三个函数的组合\n        componentDidMount()\n        componentDidUpdate()\n    \tcomponentWillUnmount() \n```\n\n#### 5. Ref Hook\n\n\n```\n(1). Ref Hook可以在函数组件中存储/查找组件内的标签或任意其它数据\n(2). 语法: const refContainer = useRef()\n(3). 作用:保存标签对象,功能与React.createRef()一样\n```\n\n#### 6. Reducer Hook\n`功能类似于useState，但更加强大`\n\n```react.jsx\nconst [state, dispatch] = useReducer(reducerFn,'初期値',initFn)\n```\n-   `reducer`是用于更新的函数，是用于执行的调用函数。 （声明变量时，可以预先设置状态更新方法。 ）`state``dispatch``reducer`\n\n\n|  |useState|useReducer|\n|:-:|:-:|:-:|\n|可以处理的状态类型|数字、字符串、对象和逻辑值|对象、数组|\n|处理相关状态|☓|可以同时处理多个|\n|本地或全局|本地|与全局使用上下文 （） 一起处理|\n在 Redux 中实现的状态管理现在可以使用使用上下文还原器实现，并且不再需要 Redux。\n\n#### 示例 1：状态为单数\n\ncounter.jsx\n\n```js\n//useReducerをimport\nimport React, {useReducer} from 'react'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n//counterの初期値を0に設定\nconst initialState = 0\n//reducer関数を作成\n//countStateとactionを渡して、新しいcountStateを返すように実装する\nconst reducerFunc = (countState, action)=\u003e {\n//reducer関数にincrement、increment、reset処理を書く\n//どの処理を渡すかはactionを渡すことによって判断する\n  switch (action){\n    case 'increment':\n      return countState + 1\n    case 'decrement':\n      return countState - 1\n    case 'reset':\n      return initialState\n    default:\n      return countState\n  }\n}\nconst Counter = () =\u003e {\n//作成したreducerFunc関数とcountStateをuseReducerに渡す\n//useReducerはcountStateとdispatchをペアで返すので、それぞれを分割代入\n  const [count, dispatch] = useReducer(reducerFunc, initialState)\n//カウント数とそれぞれのactionを実行する\u003cButton/\u003eを設置する\n  return (\n    \u003c\u003e\n      \u003ch2\u003eカウント：{count}\u003c/h2\u003e\n      \u003cButtonGroup color=\"primary\" aria-label=\"outlined primary button group\"\u003e\n        \u003cButton onClick={()=\u003edispatch('increment')}\u003eincrement\u003c/Button\u003e\n        \u003cButton onClick={()=\u003edispatch('decrement')}\u003edecrement\u003c/Button\u003e\n        \u003cButton onClick={()=\u003edispatch('reset')}\u003ereset\u003c/Button\u003e\n      \u003c/ButtonGroup\u003e\n    \u003c/\u003e\n  )\n}\n\nexport default Counter\n\n```\n\n  [![](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/218656/08303c75-70fd-9533-d07c-de46bad7b79e.gif)[(https://camo.qiitausercontent.com/6a5684574d8073f1767be0ce2d91073b45c801a6/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3231383635362f30383330336337352d373066642d393533332d643037632d6465343662616437623739652e676966)\n\n#### 示例 2：多个状态\n\ncounter2.jsx\n\n```js\n//useReducerをimport\nimport React, {useReducer} from 'react'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n//counterの初期値を0に設定\n//2つのcountStateを扱う。それぞれのinitialStateを設定\nconst initialState ={\n  firstCounter: 0,\n  secondCounter: 100\n}\n//reducer関数を作成\n//countStateとactionを渡して、新しいcountStateを返すように実装する\nconst reducerFunc = (countState, action)=\u003e {\n//reducer関数にincrement、increment、reset処理を書く\n//どの処理を渡すかはactionを渡すことによって判断する\n//switch文のactionをaction.typeに変更\n//firstCounter、secondCounter用にcaseを設定\n//複数のcounterStateを持っている場合は、更新前のcounterStateを展開し、オブジェクトのマージを行う\n  switch (action.type){\n    case 'increment1':\n      return {...countState, firstCounter: countState.firstCounter + action.value}\n    case 'decrement1':\n      return {...countState, firstCounter: countState.firstCounter - action.value}\n    case 'increment2':\n      return {...countState, secondCounter: countState.secondCounter + action.value}\n    case 'decrement2':\n      return {...countState, secondCounter: countState.secondCounter - action.value}\n    case 'reset1':\n      return {...countState, firstCounter: initialState.firstCounter}\n    case 'reset2':\n      return {...countState, secondCounter: initialState.secondCounter}\n    default:\n      return countState\n  }\n}\nconst Counter2 = () =\u003e {\n//作成したreducerFunc関数とcountStateをuseReducerに渡す\n//useReducerはcountStateとdispatchをペアで返すので、それぞれを分割代入\n  const [count, dispatch] = useReducer(reducerFunc, initialState)\n//カウント数とそれぞれのactionを実行する\u003cButton/\u003eを設置する\n//dispatchで渡しているactionをオブジェクトに変更して、typeとvalueを設定\n  return (\n    \u003c\u003e\n      \u003ch2\u003eカウント：{count.firstCounter}\u003c/h2\u003e\n      \u003cButtonGroup color=\"primary\" aria-label=\"outlined primary button group\"\u003e\n        \u003cButton onClick={()=\u003edispatch({type: 'increment1', value: 1})}\u003eincrement1\u003c/Button\u003e\n        \u003cButton onClick={()=\u003edispatch({type: 'decrement1', value: 1})}\u003edecrement1\u003c/Button\u003e\n        \u003cButton onClick={()=\u003edispatch({type: 'reset1'})}\u003ereset\u003c/Button\u003e\n      \u003c/ButtonGroup\u003e\n      \u003ch2\u003eカウント2：{count.secondCounter}\u003c/h2\u003e\n      \u003cButtonGroup color=\"secondary\" aria-label=\"outlined primary button group\"\u003e\n        \u003cButton onClick={()=\u003edispatch({type: 'increment2', value: 100})}\u003eincrement2\u003c/Button\u003e\n        \u003cButton onClick={()=\u003edispatch({type: 'decrement2', value: 100})}\u003edecrement2\u003c/Button\u003e\n        \u003cButton onClick={()=\u003edispatch({type: 'reset2'})}\u003ereset\u003c/Button\u003e\n      \u003c/ButtonGroup\u003e\n    \u003c/\u003e\n  )\n}\n\nexport default Counter2\n\n```\n\n#### [![](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/218656/b89205ba-f8a5-14a6-4021-8ea58f3f6e5d.gif)](https://camo.qiitausercontent.com/ea515db39635c94ee8576532beb80ade2fd550b1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3231383635362f62383932303562612d663861352d313461362d343032312d3865613538663366366535642e676966)\n------\n\n\n\n## 4. Fragment\n\n### 使用\n\n\t\u003cFragment\u003e\u003cFragment\u003e\n\t\u003c\u003e\u003c/\u003e\n\n### 作用\n\n\u003e 可以不用必须有一个真实的DOM根标签了\n\n\n\n\u003chr/\u003e\n\n## 5. Context\n\n### 理解\n\n\u003e 一种组件间通信方式, 常用于【祖组件】与【后代组件】间通信\n\n### 使用\n\u003e 读取Consumer\n\n```js\n1) 创建Context容器对象：\n\tconst XxxContext = React.createContext()  \n\t\n2) 渲染子组时，外面包裹xxxContext.Provider, 通过value属性给后代组件传递数据：\n\t\u003cxxxContext.Provider value={数据}\u003e\n\t\t子组件\n    \u003c/xxxContext.Provider\u003e\n    \n3) 后代组件读取数据：\n\n\t//第一种方式:仅适用于类组件 \n\t  static contextType = xxxContext  // 声明接收context\n\t  this.context // 读取context中的value数据\n\t  \n\t//第二种方式: 函数组件与类组件都可以\n\t  \u003cxxxContext.Consumer\u003e\n\t    {\n\t      value =\u003e ( // value就是context中的value数据\n\t        要显示的内容\n\t      )\n\t    }\n\t  \u003c/xxxContext.Consumer\u003e\n```\n\n### 注意\n\n\t在应用开发中一般不用context, 一般都用它的封装react插件\n\n\n\n\u003chr/\u003e\n\n\n## 6. 组件优化\n\n### Component的2个问题 \n\n\u003e 1. 只要执行setState(),即使不改变状态数据, 组件也会重新render() ==\u003e 效率低\n\u003e\n\u003e 2. 只当前组件重新render(), 就会自动重新render子组件，纵使子组件没有用到父组件的任何数据 ==\u003e 效率低\n\n### 效率高的做法\n\n\u003e  只有当组件的state或props数据发生改变时才重新render()\n\n### 原因\n\n\u003e  Component中的shouldComponentUpdate()总是返回true\n\n### 解决\n\n\t办法1: \n\t\t重写shouldComponentUpdate()方法\n\t\t比较新旧state或props数据, 如果有变化才返回true, 如果没有返回false\n\t办法2:  \n\t\t使用PureComponent\n\t\tPureComponent重写了shouldComponentUpdate(), 只有state或props数据有变化才返回true\n\t\t注意: \n\t\t\t只是进行state和props数据的浅比较, 如果只是数据对象内部数据变了, 返回false  \n\t\t\t不要直接修改state数据, 而是要产生新数据\n\t项目中一般使用PureComponent来优化\n```jsx\n\t函数式组件使用 React.memo()\nconst ToBeBetterComponent = React.memo(function MyComponent(props) {\n  // only renders if props have changed\n})\n```\n\n\n\u003chr/\u003e\n\n\n## 7. render props\n\n### 如何向组件内部动态传入带内容的结构(标签)?\n\n\tVue中: \n\t\t使用slot技术, 也就是通过组件标签体传入结构  \u003cA\u003e\u003cB/\u003e\u003c/A\u003e\n\tReact中:\n\t\t使用children props: 通过组件标签体传入结构\n\t\t使用render props: 通过组件标签属性传入结构,而且可以携带数据，一般用render函数属性\n\n### children props\n\n\t\u003cA\u003e\n\t  \u003cB\u003exxxx\u003c/B\u003e\n\t\u003c/A\u003e\n\t{this.props.children}\n\t问题: 如果B组件需要A组件内的数据, ==\u003e 做不到 \n\n### render props\n\n\t\u003cA render={(data) =\u003e \u003cC data={data}\u003e\u003c/C\u003e}\u003e\u003c/A\u003e\n\tA组件: {this.props.render(内部state数据)}\n\tC组件: 读取A组件传入的数据显示 {this.props.data} \n\n\n\n\u003chr/\u003e\n\n## 8. 错误边界\n\n#### 理解：\n\n错误边界(Error boundary)：用来捕获后代组件错误，渲染出备用页面\n\n#### 特点：\n\n只能捕获后代组件生命周期产生的错误，不能捕获自己组件产生的错误和其他组件在合成事件、定时器中产生的错误\n\n##### 使用方式：\n\ngetDerivedStateFromError配合componentDidCatch\n\n```js\n// 生命周期函数，一旦后台组件报错，就会触发\nstatic getDerivedStateFromError(error) {\n    console.log(error);\n    // 在render之前触发\n    // 返回新的state\n    return {\n        hasError: true,\n    };\n}\n\ncomponentDidCatch(error, info) {\n    // 统计页面的错误。发送请求发送到后台去\n    console.log(error, info);\n}\n```\n## 9. 组件通信方式总结\n\n#### 组件间的关系：\n\n- 父子组件\n- 兄弟组件（非嵌套组件）\n- 祖孙组件（跨级组件）\n\n#### 几种通信方式：\n\n\t\t1.props：\n\t\t\t(1).children props\n\t\t\t(2).render props\n\t\t2.消息订阅-发布：\n\t\t\tpubs-sub、event等等\n\t\t3.集中式管理：\n\t\t\tredux、dva等等\n\t\t4.conText:\n\t\t\t生产者-消费者模式\n\n#### 比较好的搭配方式：\n\t\t父子组件：props\n\t\t兄弟组件：消息订阅-发布、集中式管理\n\t\t祖孙组件(跨级组件)：消息订阅-发布、集中式管理、conText(开发用的少，封装插件用的多)\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/Redux+React-redux":{"title":"Redux+React-redux","content":"# Redux\n`api`\n## createStore\n[createStore(reducer, [preloadedState], [enhancer])](https://cn.redux.js.org/api/createstore)\n\n##  combineReducers\n\n  [combineReducers(reducers)](https://cn.redux.js.org/api/combinereducers)\n##  applyMiddleware\n[applyMiddleware(...middlewares)](https://cn.redux.js.org/api/applymiddleware)\n## bindActionCreators\n[bindActionCreators(actionCreators, dispatch)](https://cn.redux.js.org/api/bindactioncreators)\n## compose\n[compose(...functions)](https://cn.redux.js.org/api/compose)\n\n从右到左来组合多个函数。\n```jsx\nconst test=first(second(third))=const test=compose(first,second,third)\n```\n这是函数式编程中的方法，为了方便，被放到了 Redux 里。  \n当需要把多个 [store enhancers](https://cn.redux.js.org/understanding/thinking-in-redux/glossary#store-enhancer) 依次执行的时候，需要用到它。\n\n#### 参数[​](https://cn.redux.js.org/api/compose#%E5%8F%82%E6%95%B0 \"Direct link to heading\")\n\n1.  (_arguments_): 需要合成的多个函数。预计每个函数都接收一个参数。它的返回值将作为一个参数提供给它左边的函数，以此类推。例外是最右边的参数可以接受多个参数，因为它将为由此产生的函数提供签名。（译者注：`compose(funcA, funcB, funcC)` 形象为 `compose(funcA(funcB(funcC())))`）\n\n#### 返回值[​](https://cn.redux.js.org/api/compose#%E8%BF%94%E5%9B%9E%E5%80%BC \"Direct link to heading\")\n\n(_Function_): 从右到左把接收到的函数合成后的最终函数。\n\n#### 示例[​](https://cn.redux.js.org/api/compose#%E7%A4%BA%E4%BE%8B \"Direct link to heading\")\n\n下面示例演示了如何使用 `compose` 增强 [store](https://cn.redux.js.org/api/store)，这个 store 与 [`applyMiddleware`](https://cn.redux.js.org/api/applymiddleware) 和 [redux-devtools](https://github.com/reduxjs/redux-devtools) 一起使用。\n\n```jsx\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport DevTools from './containers/DevTools'\nimport reducer from '../reducers'\nconst store = createStore(  reducer,  compose(    applyMiddleware(thunk),    DevTools.instrument()  ))\n```\n\n#### 小贴士[​](https://cn.redux.js.org/api/compose#%E5%B0%8F%E8%B4%B4%E5%A3%AB \"Direct link to heading\")\n\n-   所有的 `compose` 做的只是让你在写深度嵌套的函数时，避免了代码的向右偏移（译者注：可以参考[上述的译者注](https://cn.redux.js.org/api/compose#%E5%8F%82%E6%95%B0)）。不要觉得它很复杂。","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/ReduxTool":{"title":"ReduxTool","content":"\u003e 首先可以先看一下Redux如何工作\n\u003cimg src=\"https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20230212105022.png\"/\u003e\n\n\n```ad-note\nstore 负责存储数据，相当于仓库，action负责dispatch派发数据，reducer负责接收处理数据然后交给store（个人理解 可能有些偏差 欢迎交流斧正）\n```\n\n## 传统redux写法（旧）\n```jsx\n//reducer\nconst counterReducer = (state = { counter: 0 }, action) =\u003e {\n\n    if (action.type === \"increment\") {\n\n        return {\n\n            counter: state.counter + 1,\n\n        };\n\n    }\n\n    if (action.type === \"increase\") {\n\n        return {\n\n            counter: state.counter + action.amount,\n\n        };\n\n    }\n\n    if (action.type === \"decrement\") {\n\n        return {\n\n            counter: state.counter - 1,\n\n        };\n\n    }\n\n    return state;\n\n}\n//连接到store\nconst store = createStore(counterReducer)\n```\n## 使用reduxjs/toolkit（新）\n\u003e 新的写法主要体现在reducer的简化上\n```jsx\n//reducer\nconst countSlice= createSlice(\n\n    {\n\n        name: \"counter\",\n\n        initialState: { counter: 0 },\n\n        reducers: {\n\n            increment(state) {\n\n                state.counter++;//在redux中这种写法不被允许 在toolkit中被允许\n\n            },\n\n            decrement(state) {\n\n                state.counter--;\n\n            },\n\n            increase(state, action) {\n\n                state.counter += action.payload;\n\n            },\n\n  \n\n        }\n\n    }\n\n)\n  \n//连接到store\nconst store = configureStore(\n\n    {\n\n        reducer: { counter: countSlice.reducer}//作为一个对象处理多reducer\n\n    }\n\n    )\n```\n\n## 简单使用步骤\n1. 创建reducer文件\n```jsx\nimport { createSlice } from '@reduxjs/toolkit';\n1. 创建切片\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState: { cartIsVisible: false },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    }\n  }\n});\n3、将actions导出\nexport const uiActions = uiSlice.actions;\n2、将切片导出\nexport default uiSlice;\n```\n2. 在store中引入reducer\n```jsx\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport uiSlice from './ui-slice';\nimport cartSlice from './cart-slice';\n4 在store中引入切片\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\n});\n\nexport default store;\n```\n3.  在index.js中包裹根组件\n```jsx\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport './index.css';\nimport App from './App';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \u003cProvider store={store}\u003e\n    \u003cApp /\u003e\n  \u003c/Provider\u003e\n);\n```\n4. 在组件中使用dispatch派发actions\n```jsx\nimport { useDispatch} from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nconst dispatch = useDispatch();\nconst toggleCartHandler = () =\u003e {\ndispatch(uiActions.toggle()); //5toggle 1步骤中reducer的action之一\n\n};\n```\n5. 使用useSelecter接收数据\n```jsx\nimport { useSelector } from 'react-redux';\nconst Cart = (props) =\u003e {\nconst cartItems = useSelector((state) =\u003e state.cart.items);\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/Ref%E6%89%A9%E5%B1%95":{"title":"Ref扩展","content":"# Refs 转发\n\nRef 转发是一项将 [ref](https://zh-hans.reactjs.org/docs/refs-and-the-dom.html) 自动地通过组件传递到其一子组件的技巧。对于大多数应用中的组件来说，这通常不是必需的。但其对某些组件，尤其是可重用的组件库是很有用的。最常见的案例如下所述。\n\n## [](https://zh-hans.reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components)转发 refs 到 DOM 组件\n\n考虑这个渲染原生 DOM 元素 `button` 的 `FancyButton` 组件：\n\n```\nfunction FancyButton(props) {\n  return (\n    \u003cbutton className=\"FancyButton\"\u003e\n      {props.children}\n    \u003c/button\u003e\n  );\n}\n```\n\nReact 组件隐藏其实现细节，包括其渲染结果。其他使用 `FancyButton` 的组件**通常不需要**获取内部的 DOM 元素 `button` 的 [ref](https://zh-hans.reactjs.org/docs/refs-and-the-dom.html)。这很好，因为这防止组件过度依赖其他组件的 DOM 结构。\n\n虽然这种封装对类似 `FeedStory` 或 `Comment` 这样的应用级组件是理想的，但其对 `FancyButton` 或 `MyTextInput` 这样的高可复用“叶”组件来说可能是不方便的。这些组件倾向于在整个应用中以一种类似常规 DOM `button` 和 `input` 的方式被使用，并且访问其 DOM 节点对管理焦点，选中或动画来说是不可避免的。\n\n**Ref 转发是一个可选特性，其允许某些组件接收 `ref`，并将其向下传递（换句话说，“转发”它）给子组件。**\n\n在下面的示例中，`FancyButton` 使用 `React.forwardRef` 来获取传递给它的 `ref`，然后转发到它渲染的 DOM `button`：\n\n```\nconst FancyButton = React.forwardRef((props, ref) =\u003e (  \u003cbutton ref={ref} className=\"FancyButton\"\u003e    {props.children}\n  \u003c/button\u003e\n));\n\n// 你可以直接获取 DOM button 的 ref：\nconst ref = React.createRef();\n\u003cFancyButton ref={ref}\u003eClick me!\u003c/FancyButton\u003e;\n```\n\n这样，使用 `FancyButton` 的组件可以获取底层 DOM 节点 `button` 的 ref ，并在必要时访问，就像其直接使用 DOM `button` 一样。\n\n以下是对上述示例发生情况的逐步解释：\n\n1.  我们通过调用 `React.createRef` 创建了一个 [React ref](https://zh-hans.reactjs.org/docs/refs-and-the-dom.html) 并将其赋值给 `ref` 变量。\n2.  我们通过指定 `ref` 为 JSX 属性，将其向下传递给 `\u003cFancyButton ref={ref}\u003e`。\n3.  React 传递 `ref` 给 `forwardRef` 内函数 `(props, ref) =\u003e ...`，作为其第二个参数。\n4.  我们向下转发该 `ref` 参数到 `\u003cbutton ref={ref}\u003e`，将其指定为 JSX 属性。\n5.  当 ref 挂载完成，`ref.current` 将指向 `\u003cbutton\u003e` DOM 节点。\n\n\u003e 注意\n\u003e \n\u003e 第二个参数 `ref` 只在使用 `React.forwardRef` 定义组件时存在。常规函数和 class 组件不接收 `ref` 参数，且 props 中也不存在 `ref`。\n\u003e \n\u003e Ref 转发不仅限于 DOM 组件，你也可以转发 refs 到 class 组件实例中。\n\n## [](https://zh-hans.reactjs.org/docs/forwarding-refs.html#note-for-component-library-maintainers)组件库维护者的注意事项\n\n**当你开始在组件库中使用 `forwardRef` 时，你应当将其视为一个破坏性更改，并发布库的一个新的主版本。** 这是因为你的库可能会有明显不同的行为（例如 refs 被分配给了谁，以及导出了什么类型），并且这样可能会导致依赖旧行为的应用和其他库崩溃。\n\n出于同样的原因，当 `React.forwardRef` 存在时有条件地使用它也是不推荐的：它改变了你的库的行为，并在升级 React 自身时破坏用户的应用。\n\n## [](https://zh-hans.reactjs.org/docs/forwarding-refs.html#forwarding-refs-in-higher-order-components)在高阶组件中转发 refs\n\n这个技巧对[高阶组件](https://zh-hans.reactjs.org/docs/higher-order-components.html)（也被称为 HOC）特别有用。让我们从一个输出组件 props 到控制台的 HOC 示例开始：\n\n```\nfunction logProps(WrappedComponent) {  class LogProps extends React.Component {\n    componentDidUpdate(prevProps) {\n      console.log('old props:', prevProps);\n      console.log('new props:', this.props);\n    }\n\n    render() {\n      return \u003cWrappedComponent {...this.props} /\u003e;    }\n  }\n\n  return LogProps;\n}\n```\n\n“logProps” HOC 透传（pass through）所有 `props` 到其包裹的组件，所以渲染结果将是相同的。例如：我们可以使用该 HOC 记录所有传递到 “fancy button” 组件的 props：\n\n```\nclass FancyButton extends React.Component {\n  focus() {\n    // ...\n  }\n\n  // ...\n}\n\n// 我们导出 LogProps，而不是 FancyButton。\n// 虽然它也会渲染一个 FancyButton。\nexport default logProps(FancyButton);\n```\n\n下面的示例有一点需要注意：refs 将不会透传下去。这是因为 `ref` 不是 prop 属性。就像 `key` 一样，其被 React 进行了特殊处理。如果你对 HOC 添加 ref，该 ref 将引用最外层的容器组件，而不是被包裹的组件。\n\n这意味着用于我们 `FancyButton` 组件的 refs 实际上将被挂载到 `LogProps` 组件：\n\n```\nimport FancyButton from './FancyButton';\n\nconst ref = React.createRef();\n// 我们导入的 FancyButton 组件是高阶组件（HOC）LogProps。\n// 尽管渲染结果将是一样的，\n// 但我们的 ref 将指向 LogProps 而不是内部的 FancyButton 组件！\n// 这意味着我们不能调用例如 ref.current.focus() 这样的方法\n\u003cFancyButton\n  label=\"Click Me\"\n  handleClick={handleClick}\n  ref={ref}/\u003e;\n```\n\n幸运的是，我们可以使用 `React.forwardRef` API 明确地将 refs 转发到内部的 `FancyButton` 组件。`React.forwardRef` 接受一个渲染函数，其接收 `props` 和 `ref` 参数并返回一个 React 节点。例如：\n\n```\nfunction logProps(Component) {\n  class LogProps extends React.Component {\n    componentDidUpdate(prevProps) {\n      console.log('old props:', prevProps);\n      console.log('new props:', this.props);\n    }\n\n    render() {\n      const {forwardedRef, ...rest} = this.props;\n      // 将自定义的 prop 属性 “forwardedRef” 定义为 ref\n      return \u003cComponent ref={forwardedRef} {...rest} /\u003e;    }\n  }\n\n  // 注意 React.forwardRef 回调的第二个参数 “ref”。\n  // 我们可以将其作为常规 prop 属性传递给 LogProps，例如 “forwardedRef”\n  // 然后它就可以被挂载到被 LogProps 包裹的子组件上。\n  return React.forwardRef((props, ref) =\u003e {    return \u003cLogProps {...props} forwardedRef={ref} /\u003e;  });}\n```\n\n## [](https://zh-hans.reactjs.org/docs/forwarding-refs.html#displaying-a-custom-name-in-devtools)在 DevTools 中显示自定义名称\n\n`React.forwardRef` 接受一个渲染函数。React DevTools 使用该函数来决定为 ref 转发组件显示的内容。\n\n例如，以下组件将在 DevTools 中显示为 “_ForwardRef_”：\n\n```\nconst WrappedComponent = React.forwardRef((props, ref) =\u003e {\n  return \u003cLogProps {...props} forwardedRef={ref} /\u003e;\n});\n```\n\n如果你命名了渲染函数，DevTools 也将包含其名称（例如 “_ForwardRef(myFunction)_”）：\n\n```\nconst WrappedComponent = React.forwardRef(\n  function myFunction(props, ref) {\n    return \u003cLogProps {...props} forwardedRef={ref} /\u003e;\n  }\n);\n```\n\n你甚至可以设置函数的 `displayName` 属性来包含被包裹组件的名称：\n\n```\nfunction logProps(Component) {\n  class LogProps extends React.Component {\n    // ...\n  }\n\n  function forwardRef(props, ref) {\n    return \u003cLogProps {...props} forwardedRef={ref} /\u003e;\n  }\n\n  // 在 DevTools 中为该组件提供一个更有用的显示名。\n  // 例如 “ForwardRef(logProps(MyComponent))”\n  const name = Component.displayName || Component.name;  forwardRef.displayName = `logProps(${name})`;\n  return React.forwardRef(forwardRef);\n}\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/http%E8%87%AA%E5%AE%9A%E4%B9%89%E9%92%A9%E5%AD%90":{"title":"http自定义钩子","content":"```js\nimport { useState, useCallback } from 'react';\n\nconst useHttp = () =\u003e {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) =\u003e {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n```","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/React/react%E9%85%8D%E7%BD%AEless":{"title":"react配置less","content":"\n## 一、为什么要用 less\n\nless 是 css 的预处理语言，好处是支持嵌套写法，让整个样式结构更易读吗，此外还支持变量、Mixin、函数等新特性，可以让我们写的样式代码更加的健壮，可复用性也更高。\n\n  \n\n## 二、如何配置 less\n\n- **首先需要引入 less 包**\n\n```text\nnpm i less --save-dev\n```\n\n- **然后再引入 less 的 loade**r\n\n```text\nnpm install less less-loader --save-dev\n```\n\n- **这时候应该就能看到 package.json 的 devDependencies 了**\n\n![](https://pic3.zhimg.com/80/v2-43a01d5109f9adacef4c588aa01346ca_720w.webp)\n\n- **接着我们需要让 webpack 暴露出来，因为 React 默认把 webpack 文件隐藏起来了,我们需要先初始化并 git 到本地仓库一下，然后再执行 eject。PS：如果先做了这一步再引入 less 包的话，可以在引入包之后再执行一下这几步 git**\n\n```text\n   git init\n   git add .\n   git commit -m ‘init'\n   yarn eject\n```\n\n- **此时我们便可以看到 webpack 的 config 以及暴露出来了，里边包含了 webpack.config.js 这个文件**\n\n![](https://pic1.zhimg.com/80/v2-c6f53128b15e97cfe2628adeb0b22ebc_720w.webp)\n\n- **然后就可以在 webpack.config.js 内去配置 less 的全局变量以及 less-loader 加载器**\n\n1. 对于 less 全局变量的配置，可以先搜索 `**sassModuleRegex**`，然后在它下面新增两行配置项\n\n```text\n    const lessRegex = /\\.less$/;\n    const lessModuleRegex = /\\.module\\.less$/;\n```\n\n2. 对于 less-loader 的配置，我们需要找到 `**getStyleLoaders**` 这个函数，然后在里边 require 一下 less 的 loader\n\n![](https://pic4.zhimg.com/80/v2-507f1f7cab4edf69c876c01d63746ea3_720w.webp)\n\n3. 接着我们搜索 `**oneOf**` ，然后再在这个数组内配置 less-loader\n\n```text\n{\n        test: lessRegex,\n        exclude: lessModuleRegex,\n        use: getStyleLoaders(\n          {\n                importLoaders: 2,\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n          },\n          'less-loader'\n        ),\n        sideEffects: true,\n  },\n  {\n        test: lessModuleRegex,\n        use: getStyleLoaders(\n          {\n                importLoaders: 2,\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n          },\n          'less-loader'\n        ),\n        sideEffects: true,\n  },\n```\n\n![](https://pic4.zhimg.com/80/v2-66e2f0abbbb7d245305c2f3aee27312f_720w.webp)\n\n**最后，对于使用 React TS 的同学，还需要再做个全局的 declare 配置，因为 TS 不能直接识别 less 文件。**\n\n- 目录：\n\n![](https://pic4.zhimg.com/80/v2-58d7dcf43a86ac9d426d4ecb72177487_720w.webp)\n\n- 配置项:\n\n![](https://pic2.zhimg.com/80/v2-46fad04eaec74681257c959ea8b86dcd_720w.webp)\n\n**以上方面全部配置完后便可以重新 start 一下项目，此时 less 的也全部配置完毕了～**\n\n  \n\n## 三、如何使用 less\n\n**到了这步就很简单了，我们已经可以开始使用 less 来愉快的书写样式了**\n\n![](https://pic2.zhimg.com/80/v2-c629b2c21e883da9fc93290c15243255_720w.webp)\n\n![](https://pic3.zhimg.com/80/v2-6959e75a5f3c5b0e5887e6588f145f0e_720w.webp)","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/React/react-css%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88":{"title":"react css解决方案","content":"# react css解决方案\n ### 使用 #css-modules-\n 1.  下包  `mpm i sass -D`\n -   改样式文件名。从 `xx.scss -\u003e xx.module.scss` （React脚手架中的约定，与普通 CSS 作区分）\n    \n-   引入使用。\n    \n    1.  组件中导入该样式文件（注意语法）\n        \n        ```javascript\n         import styles from './index.module.scss'\n        \n        ```\n        \n    2.  通过 styles 对象访问对象中的样式名来设置样式\n        \n        ```xml\n         \u003cdiv className={styles.css类名}\u003e\u003c/div\u003e\n        ```\n        \n        css类名是index.module.scss中定义的类名。\n### 示例\n\n**原来**\n\n-   定义样式 index.css\n\n```css\n .root {font-size: 100px;}\n复制代码\n```\n\n-   使用样式\n\n```erlang\n import 'index.css'\n \u003cdiv className=\"root\"\u003ediv的内容\u003c/div\u003e\n复制代码\n```\n\n**现在**\n\n修改文件名： index.css ----\u003e index.module.css。内部不变\n\n使用样式\n\n```css\n import styles from './index.module.css'\n ​\n \u003cdiv className={styles.root}\u003ediv的内容\u003c/div\u003e\n复制代码\n```\n\n### 原理\n\nCSS Modules 通过自动给 CSS 类名补足类名，保证类名的唯一性，从而避免样式冲突的问题 。\n\n```javascript\n // Login.jsx\n import styles from './index.module.css'\n console.log(styles)\n复制代码\n```\n\n![image-20211116154129900.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15889061c6e34a988d8ee763981ddec3~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp?)\n\n### css module的注意点\n\n类名最好使用驼峰命名，因为最终类名会生成`styles`的一个属性\n\n```lua\n .tabBar {}  ---\u003e styles.tabBar\n复制代码\n```\n\n如果使用中划线的命名，需要使用[]语法\n\n```css\n .tab-bar {}  ---\u003e styles['tab-bar']\n复制代码\n```\n\n## cssModules-维持类名\n\n### 目标\n\n掌握:global关键字的用法，能用它来维持原类名\n\n![image-20211116155020471.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e545dd0115154368958112bfcd2d67f6~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp?)\n\n### 格式\n\n在xxx.module.scss中，如果希望维持类名，可以使用格式：\n\n`:global(.类名)`\n\n### 示例\n\n```css\n /*这样css modules就不会修改掉类名.a了。等价于写在 index.css中 */\n :global(.a) {   }\n复制代码\n```\n\n```css\n /* 这样css modules就不会修改掉类名.a了, 但是 .aa还是会被修改 */\n .aa :golbal(.a) { }\n复制代码\n```\n\n### 应用\n\n覆盖第三方组件的样式\n\n```css\n :global(.ant-btn) {\n   color: red !important;\n }\n复制代码\n```\n\n### css modules-最佳实践\n\n-   每个组件的根节点使用 CSSModules 形式的类名（ 根元素的类名： `root` ）\n-   其他所有的子节点，都使用普通的 CSS 类名 :global\n\n### index.module.scss\n\n```scss\n // index.module.scss\n .root {\n   display: 'block';\n   position: 'absolute';\n   // 此处，使用 global 包裹其他子节点的类名。此时，这些类名就不会被处理，在 JSX 中使用时，就可以用字符串形式的类名\n   // 如果不加 :global ，所有类名就必须添加 styles.title 才可以\n   :global {\n     .title {\n       .text {\n       }\n       span {\n       }\n     }\n     .login-form { ... }\n   }\n }\n复制代码\n```\n\n### 组件\n\n```javascript\n import styles from './index.module.scss'\n const 组件 = () =\u003e {\n   return (\n     {/* （1） 根节点使用 CSSModules 形式的类名（ 根元素的类名： `root` ）*/}\n     \u003cdiv className={styles.root}\u003e\n       {/* （2） 所有子节点，都使用普通的 CSS 类名*/}\n       \u003ch1 className=\"title\"\u003e\n         \u003cspan className=\"text\"\u003e登录\u003c/span\u003e  \n         \u003cspan\u003e登录\u003c/span\u003e  \n       \u003c/h1\u003e\n       \u003cform className=\"login-form\"\u003e\u003c/form\u003e\n     \u003c/div\u003e\n   )\n }\n```\n\n\n\n\n","lastmodified":"2023-11-27T14:24:29.319502019Z","tags":null},"/Record/DigitalGarden/Typescript/TYPESCRIPT":{"title":"TypeScript","content":"`button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Typescript]]**\n\t- [[TypeScript Fundamentals]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Typescript/TypeScript-Fundamentals":{"title":"TypeScript Fundamentals","content":"#  \u003cfont color=\"#92d050\"\u003eTypeScript Fundamentals\u003c/font\u003e\n\n---\n## \u003cfont color=\"#7030a0\"\u003e对象，数值和元组\u003c/font\u003e\n\u003e 现在我们知道了如何键入简单的变量和函数，让我们做一些事情集合更有趣一点：在 JavaScript 中，这包括对象和数组。\n### \u003cfont color=\"#ffc000\"\u003e可选类型\u003c/font\u003e\n\u003e 我们可以使用以下运算符声明此属性是可选的：`?`\n\n```js\nfunction printCar(car: {\n\nmake: string\n\nmodel: string\n\nyear: number\n\nchargeVoltage?: number\n\n}) {\n\nlet str = `${car.make} ${car.model} (${car.year})`\n\ncar.chargeVoltage\n\n(property) chargeVoltage?: number | undefined\n\nif (typeof car.chargeVoltage !== \"undefined\")\n\nstr += `// ${car.chargeVoltage}v`\n\n(property) chargeVoltage?: number\n\nconsole.log(str)\n\n}\n```\n\n\u003e ？可选不仅是简单的添加或者未定义，而是这个属性可以存在或者不存在\n\n\n\u003e 这将允许我们的函数工作，无论属性是否存在：`printCar``chargeVoltage`\n\n```js\n// Works\n\nprintCar({\n\nmake: \"Honda\",\n\nmodel: \"Accord\",\n\nyear: 2017,\n\n})\n\n// Also works\n\nprintCar({\n\nmake: \"Tesla\",\n\nmodel: \"Model 3\",\n\nyear: 2020,\n\nchargeVoltage: 220,\n\n})\n```\n\n---\n###  \u003cfont color=\"#00b050\"\u003e索引签名和对象问答\u003c/font\u003e\n\n有时我们需要表示**字典**的类型，其中一致类型的值可通过键检索\n让我们考虑以下电话号码集合：\n```js\nconst phones = {\n\nhome: { country: \"+1\", area: \"211\", number: \"652-4515\" },\n\nwork: { country: \"+1\", area: \"670\", number: \"752-5856\" },\n\nfax: { country: \"+1\", area: \"322\", number: \"525-4357\" },\n\n}\n```\n显然，我们似乎可以将电话号码存储在“密钥”下 - 在这种情况下，，以及我们选择的其他单词 - 并且每个电话号码由三个字符串组成。`home``office``fax`\n\n我们可以使用所谓的_\u003cspan style=\"background:#b1ffff\"\u003e索引签名\u003c/span\u003e_来描述此值：\n```TypeScript\nconst phones: {\n\n  [k: string]: {\n\n    country: string\n\n    area: string\n\n    number: string\n\n  }\n\n} = { home: { country: \"+1\", area: \"211\", number: \"652-4515\" },\n\n  work: { country: \"+1\", area: \"670\", number: \"752-5856\" },\n\n  fax: { country: \"+1\", area: \"322\", number: \"525-4357\" },}\n\n  \n  \n\n// phones.fax.area\n\nconsole.log(phones.fax.area)\n```\n---\n###  \u003cfont color=\"#dbeef3\"\u003e数组和元组\u003c/font\u003e\n\u003e 🐱‍🏍简单类型数组\n```js\nconst fileExtensions = [\"js\", \"ts\"]\n\n// const fileExtensions: string[]\n声明初始化\nvar array_name[:datatype] = [val1,val2…valn]\n实例\nvar numlist:number[] = [2,4,6,8]\n或者 \nvar sites:string[] = new Array(\"Google\",\"Runoob\",\"Taobao\",\"Facebook\")\n```\n\u003e 如果数组声明时未设置类型，则会被认为是 any 类型，在初始化时根据第一个元素的类型来推断数组的类型。\n\n\u003e 多维数组\n\n```ts\nvar arr_name:datatype[][]=[ [val1,val2,val3],[v1,v2,v3] ]\n\n```\n\u003e🐱‍👤 元组\n\n\u003e可以为每一个变量分配类型我们知道数组中元素的数据类型都一般是相同的（any[] 类型的数组可\n不同），如果存储的元素数据类型不同，则需要使用元组。组中允许存储不同类型的元素，元组可\n以作为参数传递给函数。\n\u003e创建元组的语法格式如下：\n\u003e```ts\n\u003eVar tuple_name = [value 1, value 2, value 3,…value n]\n\u003e```\n```\n```\n\n局限性\n```ts\nconst numPair: [number, number] = [4, 5, 6] //error\n\n//Type '[number, number, number]' is not assignable to type '[number, number]'. Source has 3 element(s) but target allows only 2.\n但是可以通过push和pop操控数组\nconst numPair: [number, number] = [4, 5]\n\nnumPair.push(6) // [4, 5, 6]\n\nnumPair.pop() // [4, 5]\n\nnumPair.pop() // [4]\n\nnumPair.pop() // []\n\n现在支持只读：\n\nconst numPair: readonly [number, number] = [4, 5]\n```\n---\n##  [\u003cfont color=\"#205867\"\u003e结构类型与标称类型\u003c/font\u003e](https://www.typescript-training.com/course/fundamentals-v3/05-structural-vs-nominal-types/)\n### 什么是类型检查？\n类型检查可以被认为是一个尝试评估的任务 _兼容性_或_类型等效性_问题：\n\n将类型系统分类为[静态](https://www.typescriptlang.org/docs/handbook/2/basic-types.html#static-type-checking)或动态与类型检查是否有关 **在编译时或运行时**执行。\n\n\u003e **TypeScript 的类型系统是静态的。**\n[关于静态类型见检查(typescriptlang.org)](https://www.typescriptlang.org/docs/handbook/2/basic-types.html#static-type-checking)\n\n\u003eJava，C # C ++都属于这一类。请记住，推断仍然可以发生在静态类型系统中——TypeScript、Scala 和 Haskell 都有某种形式的静态类型检查。\n\n**动态类型系统在运行时执行其“类型等效性”评估**。JavaScript， Python， Ruby，Perl 和 PHP 属于这一类。\n### \u003cfont color=\"#b2a2c7\"\u003e标称与结构\u003c/font\u003e\n**标称型系统都是关于名称的**。让我们看一个简单的 Java 示例：\n```java\npublic class Car {\n\nString make;\n\nString model;\n\nint make;\n\n}\n\npublic class CarChecker {\n\n// takes a `Car` argument, returns a `String`\n\npublic static String printCar(Car car) { }\n\n}\n\nCar myCar = new Car();\n\n// TYPE CHECKING\n\n// -------------\n\n// Is `myCar` type-equivalent to\n\n// what `checkCar` wants as an argument?\n\nCarChecker.checkCar(myCar);\n```\n\n在上面的代码中，当考虑最后一行的类型等价问题时，重要的是类的实例是否**名为** 。`myCar``Car`\n\n\u003e 打字稿类型系统是结构化的\n\n结构**类型系统都是关于结构或形状**的。让我们看一个 TypeScript 示例：\n\n```ts\nclass Car {\n\nmake: string\n\nmodel: string\n\nyear: number\n\nisElectric: boolean\n\n}\n\nclass Truck {\n\nmake: string\n\nmodel: string\n\nyear: number\n\ntowingCapacity: number\n\n}\n\nconst vehicle = {\n\nmake: \"Honda\",\n\nmodel: \"Accord\",\n\nyear: 2017,\n\n}\n\nfunction printCar(car: {\n\nmake: string\n\nmodel: string\n\nyear: number\n\n}) {\n\nconsole.log(`${car.make} ${car.model} (${car.year})`)\n\n}\n\nprintCar(new Car()) // Fine\n\nprintCar(new Truck()) // Fine\n\nprintCar(vehicle) // Fine\n```\n[Try](https://www.typescriptlang.org/play/#code/PTAEAEGcBcCcEsDG0AKsD2AHApraBPASQDt5p4BDAG3gC8Lz1iAuUAM2smwChEqLIkUAGEKsUAG9uoUAFsKAa2ysYCYgHNpc9ABNsVFXHgat+bGNbEArrIBGuLfEgBRKtmQJErW+nRuKxNwAvty8-IKgACqwVogKklrySoZqmjKyuvopxmmgZhag1nYOMtDoAO45opgUiGT4ljb2sMGhiEwwoABu2AAWSG6gALwJ6YrKoABEABJMOhSTADSJmQZTAIKI7bA6S6bmsKwATAAMAIwA7Msh3GxWxMjwTKCYatCisAAUiAVSY8mgVQ5FZ6NZAkwyfKHQpNBxBACUo1A7WIkD82AAdFR0OpPgADAAkEh+sAxSWwQVARJJZNWlM+1LEGKhCLx8Na3FexneYk+xGw5REvPhiJAoAAYsYeFziDyvvzBdFYgpPiLQGLJfzOW8Pp8ev0+NhRWBNdggA)\n\n该函数不关心它的参数来自哪个构造函数从，它只关心它是否有：`printCar`\n\n-   类型的属性 `make``string`\n-   类型的属性 `model``string`\n-   类型的属性 `year``number`\n\n如果传递给它的参数满足这些要求，则很高兴。`printCar`\n\n### \u003cfont color=\"#548dd4\"\u003e鸭子打字\u003c/font\u003e\n\n“鸭子打字”得名于“鸭子测试”。\n\n\u003e “如果它看起来像鸭子，像鸭子一样游泳，像鸭子一样嘎嘎叫，那么它很可能是一只鸭子”。\n\n在实践中，这与结构类型非常相似，但“鸭子类型”通常是用于描述动态类型系统。\n### “\u003cfont color=\"#548dd4\"\u003e强”与“弱”类型\u003c/font\u003e\n\n这些术语虽然经常使用，但没有商定的技术定义。在 TypeScript 对于那些说“强”的人来说，真正意味着“静态”是很常见的。\n## \u003cfont color=\"#d99694\"\u003e并集和交集类型\u003c/font\u003e\n\n### 并集和交集类型，概念上\n\n在概念上可以将联合和交集类型视为逻辑布尔运算符 （， ），因为它们与类型有关。让我们看看这组重叠的两个以项目集为例：`AND``OR`\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230301112440.png)\n联合类型有一个[非常具体的技术定义]( https://en.wikipedia.org/wiki/Union_ (set_theory))，它来自集合论，但是对于**类型，将其视为 OR**是完全可以的。\n\n在上图中，如果我们有一个类型，它将包括 整个图表上的每个项目。`Fruit OR Sour`\n\n交集类型也有[名称 以及来自集合论的定义](https://en.wikipedia.org/wiki/Intersection_(set_theory))， 但对于**类型，**它们可以被认为是 AND。\n\n在上面的同一张图中，如果我们想要的_水果也是酸的（_），我们最终会得到只得到. `Fruit AND Sour``{ Lemon, Lime, Grapefruit }`\n\n### TypeScript 中的联合类型\n\nTypeScript 中的联合类型可以使用 （pipe） 运算符进行描述。`|`\n\n例如，如果我们有一个类型可以是两个字符串之一，或者，我们可以将其定义为 `\"success\"``\"error\"`\n\n```ts\n\"success\" | \"error\"\n```\n\n例如，如果从中选择的数字为 \u003e= 0.5，或者如果 \u003c=0.5，则该函数将返回。`flipCoin()``\"heads\"``(0, 1)``\"tails\"`\n```ts\nfunction flipCoin(): \"heads\" | \"tails\" {\n\nif (Math.random() \u003e 0.5) return \"heads\"\n\nreturn \"tails\"\n\n}\n\nconst outcome = flipCoin()\n\nconst outcome: \"heads\" | \"tails\"\n```\n让我们通过使用元组使它更有趣一些，元组的结构如下：\n\n-   `[0]`要么或`\"success\"``\"failure\"`\n-   `[1]`不同的东西，具体取决于在 中找到的值`[0]`\n    \n    -   `\"success\"`案例：一条联系方式：`{ name: string; email: string; }`\n    -   `\"error\"`案例：一个实例`Error`\n\n我们仍然会根据上面的 50/50 硬币翻转来决定这些事情中的哪一件实际发生。\n```ts\nfunction flipCoin(): \"heads\" | \"tails\" {\n\nif (Math.random() \u003e 0.5) return \"heads\"\n\nreturn \"tails\"\n\n}\n\nfunction maybeGetUserInfo():\n\n| [\"error\", Error]\n\n| [\"success\", { name: string; email: string }] {\n\nif (flipCoin() === \"heads\") {\n\nreturn [\n\n\"success\",\n\n{ name: \"Mike North\", email: \"mike@example.com\" },\n\n]\n\n} else {\n\nreturn [\n\n\"error\",\n\nnew Error(\"The coin landed on TAILS :(\"),\n\n]\n\n}\n\n}\n\nconst outcome = maybeGetUserInfo()\n\nconst outcome: [\"error\", Error] | [\"success\", { name: string; email: string; }]\n```\n这种类型明显更有趣。\n\n### 使用联合类型\n\n让我们继续上面的示例，并尝试使用 “结果”值。\n\n首先，让我们解构元组，看看 TypeScript 对其成员的看法\n```ts\nconst outcome = maybeGetUserInfo()\n\nconst [first, second] = outcome\n\nfirst\n\nconst first: \"error\" | \"success\"\n\nsecond\n\nconst second: Error | { name: string; email: string; }\n```\n\n```ad-tip\n单击按钮并在 TS 操场中探索。 探索自动完成功能中针对每个选项的可用功能。`Try``first``second`\n```","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Vscode%E5%BF%AB%E6%8D%B7%E9%94%AE":{"title":"Vscode快捷键","content":"\u003e - ctrl + alt + L   自动插入有意义的日志消息\n\u003e- shift+alt+T  翻译\n\u003e- ```text\nctrl + alt + l 选中变量之后，使用这个快捷键生成 console.log\nalt + shift + c 注释所有 console.log\nalt + shift + u 启用所有 console.log\nalt + shift + d 删除所有 console.log\n```\n```\n\n\n````ad-abstract\ntitle:自身快捷键\n-   重开一行：光标在行尾的话，回车即可；不在行尾，ctrl `+ enter` 向下重开一行；ctrl+`shift + enter` 则是在上一行重开一行\n-   删除一行：光标没有选择内容时，ctrl `+ x` 剪切一行；ctrl +`shift + k` 直接删除一行\n-   移动一行：`alt + ↑` 向上移动一行；`alt + ↓` 向下移动一行\n-   复制一行：`shift + alt + ↓` 向下复制一行；`shift + alt + ↑` 向上复制一行\n-   ctrl + z 回退\n\n对于 **词** 的操作：\n\n-   选中一个词：ctrl `+ d`\n\n搜索或者替换：\n\n-   ctrl `+ f` ：搜索\n-   ctrl `+ alt + f`： 替换\n-   ctrl `+ shift + f`：在项目内搜索\n\n通过**Ctrl + `** 可以打开或关闭终端\n\nCtrl+P 快速打开最近打开的文件\n\nCtrl+Shift+N 打开新的编辑器窗口\n\nCtrl+Shift+W 关闭编辑器\n\nHome 光标跳转到行头\n\nEnd 光标跳转到行尾\n\nCtrl + Home 跳转到页头\n\nCtrl + End 跳转到页尾\n\nCtrl + Shift + [ 折叠区域代码\n\nCtrl + Shift + ] 展开区域代码\n\nCtrl + / 添加关闭行注释\n\nShift + Alt +A 块区域注释\n````","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Vue/%E5%86%85%E7%BD%AE%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4":{"title":"内置常用指令","content":"## v-html[​](https://cn.vuejs.org/api/built-in-directives.html#v-html)\n\n更新元素的 [innerHTML](https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML)。\n\n- **期望的绑定值类型：**`string`\n    \n- **详细信息**\n    \n\n`v-html` 的内容直接作为普通 HTML 插入—— Vue 模板语法是不会被解析的。如果你发现自己正打算用 `v-html` 来编写模板，不如重新想想怎么使用组件来代替。\n\n安全说明\n\n在你的站点上动态渲染任意的 HTML 是非常危险的，因为它很容易导致 [XSS 攻击](https://en.wikipedia.org/wiki/Cross-site_scripting)。请只对可信内容使用 HTML 插值，**绝不要**将用户提供的内容作为插值\n\n在[单文件组件](https://cn.vuejs.org/guide/scaling-up/sfc.html)，`scoped` 样式将不会作用于 `v-html` 里的内容，因为 HTML 内容不会被 Vue 的模板编译器解析。如果你想让 `v-html` 的内容也支持 scoped CSS，你可以使用 [CSS modules](https://cn.vuejs.org/api/sfc-css-features.html#css-modules) 或使用一个额外的全局 `\u003cstyle\u003e` 元素，手动设置类似 BEM 的作用域策略。\n\n- **示例**\n    \n    template\n    \n    ```\n    \u003cdiv v-html=\"html\"\u003e\u003c/div\u003e\n    ```\n    \n- **参考**[模板语法 - 原始 HTML](https://cn.vuejs.org/guide/essentials/template-syntax.html#raw-html)\n\n## v-bind[​](https://cn.vuejs.org/api/built-in-directives.html#v-bind)\n\n动态的绑定一个或多个 attribute，也可以是组件的 prop。\n\n- **缩写：**`:` 或者 `.` (当使用 `.prop` 修饰符)\n    \n- **期望：**`any (带参数) | Object (不带参数)`\n    \n- **参数：**`attrOrProp (可选的)`\n    \n- **修饰符**\n    \n    - `.camel` - 将短横线命名的 attribute 转变为驼峰式命名。\n    - `.prop` - 强制绑定为 DOM property。3.2+\n    - `.attr` - 强制绑定为 DOM attribute。3.2+\n- **用途**\n    \n    当用于绑定 `class` 或 `style` attribute，`v-bind` 支持额外的值类型如数组或对象。详见下方的指南链接。\n    \n    在处理绑定时，Vue 默认会利用 `in` 操作符来检查该元素上是否定义了和绑定的 key 同名的 DOM property。如果存在同名的 property，则 Vue 会将它作为 DOM property 赋值，而不是作为 attribute 设置。这个行为在大多数情况都符合期望的绑定值类型，但是你也可以显式用 `.prop` 和 `.attr` 修饰符来强制绑定方式。有时这是必要的，特别是在和[自定义元素](https://cn.vuejs.org/guide/extras/web-components.html#passing-dom-properties)打交道时。\n    \n    当用于组件 props 绑定时，所绑定的 props 必须在子组件中已被正确声明。\n    \n    当不带参数使用时，可以用于绑定一个包含了多个 attribute 名称-绑定值对的对象。\n    \n- **示例**\n    \n    template\n    \n    ```vue\n    \u003c!-- 绑定 attribute --\u003e\n    \u003cimg v-bind:src=\"imageSrc\" /\u003e\n    \n    \u003c!-- 动态 attribute 名 --\u003e\n    \u003cbutton v-bind:[key]=\"value\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 缩写 --\u003e\n    \u003cimg :src=\"imageSrc\" /\u003e\n    \n    \u003c!-- 缩写形式的动态 attribute 名 --\u003e\n    \u003cbutton :[key]=\"value\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 内联字符串拼接 --\u003e\n    \u003cimg :src=\"'/path/to/images/' + fileName\" /\u003e\n    \n    \u003c!-- class 绑定 --\u003e\n    \u003cdiv :class=\"{ red: isRed }\"\u003e\u003c/div\u003e\n    \u003cdiv :class=\"[classA, classB]\"\u003e\u003c/div\u003e\n    \u003cdiv :class=\"[classA, { classB: isB, classC: isC }]\"\u003e\u003c/div\u003e\n    \n    \u003c!-- style 绑定 --\u003e\n    \u003cdiv :style=\"{ fontSize: size + 'px' }\"\u003e\u003c/div\u003e\n    \u003cdiv :style=\"[styleObjectA, styleObjectB]\"\u003e\u003c/div\u003e\n    \n    \u003c!-- 绑定对象形式的 attribute --\u003e\n    \u003cdiv v-bind=\"{ id: someProp, 'other-attr': otherProp }\"\u003e\u003c/div\u003e\n    \n    \u003c!-- prop 绑定。“prop” 必须在子组件中已声明。 --\u003e\n    \u003cMyComponent :prop=\"someThing\" /\u003e\n    \n    \u003c!-- 传递子父组件共有的 prop --\u003e\n    \u003cMyComponent v-bind=\"$props\" /\u003e\n    \n    \u003c!-- XLink --\u003e\n    \u003csvg\u003e\u003ca :xlink:special=\"foo\"\u003e\u003c/a\u003e\u003c/svg\u003e\n    ```\n    \n    `.prop` 修饰符也有专门的缩写，`.`：\n    \n    template\n    \n    ```\n    \u003cdiv :someProperty.prop=\"someObject\"\u003e\u003c/div\u003e\n    \n    \u003c!-- 等同于 --\u003e\n    \u003cdiv .someProperty=\"someObject\"\u003e\u003c/div\u003e\n    ```\n    \n    当在 DOM 内模板使用 `.camel` 修饰符，可以驼峰化 `v-bind` attribute 的名称，例如 SVG `viewBox` attribute：\n    \n    template\n    \n    ```\n    \u003csvg :view-box.camel=\"viewBox\"\u003e\u003c/svg\u003e\n    ```\n    \n    如果使用字符串模板或使用构建步骤预编译模板，则不需要 `.camel`。\n    \n- **参考**\n    \n    - [Class 与 Style 绑定](https://cn.vuejs.org/guide/essentials/class-and-style.html)\n    - [组件 - Prop 传递细节](https://cn.vuejs.org/guide/components/props.html#prop-passing-details)\n\n## v-model[​](https://cn.vuejs.org/api/built-in-directives.html#v-model)\n\n在表单输入元素或组件上创建双向绑定。\n\n- **期望的绑定值类型**：根据表单输入元素或组件输出的值而变化\n    \n- **仅限：**\n    \n    - `\u003cinput\u003e`\n    - `\u003cselect\u003e`\n    - `\u003ctextarea\u003e`\n    - components\n- **修饰符**\n    \n    - [`.lazy`](https://cn.vuejs.org/guide/essentials/forms.html#lazy) - 监听 `change` 事件而不是 `input`\n    - [`.number`](https://cn.vuejs.org/guide/essentials/forms.html#number) - 将输入的合法字符串转为数字\n    - [`.trim`](https://cn.vuejs.org/guide/essentials/forms.html#trim) - 移除输入内容两端空格\n- **参考**\n    \n    - [表单输入绑定](https://cn.vuejs.org/guide/essentials/forms.html)\n    - [组件事件 - 配合 `v-model` 使用](https://cn.vuejs.org/guide/components/v-model.html)\n\n\n## v-on[​](https://cn.vuejs.org/api/built-in-directives.html#v-on)\n\n给元素绑定事件监听器。\n\n- **缩写：**`@`\n    \n- **期望的绑定值类型：**`Function | Inline Statement | Object (不带参数)`\n    \n- **参数：**`event` (使用对象语法则为可选项)\n    \n- **修饰符**\n    \n    - `.stop` - 调用 `event.stopPropagation()`。\n    - `.prevent` - 调用 `event.preventDefault()`。\n    - `.capture` - 在捕获模式添加事件监听器。\n    - `.self` - 只有事件从元素本身发出才触发处理函数。\n    - `.{keyAlias}` - 只在某些按键下触发处理函数。\n    - `.once` - 最多触发一次处理函数。\n    - `.left` - 只在鼠标左键事件触发处理函数。\n    - `.right` - 只在鼠标右键事件触发处理函数。\n    - `.middle` - 只在鼠标中键事件触发处理函数。\n    - `.passive` - 通过 `{ passive: true }` 附加一个 DOM 事件。\n- **详细信息**\n    \n    事件类型由参数来指定。表达式可以是一个方法名，一个内联声明，如果有修饰符则可省略。\n    \n    当用于普通元素，只监听[**原生 DOM 事件**](https://developer.mozilla.org/en-US/docs/Web/Events)。当用于自定义元素组件，则监听子组件触发的**自定义事件**。\n    \n    当监听原生 DOM 事件时，方法接收原生事件作为唯一参数。如果使用内联声明，声明可以访问一个特殊的 `$event` 变量：`v-on:click=\"handle('ok', $event)\"`。\n    \n    `v-on` 还支持绑定不带参数的事件/监听器对的对象。请注意，当使用对象语法时，不支持任何修饰符。\n    \n- **示例**\n    \n    template\n    \n    ```\n    \u003c!-- 方法处理函数 --\u003e\n    \u003cbutton v-on:click=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 动态事件 --\u003e\n    \u003cbutton v-on:[event]=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 内联声明 --\u003e\n    \u003cbutton v-on:click=\"doThat('hello', $event)\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 缩写 --\u003e\n    \u003cbutton @click=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 使用缩写的动态事件 --\u003e\n    \u003cbutton @[event]=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 停止传播 --\u003e\n    \u003cbutton @click.stop=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 阻止默认事件 --\u003e\n    \u003cbutton @click.prevent=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 不带表达式地阻止默认事件 --\u003e\n    \u003cform @submit.prevent\u003e\u003c/form\u003e\n    \n    \u003c!-- 链式调用修饰符 --\u003e\n    \u003cbutton @click.stop.prevent=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 按键用于 keyAlias 修饰符--\u003e\n    \u003cinput @keyup.enter=\"onEnter\" /\u003e\n    \n    \u003c!-- 点击事件将最多触发一次 --\u003e\n    \u003cbutton v-on:click.once=\"doThis\"\u003e\u003c/button\u003e\n    \n    \u003c!-- 对象语法 --\u003e\n    \u003cbutton v-on=\"{ mousedown: doThis, mouseup: doThat }\"\u003e\u003c/button\u003e\n    ```\n    \n    监听子组件的自定义事件 (当子组件的“my-event”事件被触发，处理函数将被调用)：\n    \n    template\n    \n    ```\n    \u003cMyComponent @my-event=\"handleThis\" /\u003e\n    \n    \u003c!-- 内联声明 --\u003e\n    \u003cMyComponent @my-event=\"handleThis(123, $event)\" /\u003e\n    ```\n    \n- **参考**\n    \n    - [事件处理](https://cn.vuejs.org/guide/essentials/event-handling.html)\n    - [组件 - 自定义事件](https://cn.vuejs.org/guide/essentials/component-basics.html#listening-to-events)","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Vue/Debris/Debris":{"title":"Debris","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Antd\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Debris]]**\n\t- [[v-bind和v-model的区别]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Vue/Debris/v-bind%E5%92%8Cv-model%E7%9A%84%E5%8C%BA%E5%88%AB":{"title":"v-bind和v-model的区别","content":"[v-bind 和 v-model 的区别如下](https://www.bing.com/ck/a?!\u0026\u0026p=3187921a3240f948JmltdHM9MTY5OTIyODgwMCZpZ3VpZD0yNjA2ODFkYy1jZDU3LTY4MGMtMDIzZS05MjViY2NmZDY5Y2YmaW5zaWQ9NTYxNg\u0026ptn=3\u0026hsh=3\u0026fclid=260681dc-cd57-680c-023e-925bccfd69cf\u0026psq=v-bind%e5%92%8cv-model%e7%9a%84%e5%8c%ba%e5%88%ab\u0026u=a1aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xldGlhbnhmL2FydGljbGUvZGV0YWlscy8xMjg0MjkyOTQ\u0026ntb=1)[1](https://www.bing.com/ck/a?!\u0026\u0026p=974bb13a86919c24JmltdHM9MTY5OTIyODgwMCZpZ3VpZD0yNjA2ODFkYy1jZDU3LTY4MGMtMDIzZS05MjViY2NmZDY5Y2YmaW5zaWQ9NTYxNw\u0026ptn=3\u0026hsh=3\u0026fclid=260681dc-cd57-680c-023e-925bccfd69cf\u0026psq=v-bind%e5%92%8cv-model%e7%9a%84%e5%8c%ba%e5%88%ab\u0026u=a1aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xldGlhbnhmL2FydGljbGUvZGV0YWlscy8xMjg0MjkyOTQ\u0026ntb=1)[2](https://www.bing.com/ck/a?!\u0026\u0026p=fccdea317324c747JmltdHM9MTY5OTIyODgwMCZpZ3VpZD0yNjA2ODFkYy1jZDU3LTY4MGMtMDIzZS05MjViY2NmZDY5Y2YmaW5zaWQ9NTYxOA\u0026ptn=3\u0026hsh=3\u0026fclid=260681dc-cd57-680c-023e-925bccfd69cf\u0026psq=v-bind%e5%92%8cv-model%e7%9a%84%e5%8c%ba%e5%88%ab\u0026u=a1aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcWluZ2hlc2hpZ3VhbmcvcC8xNDY2MTY2My5odG1s\u0026ntb=1):\n\n- v-bind 是单向绑定，只能将 vue 中的数据同步到页面，可以给任何属性赋值。\n- v-model 是双向绑定，不仅可以将 vue 中的数据同步到页面，而且可以将用户数据的数据赋值给 vue 中的属性，只能给具备 value 属性的元素进行数据双向绑定。\n- v-model 基本上只用在表单元素上，而 v-bind 可以在任何有效元素上使用。\n- 当 v-bind 和 v-model 同时用在一个元素上时，它们各自的作用没变，但 v-model 优先级更高，而且需区分这个元素是单个的还是一组出现的。","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/Vue/vue":{"title":"vue","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Vue\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Vue]]**\n\t- [[Debris]]\n\t- [[内置常用指令]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebGL/CheatSheet":{"title":"CheatSheet","content":"\n## ✍内容\n# Cheat Sheet\n\nHere you will find some 'recipes' and patterns that you can use in creative coding and generative art.  \n在这里，你会发现一些“食谱”和模式，你可以用在创造性的编码和生成艺术。\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#new-array)New Array\n\nYou can use `Array.from(new Array(count))` to create a dense array at a fixed size. For example, to generate an array of 20 random numbers:  \n可以使用 `Array.from(new Array(count))` 创建固定大小的密集阵列。例如，要生成20个随机数的数组：\n\nconst count = 20;\nconst randoms = Array.from(new Array(count)).map(() =\u003e Math.random());\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#array-with-values-01-inclusive)Array with values `0...1` (inclusive)  \n值为 `0...1` （含）的数组\n\nUsing `index / (listLength - 1)`, you can get a _t_ value between 0 and 1.  \n使用 `index / (listLength - 1)` ，您可以获得介于0和1之间的t值。\n\nExample:\n```JS\nconst count = 20;\nconst values = Array.from(new Array(count)).map((_, i) =\u003e {\n  const t = i / (count - 1);\n  // Do something with the 't' param...\n  return t;\n});\n```\nTo guard against a `count` of \u003c= 1: ❗ 🔄\n\nconst count = 20;\nconst values = Array.from(new Array(count)).map((_, i) =\u003e {\n  const t = count \u003c= 1 ? 0 : (i / (count - 1));\n  return t;\n});\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#grids--uv-coordinates)Grids \u0026 UV Coordinates ❗ 🔄\n\nDuring the workshop, when I say \"UV coordinates\" I am referring to coordinates that vary from `(0, 0)` (top left) to `(1, 1)` (bottom right).  \n在研讨会期间，当我说“UV坐标”时，我指的是从 `(0, 0)` （左上角）到 `(1, 1)` （右下角）的坐标。\n\nFor example, to create a UV grid with nested for loops:  \n例如，要创建具有嵌套for循环的UV栅格，请执行以下操作：\n\nconst count = 5;\nconst points = [];\nfor (let x = 0; x \u003c count; x++) {\n  for (let y = 0; y \u003c count; y++) {\n    const u = count \u003c= 1 ? 0.5 : (x / (count - 1));\n    const v = count \u003c= 1 ? 0.5 : (y / (count - 1));\n    points.push([ u, v ]);\n  }\n}\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#padding-with-margins-using-linear-interpolation)Padding with Margins using Linear Interpolation  \n使用线性插值填充边距\n\nIf you have UV coordinates for a surface between `(0, 0)` (top left) and `(1, 1)` (bottom right), you can use linear interpolation to get back pixel values for each coordinate:  \n如果曲面的UV坐标在 `(0, 0)` （左上）和 `(1, 1)` （右下）之间，则可以使用线性插值来获取每个坐标的像素值：\n\nconst { lerp } = require('canvas-sketch-util/math');\n\n// ...\n\nconst x = lerp(minX, maxX, u);\nconst y = lerp(minY, maxY, v);\n\nLet's say you want a margin of `20px` in your `[ width, height ]` artwork, you can do this:  \n假设您想要 `[ width, height ]` 图稿中的 `20px` 边距，您可以执行以下操作：\n\nconst margin = 20;\nconst x = lerp(margin, width - margin, u);\nconst y = lerp(margin, height - margin, v);\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#noise-from-uv-coordinates)Noise from UV Coordinates 来自UV坐标的噪波\n\nIf you have UV coordinates between `0..1`, you can get back a _simplex noise_ signal from those coordinates that smoothly varies between `-1...1`. ❗ 🔄\n\nconst random = require('canvas-sketch-util/random');\n\nconst frequency = 1;\nconst amplitude = 1;\n\nconst n = amplitude * random.noise2D(u * frequency, v * frequency);\n\nThe `frequency` changes how chaotic the noise signal will be, and the `amplitude` can be used to scale the value to something smaller or larger than `-1..1` range. ❗ 🔄\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#animated-noise)Animated Noise\n\nBy using a higher dimension noise function, you can animate the noise by a `{ time }` or `{ playhead }` variable from `canvas-sketch` props. ❗ 🔄\n\nconst settings = {\n  // Enable animation \u0026 time props\n  animate: true\n};\n\ncanvasSketch(() =\u003e {\n  return ({ context, time }) =\u003e {\n    const frequency = 1;\n    const amplitude = 1;\n\n    // Use 3D instead of 2D noise\n    const n = amplitude * random.noise3D(u * frequency, v * frequency, time);\n  };\n}, settings);\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#01-to--11)`0..1` to `-1...1`  \n`0..1` 至 `-1...1`\n\nIf _t_ is between 0 and 1 (inclusive) and you want to map it to -1 to 1 (inclusive), you can use this: ❗ 🔄\n\nconst n = t * 2 - 1;\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#-11-to-01)`-1..1` to `0...1`  \n`-1..1` 至 `0...1`\n\nIf _t_ is between -1 and 1 (inclusive) and you want to map it to 0 to 1 (inclusive), you can use this:  \n如果t介于-1和1之间（含），并且你想将它映射到0到1（含），你可以使用这个：\n\nconst n = t * 0.5 + 0.5;\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#mapping-one-range-of-numbers-to-another)Mapping One Range of Numbers to Another  \n将一个数字范围映射到另一个数字范围\n\nYou can also use the `mapRange` function in `canvas-sketch-util/math` to map one range of values to another:  \n您还可以使用 `canvas-sketch-util/math` 中的 `mapRange` 函数将一个值范围映射到另一个值范围：\n\nconst { mapRange } = require('canvas-sketch-util/math');\n\n// Our input lies between -1..1\nconst value = -0.25;\n\n// Map the input range -1..1 to the output range 25..50\nconst n = mapRange(value, -1, 1, 25, 50);\n\nThis is equivalent to: 这相当于：\n\nconst { inverseLerp, lerp } = require('canvas-sketch-util/math');\n\n// Get a 0..1 represenation of the value within the given range\nconst t = inverseLerp(-1, 1, value);\n\n// Now interpolate that to our output range of 25..50\nconst n = lerp(25, 50, t);\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#fill-a-circle-in-canvas-2d)Fill a Circle in Canvas 2D  \n在Canvas 2D中填充圆形\n\ncontext.beginPath();\ncontext.arc(x, y, radius, 0, Math.PI * 2, false);\ncontext.fill();\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#rotating-shapes-in-canvas-2d)Rotating Shapes in Canvas 2D 在Canvas 2D中旋转图形\n\nIf you'd like to draw a shape rotated from its centre point, you need to first translate to the point you wish to draw the shape, then rotate, then offset by the center point of the shape. For example:  \n如果你想画一个从它的中心点旋转的形状，你需要首先平移到你想画形状的点，然后旋转，然后偏移形状的中心点。例如：\n\n// Draw a rotated rectangle\nconst x = 25;\nconst y = 50;\nconst rectWidth = 100;\nconst rectHeight = 30;\nconst rotation = Math.PI / 4;\n\ncontext.save();\ncontext.translate(x, y);\ncontext.rotate(rotation);\ncontext.translate(-rectWidth / 2, -rectHeight / 2);\ncontext.fillRect(0, 0, rectWidth, rectHeight);\ncontext.restore();\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#creating-a-2d-unit-vector-from-an-angle)Creating a 2D Unit Vector from an Angle  \n从某个角度创建二维单位向量\n\nA unit vector is a really handy construct for doing generative art. You can create one from an angle like so:  \n单位向量对于生成艺术来说是一个非常方便的构造。你可以从这样的角度创建一个单位向量：\n\n// angle is in radians\nconst normal = [ Math.cos(angle), Math.sin(angle) ];\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#creating-a-line-segment-from-a-2d-normal)Creating a Line Segment from a 2D Normal  \n从二维法线创建线段\n\nIf you have a 2D unit normal (or an angle, see the previous recipe), you can create a line segment of a specific length and thickness like so:  \n如果你有一个2D单位法线（或一个角度，见前面的食谱），你可以创建一个特定长度和厚度的线段，如下所示：\n\nconst { vec2 } = require('gl-matrix');\n\nconst normal = [ /* a 2D unit vector ... */ ];\nconst length = 2;\nconst thickness = 4;\n\n// The center of the line segment\nconst center = [ 250, 100 ];\n\n// Extrude in either direction\nconst line = [ -1, 1 ].map(dir =\u003e vec2.scaleAndAdd([], center, normal, dir * length));\n\n// Draw line segment\ncontext.beginPath();\nline.forEach(([ x, y ]) =\u003e context.lineTo(x, y));\ncontext.lineWidth = thickness;\ncontext.stroke();\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#looping-motion-in--11-range)Looping Motion in `-1..1` Range  \n`-1..1` 范围内的活套运动\n\nTo create a looping motion from `-1..1` you can use `Math.sin()`, like so:  \n要从 `-1..1` 创建循环运动，可以使用 `Math.sin()` ，如下所示：\n\nconst motionSpeed = 0.5;\nconst v = Math.sin(time * motionSpeed);\n\nYou can map this value into `0..1` space and/or interpolate it to another range.  \n您可以将此值映射到 `0..1` 空间和/或将其插值到另一个范围。\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#ping-pong-motion-in-01-range)Ping-Pong Motion in `0..1` Range  \n`0..1` 范围内的乒乓运动\n\nWhen you have a defined sketch `{ duration }` and you are using the `{ playhead }` prop, you can use `Math.sin()` to get a ping-pong motion from `0..1` which slowly varies from 0, to 1, and then back to zero. ❗ 🔄\n\nconst v = Math.sin(playhead * Math.PI);\n\nYou can invert this with `1.0 - v` if you need it to vary from 1, to 0, and then back to 1. ❗ 🔄\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#isometric-threejs-camera)Isometric ThreeJS Camera 等距ThreeJS摄像机\n\nIn your setup, replace the perspective camera with: ❗ 🔄\n\nconst camera = new THREE.OrthographicCamera();\n\nIn the `resize` function, replace the perspective camera configuration with: ❗ 🔄\n\nconst aspect = viewportWidth / viewportHeight;\n\n// Ortho zoom\nconst zoom = 1.0;\n\n// Bounds\ncamera.left = -zoom * aspect;\ncamera.right = zoom * aspect;\ncamera.top = zoom;\ncamera.bottom = -zoom;\n\n// Near/Far\ncamera.near = -100;\ncamera.far = 100;\n\n// Set position \u0026 look at world center\ncamera.position.set(zoom, zoom, zoom);\ncamera.lookAt(new THREE.Vector3());\n\n// Update the camera\ncamera.updateProjectionMatrix();\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#3d-coordinate-system)3D Coordinate System 三维坐标系\n\nHere's a small reference you can use to remember XYZ axes in ThreeJS.  \n这里有一个小的参考，你可以用它来记住ThreeJS中的XYZ轴。\n\n[![](https://github.com/mattdesl/workshop-generative-art/raw/master/docs/images/xyz-1.png)](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/images/xyz-1.png) [![](https://github.com/mattdesl/workshop-generative-art/raw/master/docs/images/xyz-2.png)](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/images/xyz-2.png)\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#third-party-glsl-modules)Third-Party GLSL Modules 第三方GLSL模块\n\nWith [glslify](https://github.com/glslify/glslify) (built-in to canvas-sketch CLI), we can import GLSL modules and snippets directly form npm into our shader code.  \n使用glslify（内置于canvas-sketch CLI），我们可以将GLSL模块和片段直接从npm导入到我们的着色器代码中。\n\nFor example, after running `npm install glsl-noise`, you can use this:  \n例如，在运行 `npm install glsl-noise` 之后，您可以使用以下命令：\n\n// Import glslify\nconst glsl = require('glslify');\n\n// Wrap your GLSL string with glslify function\nconst frag = glsl(`\n  precision highp float;\n  // We can now import GLSL snippets from npm into this shader\n  #pragma glslify: noise = require('glsl-noise/simplex/3d');\n  uniform float time;\n  varying vec2 vUv;\n  void main () {\n    float d = noise(vec3(vUv, time));\n    vec3 color = vec3(d);\n    gl_FragColor = vec4(color, 1.0);\n  }\n`);\n\n## [](https://github.com/mattdesl/workshop-generative-art/blob/master/docs/cheat-sheet.md#looping-noise)Looping Noise\n\nYou can use the following to blend 2D noise seamlessly in a GIF/MP4 loop.  \n您可以使用以下命令在GIF/MP4循环中无缝混合2D噪波。\n\nfunction loopNoise (x, y, t, scale = 1) {\n  const duration = scale;\n  const current = t * scale;\n  return ((duration - current) * random.noise3D(x, y, current) + current * random.noise3D(x, y, current - duration)) / duration;\n}\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebGL/ThreeJs":{"title":"ThreeJs","content":"\n## 创建模板\n\u003e Running Locally 本地运行\n\nMost of the benefits of `canvas-sketch` (MP4 export, `require()` statements, etc) are only usable when we run the CLI tool locally.  \n`canvas-sketch` 的大多数优点（MP4导出、 `require()` 语句等）只有在本地运行CLI工具时才能使用。\n\nYou can install it with npm:  \n您可以使用npm安装它：\n\n`npm install canvas-sketch-cli -g`\n\n\u003e 💡 Notice the `-cli` part! This means we want to install the CLI tool, not just the JavaScript library.  \n\u003e 💡 注意 `-cli` 部分！这意味着我们要安装CLI工具，而不仅仅是JavaScript库。\n\nThen, go into a new directory:  \n然后，进入一个新目录：\n\n`mkdir genart-workshop`\n`cd genart-workshop`\n\nAnd scaffold out our first artwork with the `three` template:  \n用 `three` 模板搭建我们的第一幅作品：\n\n`canvas-sketch src/sketch.js --new --template=three`\n\nNow open [](http://localhost:9966/)[http://localhost:9966/](http://localhost:9966/) and start to edit `src/sketch.js`, and the browser should live reload.  \n现在打开 [](http://localhost:9966/)[http://localhost:9966/](http://localhost:9966/) 并开始编辑 `src/sketch.js` ，浏览器应实时重新加载。\n```js\nconst settings = {\n\n  // 画布大小\n\n  dimensions: \"A4\",\n  // 画布单位\n\n  units: \"cm\",\n  // 画布比例\n\n  scaleToView: true,\n\n  // 画布像素密度\n\n  pixelsPerInch: 300,\n  // 画布方向\n\n  orientation: \"landscape\",\n\n  // Make the loop animated\n\n  animate: true,\n\n  // Get a WebGL canvas rather than 2D\n\n  context: \"webgl\",\n\n};\n```\n---\n## THREEJS\n###   THREE.Vector \u0026 THREE.Color 向量和颜色\nThreeJS uses a data types for \"coordinates\" called `THREE.Vector`:  \nThreeJS使用名为 `THREE.Vector` 的“坐标”数据类型：\n\n-   [THREE.Vector2](https://threejs.org/docs/#api/en/math/Vector2) (2D Coordinate)  三个矢量2（2D坐标）\n-   [THREE.Vector3](https://threejs.org/docs/#api/en/math/Vector3) (3D Coordinate)  三个矢量3（三维坐标）\n-   [THREE.Vector4](https://threejs.org/docs/#api/en/math/Vector4) (4D Coordinate)  三个矢量4（4D坐标）\n\nIt also uses a data type for colors called `THREE.Color`:  \n它还使用名为 `THREE.Color` 的颜色数据类型：\n\n-   [THREE.Color](https://threejs.org/docs/#api/en/math/Color)\n\nHere's one of our earlier demos but using ThreeJS data types instead of plain JavaScript objects.  \n这是我们早期的一个演示，但是使用了 ThreeJS 数据类型而不是普通的 JavaScript 对象。\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/three.vector-and-three.color)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313110516.png)\n\n---\n### THREE.Geometry  几何图形\nThreeJS uses a [THREE.Geometry](https://threejs.org/docs/#api/en/core/Geometry) class to hold `vertices` (vertex positions) and `faces` (i.e. indices).  \nThreeJS使用THREE.Geometry类来保存 `vertices` （顶点位置）和 `faces` （即索引）。\n\nSome of the built-in geometries are shown below, such as:  \n一些内置几何图形如下所示，例如：\n\n-   [THREE.PlaneGeometry](https://threejs.org/docs/#api/en/geometries/PlaneGeometry)\n-   [THREE.BoxGeometry](https://threejs.org/docs/#api/en/geometries/BoxGeometry)\n-   [THREE.SphereGeometry](https://threejs.org/docs/#api/en/geometries/SphereGeometry)\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/three.geometry)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313111038.png)\n\n---\n### THREE.Material 材料\nThreeJS uses a [THREE.Material](https://threejs.org/docs/#api/en/materials/Material) class to hold surface properties such as color, metalness, etc.  \nThreeJS使用THREE.material类来保存表面属性，如颜色、金属度等。\n\nSome of the built-in materials are shown below, such as:  \n一些内置材料如下所示，例如：\n\n-   [THREE.MeshBasicMaterial](https://threejs.org/docs/#api/en/materials/MeshBasicMaterial)\n-   [THREE.MeshNormalMaterial](https://threejs.org/docs/#api/en/materials/MeshNormalMaterial)\n-   [THREE.MeshPhongMaterial](https://threejs.org/docs/#api/en/materials/MeshPhongMaterial)\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/three.material)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313111513.png)\n\n---\n### THREE.Mesh 组合\nYou can crete a [THREE.Mesh](https://threejs.org/docs/#api/en/objects/Mesh) by combining a `THREE.Geometry` and `THREE.Material`.  \n您可以通过组合 `THREE.Geometry` 和 `THREE.Material` 来创建THREE.Mesh。\n\n\u003e _Hint:_ For performance, it's better to create one instance of `THREE.Geometry` and re-use it for many meshes.  \n\u003e 提示：为了提高性能，最好创建 `THREE.Geometry` 的一个实例，然后将其重用于多个网格。\n\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313111707.png)\n\n---\n \n###   Position 位置\nAll objects in ThreeJS have a `position`, which is a [THREE.Vector3](https://threejs.org/docs/#api/en/math/Vector3) that you can use to translate the object in space.  \nThreeJS 中的所有对象都有一个 `position` ，它是一个 THREE.Vector3，您可以使用它在空间中平移对象。\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/3d-transformations/position)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313113338.png)\n\n\u003e 还可以控制缩放大小可简写 （具体可查阅文档）\n---\n###  Rotation 旋转\nObjects also have a `rotation`, which is a [THREE.Euler](https://threejs.org/docs/#api/en/math/Euler) that you can use to rotate an object.  \n对象还有一个 `rotation` ，它是一个THREE.Euler，可用于旋转对象。\n\nThe class is very similar to `THREE.Vector3`, but values are in radians.  \n该类与 `THREE.Vector3` 非常相似，但值以弧度为单位。\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/3d-transformations/rotation)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313113532.png)\n\n---\n### Scale 缩放\nObjects also have a `scale`, which is a [THREE.Vector3](https://threejs.org/docs/#api/en/math/Vector3) that stretches the mesh along the X, Y and Z axes.  \n对象还有一个 `scale` ，它是一个 THREE.Vector3，用于沿着 X、Y 和 Z 轴拉伸网格。\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/3d-transformations/scale)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313114051.png)\n\n---\n### THREE.Scene 场景\nThe core of any ThreeJS application is its scenegraph, [THREE.Scene](https://threejs.org/docs/#api/en/scenes/Scene).  \n任何ThreeJS应用程序的核心都是它的场景图THREE.Scene。\n\nThis container is what holds multiple meshes, lights, and other 3D objects.  \n此容器用于保存多个网格、灯光和其他3D 对象。\n[WebGL \u0026 GLSL — A Primer --- WebGL \u0026 GLSL—入门 (mattdesl.github.io)](https://mattdesl.github.io/workshop-webgl-glsl/#/threejs-basics/three.scene)\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230313114147.png)\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebGL/WebGL":{"title":"WebGL","content":"`button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[WebGL]]**\n\t- [[canvas]]\n\t- [[CheatSheet]]\n\t- [[d3js]]\n\t- [[ThreeJs]]\n\n%% End Waypoint %%\n\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebGL/canvas":{"title":"canvas","content":"\n#### 📕 [canvas-sketch](https://github.com/mattdesl/canvas-sketch/blob/master/README.md) → Documentation\n\n---\n\n### [](https://github.com/mattdesl/canvas-sketch/blob/master/docs/README.md#about)About\n\n`canvas-sketch` is a loose collection of tools, modules and resources for creating generative art in JavaScript and the browser using the `\u003ccanvas\u003e` tag. It is designed to help create artworks and images with code, randomness, algorithms, and emergent systems.  \n`canvas-sketch` 是一个松散的工具，模块和资源的集合，用于使用 `\u003ccanvas\u003e` 标签在JavaScript和浏览器中创建生成艺术。它旨在帮助创建具有代码，随机性，算法和紧急系统的艺术品和图像。\n\nYou can use `canvas-sketch` to export high-resolution PNG for Giclée prints, render image sequences for GIF and MP4 loops, generate SVG files for mechanical pen plotters (like AxiDraw), automatically git hash your artworks for long-term archiving, and much more.  \n您可以使用 `canvas-sketch` 导出高分辨率PNG用于Giclée打印，渲染GIF和MP4循环的图像序列，为机械笔绘图仪（如AxiDraw）生成SVG文件，自动git散列您的艺术作品以供长期存档等等。\n\nThese tools can be used on their own, or combined with your favourite graphics library like ThreeJS, P5.js, Pixi, Regl, D3, etc.  \n这些工具可以单独使用，也可以与您最喜欢的图形库（如ThreeJS，P5.js，Pixi，Regl，D3等）结合使用。\n\n### [](https://github.com/mattdesl/canvas-sketch/blob/master/docs/README.md#api-docs)API Docs\n\n-   [`canvas-sketch` — API Docs  `canvas-sketch` - API文档](https://github.com/mattdesl/canvas-sketch/blob/master/docs/api.md)\n    \n-   [`canvas-sketch-cli` — CLI Docs  `canvas-sketch-cli` - CLI文档](https://github.com/mattdesl/canvas-sketch/blob/master/docs/cli.md)\n    \n\n### [](https://github.com/mattdesl/canvas-sketch/blob/master/docs/README.md#guides)Guides\n\n-   [Installing and Using `` canvas-sketch 安装和使用 `canvas-sketch` ``](https://github.com/mattdesl/canvas-sketch/blob/master/docs/installation.md) \n    \n-   [A \"Hello, World\" Sketch  \n    一个“Hello，World”的草图](https://github.com/mattdesl/canvas-sketch/blob/master/docs/hello-world.md)\n    \n-   [Animated Sketches](https://github.com/mattdesl/canvas-sketch/blob/master/docs/animated-sketches.md)\n    \n-   [Hot Reloading](https://github.com/mattdesl/canvas-sketch/blob/master/docs/hot-reloading.md)\n    \n-   [Developing with Physical Units (inches, centimeters)  \n    使用物理单位（英寸、厘米）显影](https://github.com/mattdesl/canvas-sketch/blob/master/docs/physical-units.md)\n    \n    -   [Paper Size Presets  纸张大小预设](https://github.com/mattdesl/canvas-sketch/blob/master/docs/physical-units.md#paper-size-presets)\n        \n    -   [Bleeds \u0026 Safe Zones  \n        出血和安全区](https://github.com/mattdesl/canvas-sketch/blob/master/docs/physical-units.md#bleeds--safe-zones)\n        \n-   [Exporting Artwork to PNG, GIF, SVG, MP4 and other files  \n    将图稿导出为PNG、GIF、SVG、MP4和其他文件](https://github.com/mattdesl/canvas-sketch/blob/master/docs/exporting-artwork.md)\n    \n    -   [Exporting Animations  导出动画](https://github.com/mattdesl/canvas-sketch/blob/master/docs/exporting-artwork.md#exporting-animations)\n        \n    -   [Exporting Other File Types  \n        导出其他文件类型](https://github.com/mattdesl/canvas-sketch/blob/master/docs/exporting-artwork.md#exporting-other-file-types)\n        \n    -   [Running `canvas-sketch` in Node.js for Very Large Prints  \n        在Node.js中运行 `canvas-sketch` 以进行超大打印](https://github.com/mattdesl/canvas-sketch/blob/master/docs/exporting-artwork.md#node-export)\n        \n    -   [Automatic Git Hashing for Long-Term Archiving  \n        用于长期存档的自动Git哈希](https://github.com/mattdesl/canvas-sketch/blob/master/docs/exporting-artwork.md#git-commit--file-hashing)\n        \n-   [WebGL, GLSL, Three.js and More  \n    WebGL、GLSL、Three.js和更多](https://github.com/mattdesl/canvas-sketch/blob/master/docs/webgl.md)\n    \n    -   [GLSL Files](https://github.com/mattdesl/canvas-sketch/blob/master/docs/webgl.md#glsl-files)\n        \n    -   [Using glslify for modular GLSL  \n        使用glslify实现模块化GLSL](https://github.com/mattdesl/canvas-sketch/blob/master/docs/webgl.md#using-glslify-for-modular-glsl)\n        \n    -   [Live Shader Coding  实时着色器编码](https://github.com/mattdesl/canvas-sketch/blob/master/docs/webgl.md#live-shader-coding)\n        \n    -   [Using Three.js, P5.js, and Other Libraries  \n        使用Three.js、P5.js和其他库](https://github.com/mattdesl/canvas-sketch/blob/master/docs/webgl.md#threejs)\n        \n-   [Other Topics](https://github.com/mattdesl/canvas-sketch/blob/master/docs/other-topics.md)\n    \n    -   [Utilities for Randomness, Math, Geometry, Color, etc.  \n        随机性、数学、几何、颜色等实用程序。](https://github.com/mattdesl/canvas-sketch/blob/master/docs/other-topics.md#utilities-for-randomness-math-geometry-color-etc)\n        \n    -   [Developing Pen Plotter Artwork  \n        笔式绘图仪插图的开发](https://github.com/mattdesl/canvas-sketch/blob/master/docs/other-topics.md#developing-pen-plotter-artwork)\n        \n    -   [Async Sketches: Loading Images \u0026 Other Assets  \n        异步草图：加载图像和其他资产](https://github.com/mattdesl/canvas-sketch/blob/master/docs/other-topics.md#async-sketches-loading-images--other-assets)\n        \n    -   [Building for Web, Installations \u0026 VJ  \n        为Web、装置和VJ构建](https://github.com/mattdesl/canvas-sketch/blob/master/docs/other-topics.md#building-for-web-installations--vj)\n        \n-   [Troubleshooting](https://github.com/mattdesl/canvas-sketch/blob/master/docs/troubleshooting.md)\n    \n\n### [](https://github.com/mattdesl/canvas-sketch/blob/master/docs/README.md#contributing)Contributing\n\nIf you are interested in helping develop or maintain `canvas-sketch` ecosystem:  \n如果您有兴趣帮助开发或维护 `canvas-sketch` 生态系统：\n\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebGL/d3js":{"title":"d3js","content":"\n## ✍内容\n\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebStorage/WebStorage":{"title":"WebStorage","content":"`button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[WebStorage]]**\n\t- [[WebStorageAPIs]]\n\n%% End Waypoint %%\n\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/WebStorage/WebStorageAPIs":{"title":"WebStorageAPIs","content":"\n## ✍内容\n## APIs for Browser Data Storage\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230309162425.png)\n\n## Data Storage APIs Comparison\n![](https://wcc-image.oss-cn-guangzhou.aliyuncs.com/image/20230309165306.png)\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/catalogue":{"title":"catalogue","content":"[[Antd/Antd]]\n[[React/React扩展]]\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/git/GIT":{"title":"GIT","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\ntitle: Git\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[git]]**\n\t- [[git相关]]\n\t- [[GitHub Copilot 键盘快捷键]]\n\t- [[Github学生开发包]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/git/GitHub-Copilot-%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE":{"title":"🪴 GitHub Copilot 键盘快捷键.","content":"-   接受内联代码建议 -`Tab`\n-   关闭内联代码建议 - `Esc`\n-   显示下一个建议 - `Alt + ] 或 Option (⌥) + ]`\n-   显示上一个建议 - `Alt + [ 或 Option (⌥) + [`\n-   触发建议 - `Alt + \\ 或 Option (⌥) + \\`\n-   在单独的窗格中打开十个建议 — `Ctrl + Enter`","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/git/Github%E5%AD%A6%E7%94%9F%E5%BC%80%E5%8F%91%E5%8C%85":{"title":"Github学生开发包","content":"## Github学生开发包是什么？\n\n官方的首页（[GitHub Student Developer Pack](https://link.zhihu.com/?target=https%3A//education.github.com/pack)）是这么说的：\n\n\u003e Learn to ship software like a pro. There's no substitute for hands-on experience. But for most students, real world tools can be cost-prohibitive. That's why we created the GitHub Student Developer Pack with some of our partners and friends\n\n这几种开发工具资源一般都是开发公司与Github官方合作的项目，能供给一个学生免费使用这些资源一段时间，或一定量。\n\n那么，都有哪些资源可供我们申请Github学生计划后使用呢？下面将一一介绍：\n\n### next.tech\n\n![](https://pic3.zhimg.com/80/v2-89d124ce1f980d557369a218e53432c2_720w.webp)\n\n在线学习软件技术。**Github学生包可以提供12个月的互动课程和云计算环境的免费访问。**\n\n\u003e Free access to all interactive courses and cloud computing environments for 12 months.\n\n**使用方法：**进入[该网页](https://link.zhihu.com/?target=https%3A//next.tech/github-students) 点击\"Sign in with Github\"登录\n\n### educative\n\n![](https://pic4.zhimg.com/80/v2-a230719b31c2ed094b0928014e7d2d87_720w.webp)\n\n\u003e Get 6 free months of 60+ courses covering in-demand topics like Web Development, Python, Java, and Machine Learning.\n\n[educative](https://link.zhihu.com/?target=https%3A//www.educative.io/) 是国外提供计算机相关教学的网站，提供基于文字的课程，适合计算机专业学生练习。**Github为学生用户提供了6个月的免费访问**\n\n**使用方法：**绑定Github账户\n\n### datacamp\n\n![](https://pic3.zhimg.com/80/v2-2dcd9e1560df09571bb832964fc3ecb6_720w.webp)\n\n[datacamp](https://link.zhihu.com/?target=https%3A//www.datacamp.com/) 主要用于数据科学方面的学习，也就是偏向R、Python及SQL语言的相关课程。**Github会为学生提供3个月的免费订阅期**\n\n\u003e Free 3-month individual subscription for students.\n\n**使用方法：**绑定Github账户\n\n### FrontendMasters\n\n![](https://pic2.zhimg.com/80/v2-25b7d1cf6eb11ec58b8d5c27a05a0471_720w.webp)\n\n[FrontendMasters](https://link.zhihu.com/?target=https%3A//frontendmasters.com/) 属于前端学习类的网站，用于学习Javascript、Node.js及前端工程。**Github会为学生提供6个月的免费访问。**\n\n\u003e Free 6-months access to all courses and workshops.\n\n**使用方法**：绑定Github账户\n\n![](https://pic3.zhimg.com/80/v2-e4745d78a773d632d1f2685beaaef74a_720w.webp)\n\nGithub自己家的校园专家计划，**可以在学生阶段申请进入他们家的计划。**\n\n\u003e Apply to become part of the program while you’re a student.\n\n### One Month\n\n![](https://pic3.zhimg.com/80/v2-e509c1b0ac0ec2e2af7cff93a4f4ed1e_720w.webp)\n\n是一家Python和前端的学习网站，**可以获得30天的免费订阅。**\n\n\u003e Free 30-day One Month subscription.\n\n**使用方法：**进入入口网站[GitHub Students Offer | One Month](https://link.zhihu.com/?target=https%3A//onemonth.com/github/students%23%3A~%3Atext%3DOne%2520Month%2520for%2520GitHub%2520students%2520A%2520special%2520offer%2Cwhat%2520you%2520need%2520to%2520learn%2520to%2520code%2520quickly) ，使用Github账号登陆后，按照网页指示操作\n\n### Covalence\n\n![](https://pic2.zhimg.com/80/v2-5ae15be3104ffffdc0adb6ea8d3c0151_720w.webp)\n\n学习全栈web开发的一个网站，**Github学生包里包含前端基础的课程。**\n\n\u003e Complimentary Front End Fundamentals Course.\n\n**使用方法：**进入这个网页[Covalence + GitHub Student Developer Pack](https://link.zhihu.com/?target=https%3A//covalence.io/lp/github-students/) ，点击\"Sign in with github\"登录\n\n### InterviewCake\n\n![](https://pic1.zhimg.com/80/v2-c22917820c4d5665738256a2ed6e7f48_720w.webp)\n\n通过练习问题，数据结构和算法参考页让代码编程题变得更加简单。**Github学生包可以提供3周的全量课程访问。**\n\n\u003e Access to the full coding interview prep course for 3 weeks.\n\n**使用方法：**进入入口网站[GitHub Student Offer | Interview Cake](https://link.zhihu.com/?target=https%3A//www.interviewcake.com/github-students) ，使用Github账号登陆后，按照网页指示操作\n\n### GoRails\n\n![](https://pic3.zhimg.com/80/v2-2e418f6c6c63791ae6e72a6829d47ac6_720w.webp)\n\nWeb开发者的指导课，可以学习Ruby, Rails, Javascript, Turbolinks, Stimulus.js, Vue.js等课程。**Github学生包可以提供12个月的视频和课程访问。**\n\n\u003e Free access to all videos and lessons for 12 months.\n\n**使用方法：**进入入口网页[Github Students Sign Up - GoRails](https://link.zhihu.com/?target=https%3A//gorails.com/github-students) ，使用Github账号登陆后，按照网页指示操作\n\n### Thinkful\n\n![](https://pic3.zhimg.com/80/v2-159246f11cfe4a6835aac99dfd5cfb42_720w.webp)\n\n通过Thinkful学习web开发课程。**Github学生包可以提供1个月的web开发课程访问。**\n\n\u003e 1 month of access to a web development course.\n\n**使用方法：**进入入口网页[Claim your GitHub Student Developer Pack · Thinkful](https://link.zhihu.com/?target=https%3A//www.thinkful.com/github-student-developer-pack/) ，使用Github账号登陆后，按照网页指示操作\n\n### SymfonyCasts\n\n![](https://pic3.zhimg.com/80/v2-00c72523d656ee7623488d409e729f56_720w.webp)\n\n通过视频教学和编码挑战学习PHP和Symfony，**Github学生包可以提供3个月的免费订阅。**\n\n\u003e Free 3-month subscription for students.\n\n### Yakindu\n\n![](https://pic3.zhimg.com/80/v2-257ac8744938cfa49f159257b835959e_720w.webp)\n\n一个集成的建模环境，用于规范和开发基于状态机概念的响应式、事件驱动的系统。Github学生包可以提供1年的免费Yakindu专业版订阅。\n\n\u003e Yakindu Professional Edition free for 1 year.","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/DigitalGarden/git/git%E7%9B%B8%E5%85%B3":{"title":"git相关","content":"![[Pasted image 20230128180704.png]]\n\n```ad-note\ntitle:查看当前用户名和修改\n1. 查看当前登录账号：\ngit config user.name\n\n2. 查看当前登录邮箱：\ngit config user.email\n\n3. 修改用户名和邮箱：\ngit config --global user.name \"Your_username\"\ngit config --global user.email \"Your_email\"\n\n```\n```ad-note\ntitle:在命令行上创建新的存储库\necho \"# IndividualExerciseProgram\" \u003e\u003e README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/chenchen2692/IndividualExerciseProgram.git\ngit push -u origin main\n```\n\n\n\n```ad-note\ntitle:从命令行推送现有存储库\ngit remote add origin https://github.com/chenchen2692/IndividualExerciseProgram.git\ngit branch -M main\ngit push -u origin main\n```\n\n## Git 分支命令\n\n-   git branch– 显示 Git 存储库中[本地分支的列表](https://www.gitkraken.com/learn/git/problems/git-branch-list)。\n-   git branch -a– 在 Git 存储库中显示本地分支和远程分支的列表。\n-   git branch -c– 复制一个 Git 分支。\n-   git branch -d \u003cbranch-name\u003e– [删除本地 GIT 分支](https://www.gitkraken.com/learn/git/problems/delete-local-git-branch)。如果您尝试删除的分支具有未合并的更改，则此命令将不起作用。\n-   git branch -D \u003cbranch-name\u003e– 删除具有未合并更改的本地 Git 分支。\n-   git branch -m \u003cbranch-name\u003e \u003cnew-branch-name\u003e– [重命名 GIT 分支](https://www.gitkraken.com/learn/git/problems/rename-git-branch)。\n-   git branch -r– 显示 Git 存储库中远程分支的列表。\n-   git push \u003cremote\u003e --delete \u003cremote-branch-name\u003e– [删除远程 GIT 分支](https://www.gitkraken.com/learn/git/problems/delete-remote-git-branch)。\n-   git push --set-upstream \u003cremote\u003e \u003cbranch\u003e– [设置上游分支](https://www.gitkraken.com/learn/git/problems/git-set-upstream-branch)。运行此命令会将本地分支推送到新的远程分支。\n\n---\n\n## Git 签出命令\n\n-   git checkout \u003cbranch-name\u003e– [切换到不同的 GIT 分支](https://www.gitkraken.com/learn/git/problems/switch-git-branch)。\n-   git checkout -b \u003cbranch-name\u003e– [创建一个新分支](https://www.gitkraken.com/learn/git/problems/create-git-branch)并切换到它。\n-   git checkout -b \u003cbranch-name\u003e\u003cremote-name\u003e/\u003cbranch-name\u003e– 从远程 Git 分支创建一个本地分支并签出该分支。\n-   git checkout \u003ccommit hash\u003e– [签出以前的 GIT 提交](https://www.gitkraken.com/learn/git/problems/git-checkout-commit)。\n-   git checkout \u003ctag name\u003e– 签出处于分离 HEAD 状态的 Git 标签。\n-   git checkout -b \u003cbranch-name\u003e\u003ctag-name\u003e– [签出 GIT 标签](https://www.gitkraken.com/learn/git/problems/git-checkout-tag)作为分支。\n\n---\n\n## Git 樱桃选择命令\n\n-   git cherry-pick [insert commit reference]– [将提交的更改应用到](https://www.gitkraken.com/learn/git/cherry-pick#cherry-pick-example-cli)不同的分支上。\n\n---\n\n## Git 克隆命令\n\n-   git clone \u003crepository-url\u003e– 克隆指定的远程存储库。请参阅 [GIT-SCM 的远程 URL 格式最佳实践](https://git-scm.com/docs/git-clone#_git_urls)。\n-   git clone \u003crepository-url\u003e \u003cdirectory-name\u003e– 克隆存储库并命名本地目录。\n-   git clone \u003crepository-url\u003e --origin \u003cname\u003e– [克隆存储库](https://www.gitkraken.com/learn/git/git-clone)并命名远程 （）。如果您不想命名远程，Git 将提供默认名称。`\u003cname\u003e``origin`\n-   git clone \u003crepository-url\u003e --branch \u003cbranch-name\u003e– 克隆存储库并签出特定分支。\n-   git clone \u003crepository-url\u003e --depth \u003cdepth\u003e– 克隆具有指定提交次数的存储库 （）。`\u003cdepth\u003e`\n-   git clone \u003crepository-url\u003e --no-tags– 克隆存储库而不复制存储库的标记。\n\n---\n\n## Git 提交命令\n\n-   git status– 显示暂存目录中的文件列表以及随附的文件状态。\n-   git add– 暂存文件更改。使用关联的文件名运行此命令会将文件更改暂存到暂存目录。\n-   git commit– 将更改保存到您的 Git 存储库。使用关联的文件名运行此命令会将文件更改保存到存储库。\n-   git commit -a– 将工作目录中所有修改和删除的文件添加到当前提交中。\n-   git commit --amend– [修改 GIT 提交](https://www.gitkraken.com/learn/git/problems/git-commit-amend)。通过在命令后添加引号消息来编辑 Git 提交消息。\n-   git commit -m– 添加 Git 提交消息。在命令后面用引号引起来添加消息。\n\n---\n\n## Git 配置命令\n\n-   `git config --global`– 自定义存储在主目录中的配置，并且可以覆盖 Git 配置系统设置。\n-   `git config --email`– 设置与您的 Git 提交和其他 Git 操作关联的电子邮件。\n-   `git config --system`– 自定义操作系统的配置设置。\n-   `git --config user.name`– 设置与您的 Git 提交和其他 Git 操作关联的用户名。\n-   `git config --list`– 查看所有 Git 配置设置，包括本地、全局和系统级别。\n-   `git config --local`– 自定义特定于 Git 存储库的设置，并在全局和系统级别覆盖 Git 配置。\n\n---\n\n## Git 合并命令\n\n-   git merge– 将两个或多个开发历史组合在一起。与 fetch 结合使用，这会将从远程分支获取的历史记录合并到当前签出的本地分支中。\n-   git merge \u003cbranch-name\u003e– [将一个分支中的更改合并](https://www.gitkraken.com/learn/git/problems/merge-git-branch)到您当前已签出的分支中。\n-   git merge --abort– 中止合并过程并将项目的状态还原到尝试合并之前的状态。当发生冲突时，这可以作为故障保护。\n-   git merge --continue– [在解决合并冲突后](https://www.gitkraken.com/learn/git/tutorials/how-to-resolve-merge-conflict-in-git)，尝试完成因文件冲突而停止的合并。\n-   git merge --squash– 将分支中的所有更改合并到单个提交中，而不是将它们保留为单个提交。\n-   git merge --no-commit– 将分支合并到当前分支中，但不要进行新的提交。\n-   git merge --no-ff– 创建合并提交，而不是尝试快进。\n\n---\n\n## Git 拉取命令\n\n-   git pull– 这将执行后跟 ，并允许您从另一个存储库或本地分支获取并与之集成。`git fetch``git merge FETCH_HEAD`\n-   git pull --quiet– 在 和 之后禁止输出文本。`git fetch``git merge`\n-   git pull --verbose– 在两者和之后展开输出文本。`git fetch``git merge`\n\n#### 与合并相关的 Git 拉取命令\n\n-   git pull --squash– 将分支中的所有更改合并到单个提交中，而不是保留单个提交。\n-   git pull --no-commit– 将当前签出的分支与远程上游分支合并。\n-   git pull --no-ff– 在所有情况下创建合并提交，即使合并可以作为快进解析。\n\n#### 与 fetch 相关的 Git pull 命令\n\n-   git pull --all– 获取所有遥控器。\n-   git pull --depth=\u003cdepth\u003e– 获取有限数量的提交。\n-   git pull --dry-run– 显示无需实际更改存储库即可完成的操作。\n-   git pull --prune– 删除远程上不再存在的所有远程引用。\n-   git pull --no-tags– 不要获取标签。\n\n---\n\n## Git 推送命令\n\n-   git push– 将当前签出的分支推送到默认远程。`origin`\n-   git push \u003cremote\u003e\u003cbranch\u003e– 将指定的分支及其所有必要的提交推送到目标远程仓库。\n-   git push \u003cremote\u003e --force– 在非快进合并中强制 Git 推送。此选项强制更新远程引用，即使该远程引用不是本地引用的祖先。这可能会导致远程仓库丢失提交，因此请谨慎使用。\n-   git push \u003cremote\u003e --all– 将所有本地分支推送到指定的远程。\n-   git push \u003cremote\u003e --tags– 将所有本地标签推送到指定的远程。使用 时不会自动发送标记。`--all`\n\n---\n\n## Git 变基命令\n\n-   git rebase \u003ctarget branch name\u003e– 将当前签出的分支重新定位到目标分支。这会从源分支重写提交并将其应用于目标分支的顶部。\n-   git rebase --continue– 解决文件之间的冲突后继续执行 [GIT 变基](https://www.gitkraken.com/learn/git/git-rebase)。\n-   git rebase --skip– 跳过导致冲突的操作以继续执行 Git 变基。\n-   git rebase --abort– 取消 Git 变基。您的分支将恢复到您开始变基之前的状态。\n-   git rebase \u003ctarget branch name\u003e -i– 从当前签出的分支启动[交互式变基](https://www.gitkraken.com/learn/git/problems/git-interactive-rebase)到目标分支。\n\n---\n\n## Git 存储命令\n\n-   git stash– 创建一个包含本地修改的存储，并恢复到头部提交。\n-   git stash list– 显示存储库中所有存储的列表。\n-   git stash show– 查看您最近藏匿的内容。这会将存储的更改显示为存储内容与创建存储时提交的提交之间的差异。\n-   git stash drop \u003cstash\u003e– 从存储库的存储列表中删除存储。\n-   git stash pop \u003cstash\u003e– 将存储应用到当前工作树的顶部，并将其从存储列表中删除。\n-   git stash apply \u003cstash\u003e– 在当前工作树的顶部应用一个藏匿处。该存储不会从您的存储列表中删除。\n-   git stash clear– 从存储库中删除所有藏匿处。","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/ProjectNotes/%E4%BB%BB%E5%8A%A1%E4%B8%AD%E5%BF%83%E5%8F%91%E5%B8%83%E4%B8%8E%E9%A2%84%E8%A7%88":{"title":"任务中心发布与预览","content":"\n\n```ad-question\ntitle: antd的datepicker出现date.clone is not a function\n浏览器中存在redux的缓存，需要对缓存进行monet格式处理，并使用扩展运算符使数据中的文字保持不变\n```\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/ProjectNotes/%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B":{"title":"项目任务发布流程","content":"\n## ✍内容\n## 进度 \n\u003cprogress  value=\"1\" max=\"100\"\u003e\n    \u003c/progress\u003e\n## 3 月 16 日\n\u003e [!abstract]\n\u003e 上午合约初始化\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/ProjectNotes/%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1%E5%8F%91%E5%B8%83%E7%AE%A1%E7%90%86":{"title":"项目任务发布管理","content":"\u003e  #开始时间 2月8日  #预计结束时间 2月15日 #实际结束时间 2月14日\n\n\n![[../Diary/Day/2023-02-14]]","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/ProjectNotes/%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1%E5%8F%91%E5%B8%83%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2":{"title":"项目任务发布静态页面","content":"\n## ✍内容\n\u003e\u003cfont color=\"#00b0f0\"\u003e开始时间 🕰2023-3-1\u003c/font\u003e\n\n\u003cfont color=\"#7030a0\"\u003e当前进度：\u003c/font\u003e\n\u003cprogress  value=\"0\" max=\"100\"\u003e\n    \u003c/progress\u003e\n首先要获取每个输入框的值根据 id 存到相应的位置。\n\n\n","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/ProjectNotes/ProjectNotes":{"title":"ProjectNotes","content":"---\ncssclass: kanban gridlist noyaml\ntitle: ProjectNotes\ntag: moc\ntags: 目录\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[ProjectNotes]]**\n\t- [[任务中心发布与预览]]\n\t- [[项目任务发布管理]]\n\t- [[项目任务发布静态页面]]\n\t- [[项目任务发布流程]]\n\t- [[ivs]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/ProjectNotes/ivs":{"title":"ivx","content":"\n## ✍内容\n\u003e组应用进行后台数据统一管理，例如前台是小程序，后台是 pc 端数据库多端操作，双屏互动\n缺点：不能实时预览\n低代码开发 (Low-code development) 是一种通过使用可视化的建模工具和预定义组件，使软件开发人员更快速、更高效地创建应用程序。低代码开发的目标是减少应用程序开发所需的手动编码，提高开发效率，减少错误，并确保在开发周期内的成本和时间上的节省。那么，让我们来探讨一下低代码开发的优点和缺点吧。\n\n\n## 优缺点\n_**低代码开发的优点：**_\n\n1.  **提高开发效率：** 低代码开发可以快速提供所需的组件和界面来开发应用程序。这能够积极地推动项目的实现速度，同时减少时间、成本和资源的使用，确保项目能够按时完成。\n    \n2.  **降低技能门槛：** 低代码开发平台使非专业的开发人员也能够创建应用程序，因为开发人员不必花费大量时间学习编程语言。通过低代码开发平台，即使在没有编程经验的情况下，开发人员也可以创建高度可用的应用程序。\n    \n3.  **易于维护和测试：** 一旦应用程序完成并在生产中使用，维护它就会变得简单易行。由于使用了可视化的建模工具和预定义组件，因此更容易发现问题和解决问题。另外，在低代码开发平台中，测试也相对容易，因为模块化和组件化的设计使得测试变得更具可操作性。\n    \n4.  **提高灵活性：** 低代码开发平台使应用程序的定制和重构变得简单，因此应用程序可以更容易地进行修改和升级。此外，模块化和组件化的设计使得多人协作开发变得更加容易。\n    \n5.  **减少错误概率：** 低代码开发平台通过减少编程中的错误概率来保证代码的质量和可靠性。由于开发人员不必花费大量时间编写和测试代码，因此错误的概率会降低，从而确保应用程序的质量和性能。\n    \n6.  **提高安全性：** 低代码开发平台通常具有针对应用程序的安全性能可视化图形界面，更容易理解和实现应用程序的安全因素，从而提高了应用程序的安全性。\n    \n7.  **加速数字转型：** 低代码开发技术可以帮助传统企业快速实现数字化转型，更好地适应数字化时代的挑战。企业在过渡期中可以更加快速、灵活的部署和切换业务系统。\n    \n\n_**低代码开发的缺点：**_\n\n1.  **限制：** 低代码开发有一些极限。最常见的是它不能解决所有的业务问题，有一些复杂的业务场景是需要编写标准代码的。同时，低代码开发平台可能会受到抽象层的限制，导致在某些情况下无法执行所需的操作。\n    \n2.  **不灵活：** 低代码开发平台往往只适用于特定的业务领域。这意味着，如果企业需要针对特定的业务需求进行大量自定义开发，那么低代码开发平台可能会变得相对无用。\n    \n3.  **可扩展性受限：** 低代码开发可能会受到平台本身的限制，一些基础设施（如数据库、文件存储等）的扩展可能受到限制。\n    \n4.  **可控程度低：** 低代码开发依赖于平台提供的组件和模板，这可能限制了开发者对应用程序的可控程度。\n    \n5.  **依赖第三方平台：** 低代码开发需要依赖第三方平台服务，如云托管、API套件、微服务等等，这可能会成为一些企业推出低代码开发的阻碍。\n    \n6.  **维护可并不容易：** 在低代码平台中，大量的组件和自定义功能呈现在同一平台上。这意味着各个功能的修改、维护和更新都需要耐心和时间。\n    \n\n结论：\n\n低代码开发采用可视化的建模工具和预定义组件来简化应用程序开发，提高开发效率，降低技能门槛。低代码开发也可以提高应用程序的可维护性和测试性，并且使其更加灵活。但是，低代码开发也有一些限制，可能受到平台本身的限制，对某些应用需要标准代码。在大量组件和自定义功能呈现在同一平台上的情况下，低代码开发的维护也是一个挑战。因此，低代码开发适用于构建一些小型简单应用，同时可以加速企业数字转型，但在处理复杂业务时，则需要更为专业的编码人员进行开发。\n\n## 为什么你前面说低代码的优势的易于维护，缺点却说维护并不容易\n\n非常抱歉，这可能是我的回答表述不严谨导致的歧义。让我更清楚地解释一下。\n\n首先，低代码开发的确可以提高应用程序的可维护性。使用可视化的建模工具和预定义组件来构建应用程序，使得维护代码变得更加容易。而且，在低代码开发平台中，模块化和组件化的设计使得维护代码更具可操作性。\n\n然而，低代码开发同时具有大量的组件和自定义功能呈现在同一平台上的特点。因此，在应用程序开发中需要不断地更新和维护这些组件和功能，这可能会花费更多的时间和精力。另外，一些特定的问题可能需要开发人员通过编写标准代码进行修复，这也增加了维护的复杂性。\n\n综上所述，低代码开发提高了应用程序的可维护性和测试性，但是对于处理复杂和大型项目，维护仍然需要更专业的编码人员进行开发和操作。\n\n\n_**低代码开发的优点：**_\n\n8.  **降低风险：** 低代码开发平台通常会带有预先定义的安全协议和代码规范，这有助于减少编程中的安全漏洞和错误。\n    \n9.  **提高用户满意度：** 低代码开发平台通常可以快速实现应用程序的自定义，可以更好地满足客户的需求，并且能够更快速地提供新的功能。\n    \n10.  **减少技术债务：** 低代码开发所带来的模块化和组件化设计可以帮助企业减少以往过多的技术债务，从而达到更好的代码可维护性，同时新代码的正确性和可扩展性也能得到保障。\n    \n\n_**低代码开发的缺点：**_\n\n7.  **限制软件架构的选取：** 由于低代码开发采用了特定的架构原则，因此可能会限制企业在软件架构的选择方面的自主性。\n    \n8.  **不稳定性：** 有时新的开发项目可能与低代码平台之前版本中使用的方法和组件不兼容，因此可能出现意想不到的错误和其他不稳定性问题。\n    \n9.  **安全隐患：** 很多时候，开发人员因为没有深入了解系统或者因为时间和预算的原因会使用使用不安全的组件或API，从而给应用程序的安全带来潜在风险。\n    \n\n总之，低代码开发平台的优点是可以提高开发效率，降低技能门槛，提高应用程序的可维护性和测试性，同时支持企业数字化转型，而缺点则包括对于复杂架构的限制，维护的困难，依赖第三方平台服务的风险等等。因此，企业需要权衡低代码开发平台的优缺点，结合实际情况，选择最适合其业务需求的解决方案。\n\n## 如何将低代码开发和 ai 结合起来\n\n低代码开发和人工智能（AI）都是当前最热门的技术趋势之一，其结合使用可以为企业带来许多好处。下面我将分享一些思路，希望能够帮助您更好地理解如何将低代码开发和AI结合起来。\n\n1.  **使用AI增强开发人员工作效率：** 低代码开发本身就是为了提高开发效率，而AI可以进一步提高这个效率。例如，利用AI可以更快速地生成代码，并自动检测和解决一些常见的代码问题，使开发人员专注于业务逻辑和实现。\n    \n2.  **使用低代码平台来构建AI应用：** 基于低代码平台，企业可以快速构建智能应用，并加入AI技术，打造出更加先进、适合当前市场需求和客户需求的产品。\n    \n3.  **自动化和交互设计：** 利用AI提供的自动化方式和可视化工具，为低代码开发平台提供交互式设计，例如构建用户界面内置的自定义交互元素、图表、动态视图、组件等等。\n    \n4.  **利用AI进行预测性分析：** 利用AI技术可以对海量数据进行深入分析，从而为企业做出准确预测并指导业务发展方向，同时为低代码开发平台的功能更新提供基础支持。\n    \n5.  **人机协作：** 低代码开发和AI技术的结合能够营造出人机协作的好处，例如开发任务分配，代码测试、debugging，因此开发过程更高效和可靠。\n    \n\n总之，将低代码开发和AI技术结合起来，能够帮助企业更快速、高效地构建出智能应用，更好地应对客户需求和市场竞争的挑战。这必将带来企业未来发展的良好机遇。","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/Record/Record":{"title":"Record","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[Record]]**\n\t- **[[模板]]**\n\t- **[[Diary]]**\n\t- **[[DigitalGarden]]**\n\t- **[[ProjectNotes]]**\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.32350203Z","tags":null},"/content":{"title":"content","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[content]]**\n\t- [[_index]]\n\t- [[任务看板]]\n\t- **informalessay**\n\t\t- [[2023-02-27]]\n\t\t- [[carbon 代码高亮分享]]\n\t- **[[notes]]**\n\t- **[[private]]**\n\t- **[[Record]]**\n\t- **[[templates]]**\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/informalessay/2023-02-27":{"title":"2023-02-27","content":"\u003e [!blank] \n\u003e [timeline58::timeline]\n```ad-flex\n(Weather::\u003c% `${weather}` %\u003e)\n\u003e [!infobox|noicon]- 🔖 当天创建的文件\n\u003e ```dataviewjs \nconst filename=dv.current().file.name;\ndv.list(dv.pages().where(p =\u003e p.file.cday.toISODate() === filename).sort(p =\u003e p.file.ctime, 'desc').file.link) \n\u003e```\n```\n## ✏随笔感悟","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/informalessay/carbon-%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E5%88%86%E4%BA%AB":{"title":"carbon 代码高亮分享","content":"\n## Metadata\nStatus::    #笔记状态/🌱发芽\nSource Type::  #📥/📰️文章\nTopic:: [[比如：时间管理]]\nAuthor:: \nSource URL:: \n\n## 长青笔记\n一句话概括这篇笔记的内容\nSummary:: \n\n## 自我重述\n用自己的话去重述提取的重点内容\n\n\n## 重点摘抄\n摘抄部分原文后，进行筛选加粗然后对加粗的继续进行筛选荧光笔选出。\n\n\n## 相关文章\nPage Link::  \n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (测试)","content":"\n## Chinese, Japanese, Korean Support\n几乎在我们意识到之前，我们已经离开了地面。\n\n우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.\n\n私たちがそれを知るほぼ前に、私たちは地面を離れていました。\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = -1$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render [[callouts]]\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"🪴 Wangc.TECH\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/Majmunu\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/docker":{"title":"Hosting with Docker","content":"\nIf you want to host Quartz on a machine without using a webpage hosting service, it may be easier to [install Docker Compose](https://docs.docker.com/compose/install/) and follow the instructions below than to [install Quartz's dependencies manually](notes/preview%20changes.md).\n## Hosting Quartz Locally\nYou can serve Quartz locally at `http://localhost:1313` with the following script, replacing `/path/to/quartz` with the \nactual path to your Quartz folder.\n\ndocker-compose.yml\n```\nservices:\n  quartz-hugo:\n    image: ghcr.io/jackyzha0/quartz:hugo\n    container_name: quartz-hugo\n    volumes:\n      - /path/to/quartz:/quartz\n    ports:\n      - 1313:1313\n\n    # optional\n    environment:\n      - HUGO_BIND=0.0.0.0\n      - HUGO_BASEURL=http://localhost\n      - HUGO_PORT=1313\n      - HUGO_APPENDPORT=true\n      - HUGO_LIVERELOADPORT=-1\n```\n\nThen run with: `docker-compose up -d` in the same directory as your `docker-compose.yml` file.\n\nWhile the container is running, you can update the `quartz` fork with: `docker exec -it quartz-hugo make update`.\n\n## Exposing Your Container to the Internet\n\n### To Your Public IP Address with Port Forwarding (insecure)\n\nAssuming you are already familiar with [port forwarding](https://en.wikipedia.org/wiki/Port_forwarding) and [setting it up with your router model](https://portforward.com):\n\n1. You should set the environment variable `HUGO_BASEURL=http://your-public-ip` and then start your container.\n2. Set up port forwarding on your router from port `p` to `your-local-ip:1313`.\n3. You should now be able to access Quartz from outside your local network at `http://your-public-ip:p`.\n\nHowever, your HTTP connection will be unencrypted and **this method is not secure**.\n\n### To a Domain using Cloudflare Proxy\n\n1. Port forward 443 (HTTPS) from your machine.\n2. Buy a custom domain (say, `your-domain.com`) from [Cloudflare](https://www.cloudflare.com/products/registrar/). Point a DNS A record from `your-domain.com` to your public IP address and enable the proxy.\n3. Set the environment variables `HUGO_BASEURL=https://your-domain.com`, `HUGO_PORT=443`, and `HUGO_APPENDPORT=false`. Change `1313:1313` to `443:443` for the `ports` in `docker-compose.yml`.\n4. Spin up your Quartz container and enjoy it at `https://your-domain.com`!\n\n### To a Domain using a Reverse Proxy\n\nIf you want to serve more than just Quartz to the internet on this machine (or don't want to use the Cloudflare registrar and proxy), you should follow the steps in the section above (as appropriate) and also set up a reverse proxy, like [Traefik](https://doc.traefik.io/traefik). Be sure to configure your TLS certificates too!\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e 🔗 Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n❌ [Excluding pages from being published](notes/ignore%20notes.md)\n\n## Docker Support\nIf you don't want to use a hosting service, you can host using [Docker](notes/docker.md) instead!\nI would *not use this method* unless you know what you are doing.\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: 🎨 [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/images/images":{"title":"images","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[images]]**\n\t- [[github-actions.png]]\n\t- [[github-pages.png]]\n\t- [[google-domains.png]]\n\t- [[obsidian-settings.png]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/notes":{"title":"notes","content":"---\ncssclass: kanban gridlist noyaml\ntag: moc\nobsidianUIMode: preview\n--- `button-homewp`  `button-browsevault`  `button-browsenext` `button-browserefresh` \n%% Begin Waypoint %%\n- **[[notes]]**\n\t- [[callouts]]\n\t- [[CJK + Latex Support (测试)]]\n\t- [[config]]\n\t- [[custom Domain]]\n\t- [[docker]]\n\t- [[editing]]\n\t- [[hosting]]\n\t- [[ignore notes]]\n\t- **[[images]]**\n\t- [[obsidian]]\n\t- [[philosophy]]\n\t- [[preview changes]]\n\t- [[search]]\n\t- [[setup]]\n\t- [[showcase]]\n\t- [[troubleshooting]]\n\t- [[updating]]\n\n%% End Waypoint %%","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\nOpen Settings \u003e Files \u0026 Links and look for these two items:\n\n1. Set the **New link format** to **Absolute Path in vault**.\n2. Turn **on** the **Automatically update internal links** setting.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e “[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, the following\ninstructions guide you through installing the proper dependencies to run it locally.\n\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e [!INFO] Docker Support\n\u003e\n\u003e If you have Docker installed already, open your terminal, navigate to your folder with Quartz and run `make docker`\n\nNow that you are happy with how your Quartz instance looks, let's get it hosted!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://beta.operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Login or Register for a new Operand account. Click the verification link sent to your email, and you'll be redirected to the dashboard. (Note) You do not need to enter a credit card to create an account, or get started with the Operand API. The first $10 of usage each month is free. To learn more, see pricing. If you go over your free quota, we'll (politely) reach out and ask you to configure billing.\n2. Create your first index. On the dashboard, under \"Indexes\", enter the name and description of your index, and click \"Create Index\". Note down the ID of the index (obtained by clicking on the index name in the list of indexes), as you'll need it in the next step. IDs are unique to each index, and look something like `uqv1duxxbdxu`.\n3. Click into the index you've created. Under \"Index Something\", select \"SITEMAP\" from the dropdown and click \"Add Source\".\n4. For the \"Sitemap.xml URL\", put your deployed site's base URL followed by `sitemap.xml`. For example, for `quartz.jzhao.xyz`, put `https://quartz.jzhao.xyz/sitemap.xml`. Leave the URL Regex empty. \n5. Get your API key. On the dashboard, under \"API Keys\", you can manage your API keys. If you don't already have an API key, click \"Create API Key\". You'll need this for the next step.\n6. Open `data/config.yaml`. Set `enableSemanticSearch` to `true`, `operandApiKey` to your copied key, and `operandIndexId` to the ID of the index we created from earlier..\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nsearch:\n  enableSemanticSearch: true\n  operandApiKey: \"jp9k5hudse2a828z98kxd6z3payi8u90rnjf\"\n  operandIndexId: \"s0kf3bd6tldw\"\n```\n7. Push your changes to the site and wait for it to deploy.\n8. Check the Operand dashboard and wait for your site to index. Enjoy natural language search powered by Operand!\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\n📁 [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ✏️ Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary 🧠](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinterの数字花园](https://garden.oldwinter.top/)\n- [SethMB Work](https://sethmb.xyz/)\n- [Abhijeet's Math Wiki](https://abhmul.github.io/quartz/Math-Wiki/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup analytics?\nQuartz by default uses [Plausible](https://plausible.io/) for analytics. \n\nIf you would prefer to use Google Analytics, you can follow this [guide in the Hugo documentation](https://gohugo.io/templates/internal/#google-analytics). \n\nAlternatively, you can also import your Google Analytics data into Plausible by [following this guide](https://plausible.io/docs/google-analytics-import).\n\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\n🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2023-11-27T14:24:29.371502162Z","tags":null}}