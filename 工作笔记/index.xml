<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工作笔记s on</title><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/</link><description>Recent content in 工作笔记s on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Antd/antd-popover%E6%A0%B7%E5%BC%8F%E6%9B%B4%E6%94%B9%E5%8F%8A%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Antd/antd-popover%E6%A0%B7%E5%BC%8F%E6%9B%B4%E6%94%B9%E5%8F%8A%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</guid><description>overlayClassName=&amp;gt;popover 识别参数
1 2 3 4 5 6 7 8 9 10 11 &amp;lt;Popover overlayClassName={ styles.ant_popover }//样式类 title={111}//标题 content={222}//内容 trigger=&amp;#39;click&amp;#39;//触发方式-hover-focus visible={show}//手动显示 placement=&amp;#34;topLeft&amp;#34;//相对页面内容，popover位置变化-共有12种方向 onVisibleChange={this.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Antd/antd%E8%BD%AE%E6%92%AD%E5%9B%BE%E5%B8%A6%E7%AE%AD%E5%A4%B4%E6%A0%B7%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Antd/antd%E8%BD%AE%E6%92%AD%E5%9B%BE%E5%B8%A6%E7%AE%AD%E5%A4%B4%E6%A0%B7%E5%BC%8F/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 .</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Css/Grid-%E5%B8%83%E5%B1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Css/Grid-%E5%B8%83%E5%B1%80/</guid><description>Grid 布局是什么？ Grid 布局即网格布局，是一种新的 CSS 布局模型，比较擅长将一个页面划分为几个主要区域，以及定义这些区域的大小、位置、层次等关系。号称是最强大的的 CSS 布局方案，是目前唯一一种 CSS 二维布局。利用 Grid 布局，我们可以轻松实现类似下图布局， 演示地址
Grid 布局和 flex 布局 讲到布局，我们就会想到 flex 布局，甚至有人认为竟然有 flex 布局了，似乎没有必要去了解 Grid 布局。但 flex 布局和 Grid 布局有实质的区别，那就是 flex 布局是一维布局，Grid 布局是二维布局。flex 布局一次只能处理一个维度上的元素布局，一行或者一列。Grid 布局是将容器划分成了“行”和“列”，产生了一个个的网格，我们可以将网格元素放在与这些行和列相关的位置上，从而达到我们布局的目的。</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/git/Github%E5%AD%A6%E7%94%9F%E5%BC%80%E5%8F%91%E5%8C%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/git/Github%E5%AD%A6%E7%94%9F%E5%BC%80%E5%8F%91%E5%8C%85/</guid><description>Github学生开发包是什么？ 官方的首页（ GitHub Student Developer Pack）是这么说的：
Learn to ship software like a pro. There&amp;rsquo;s no substitute for hands-on experience. But for most students, real world tools can be cost-prohibitive.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/git/git%E7%9B%B8%E5%85%B3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/git/git%E7%9B%B8%E5%85%B3/</guid><description>![[Pasted image 20230128180704.png]]
1 2 3 4 5 6 7 8 9 10 title:查看当前用户名和修改 1. 查看当前登录账号： git config user.name 2.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/Aarry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/Aarry/</guid><description>![[Array.prototype.at()]]</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.at/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.at/</guid><description>Array.prototype.at() at() 方法接收一个整数值并返回该索引对应的元素，允许正数和负数。负整数从数组中的最后一个元素开始倒数。
1 2 3 4 5 6 7 8 9 10 11 const array1 = [5, 12,8, 130, 44]; let index = 2; console.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.includes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.includes/</guid><description>Array.prototype.includes() includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false。
尝试一下 语法 1 2 includes(searchElement) includes(searchElement, fromIndex) Copy to Clipboard
参数 searchElement</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.reduce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/Array.prototype.reduce/</guid><description>Array.prototype.reduce() - JavaScript | MDN (mozilla.org) reduce() 方法对数组中的每个元素按序执行一个由您提供的 reducer 函数，每一次运行 reducer 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值。
第一次执行回调函数时，不存在“上一次的计算结果”。如果需要回调函数从数组索引为 0 的元素开始执行，则需要传递初始值。否则，数组索引为 0 的元素将被作为初始值 initialValue，迭代器将从第二个元素开始执行（索引为 1 而不是 0）。</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/String.prototype.trim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/JavaScript/%E6%95%B0%E7%BB%84/String.prototype.trim/</guid><description>String.prototype.trim() trim() 方法从字符串的两端清除空格，返回一个新的字符串，而不修改原始字符串。此上下文中的空格是指所有的空白字符（空格、tab、不换行空格等）以及所有行终止符字符（如 LF、CR 等）。
尝试一下 语法 1 trim() Copy to Clipboard
返回值 一个表示 str 去掉了开头和结尾的空白字符后的新字符串。
如果 str 的开头和结尾都没有空白字符，仍然会返回一个新字符串（本质上是 str 的副本），而不会抛出异常。</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/NextJs/NextJs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/NextJs/NextJs/</guid><description>路由 基于文件的路由系统 Next路由跳转采用 Link 来标记</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/http%E8%87%AA%E5%AE%9A%E4%B9%89%E9%92%A9%E5%AD%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/http%E8%87%AA%E5%AE%9A%E4%B9%89%E9%92%A9%E5%AD%90/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import { useState, useCallback } from &amp;#39;react&amp;#39;; const useHttp = () =&amp;gt; { const [isLoading, setIsLoading] = useState(false); const [error, setError] = useState(null); const sendRequest = useCallback(async (requestConfig, applyData) =&amp;gt; { setIsLoading(true); setError(null); try { const response = await fetch(requestConfig.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/react-css%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/react-css%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description>react css解决方案 使用 #css-modules- 下包 mpm i sass -D 改样式文件名。从 xx.scss -&amp;gt; xx.module.scss （React脚手架中的约定，与普通 CSS 作区分）</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/React%E4%BC%98%E5%8C%96-%E9%80%82%E7%94%A8%E4%BA%8E%E5%A4%8D%E6%9D%82%E7%9A%84%E9%A1%B5%E9%9D%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/React%E4%BC%98%E5%8C%96-%E9%80%82%E7%94%A8%E4%BA%8E%E5%A4%8D%E6%9D%82%E7%9A%84%E9%A1%B5%E9%9D%A2/</guid><description>React如何工作 1 2 3 4 5 title:React如何工作 ![[Pasted image 20230215162902.png]] &amp;gt; `函数的变化不一定会引入页面的渲染 ` &amp;gt; 当组件props state content发生变化时，组件会重新渲染，然后执行函数 问题 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // DemoOutput.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/React%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/React%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6/</guid><description>一、受控组件 在HTML中，表单元素的标签&amp;lt;input&amp;gt;、&amp;lt;textarea&amp;gt;、&amp;lt;select&amp;gt;等的值改变通常是根据用户输入进行更新。 在React中，可变状态通常保存在组件的状态属性中，并且只能使用 setState() 进行更新，而呈现表单的React组件也控制着在后续用户输入时该表单中发生的情况，以这种由React控制的输入表单元素而改变其值的方式，称为受控组件。 比如，给表单元素input绑定一个onChange事件，当input状态发生变化时就会触发onChange事件，从而更新组件的state。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import React, { Component } from &amp;#39;react&amp;#39; export default class MyInput extends Component{ constructor(props) { super(props); this.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/React%E6%89%A9%E5%B1%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/React%E6%89%A9%E5%B1%95/</guid><description>1. setState setState更新状态的2种写法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 (1). setState(stateChange, [callback])------对象式的setState 1.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/Redux+React-redux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/Redux+React-redux/</guid><description>Redux api
createStore createStore(reducer, [preloadedState], [enhancer])
combineReducers combineReducers(reducers)
applyMiddleware applyMiddleware(&amp;hellip;middlewares)
bindActionCreators bindActionCreators(actionCreators, dispatch)
compose compose(&amp;hellip;functions)</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/ReduxTool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/ReduxTool/</guid><description>首先可以先看一下Redux如何工作 1 store 负责存储数据，相当于仓库，action负责dispatch派发数据，reducer负责接收处理数据然后交给store（个人理解 可能有些偏差 欢迎交流斧正） 传统redux写法（旧） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 //reducer const counterReducer = (state = { counter: 0 }, action) =&amp;gt; { if (action.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/Ref%E6%89%A9%E5%B1%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/Ref%E6%89%A9%E5%B1%95/</guid><description>Refs 转发 Ref 转发是一项将 ref 自动地通过组件传递到其一子组件的技巧。对于大多数应用中的组件来说，这通常不是必需的。但其对某些组件，尤其是可重用的组件库是很有用的。最常见的案例如下所述。
转发 refs 到 DOM 组件 考虑这个渲染原生 DOM 元素 button 的 FancyButton 组件：
1 2 3 4 5 6 7 function FancyButton(props) { return ( &amp;lt;button className=&amp;#34;FancyButton&amp;#34;&amp;gt; {props.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E9%92%A9%E5%AD%90%E5%A4%84%E7%90%86%E8%A1%A8%E5%8D%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E9%92%A9%E5%AD%90%E5%A4%84%E7%90%86%E8%A1%A8%E5%8D%95/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 import { useReducer } from &amp;#39;react&amp;#39;; const initialInputState = { value: &amp;#39;&amp;#39;, isTouched: false, }; const inputStateReducer = (state, action) =&amp;gt; { if (action.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD%E6%83%85%E5%86%B5-%E6%97%A0-%E9%94%99%E8%AF%AF-%E5%8A%A0%E8%BD%BD%E4%B8%AD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD%E6%83%85%E5%86%B5-%E6%97%A0-%E9%94%99%E8%AF%AF-%E5%8A%A0%E8%BD%BD%E4%B8%AD/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 let content = &amp;lt;p&amp;gt;Found no movies.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B0%B1%E8%83%BD%E7%90%86%E8%A7%A3%E7%9A%84-React-Portals%E4%BC%A0%E9%80%81%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B0%B1%E8%83%BD%E7%90%86%E8%A7%A3%E7%9A%84-React-Portals%E4%BC%A0%E9%80%81%E9%97%A8/</guid><description>React Portal 提供了一种将子节点渲染到父组件以外的 DOM 节点的优秀解决方案。Portal 的最常见用例是子组件需要从视觉上脱离父容器，如下所示。
模态对话框 工具提示 悬浮卡 加载动画 可以使用 ReactDOM.createPortal(child,container) 创建一个 Portal。这里的 child 是一个 React 元素，fragment 片段或者是一个字符串，container 是 Portal 要插入的 DOM 节点的位置。</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E9%98%B2%E6%8A%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/React/%E9%98%B2%E6%8A%96/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 tool.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Typescript/%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Typescript/%E5%9F%BA%E7%A1%80/</guid><description>目标 使用和编译 TS 代码到 JavaScript 中tsc 变量和简单值 对象和数组 我们可以使用以下运算符声明此属性是可选的：?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 function printCar(car: { make: string model: string year: number chargeVoltage?</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description>ctrl + alt + L 自动插入有意义的日志消息 shift+alt+T 翻译 ctrl + alt + l 选中变量之后，使用这个快捷键生成 console.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/%E6%9D%82%E6%8A%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/%E6%9D%82%E6%8A%80/</guid><description>通过分析github代码库总结出来的工程师代码书写习惯Code Guide by @AlloyTeam
Firebase console (google.com) https://chat.openai.com/chat/</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/</guid><description>1 2 3 title:vscode 插件 字体 fira code 苹方 1 2 title:浏览器 polypane 1 2 3 4 title:git gitlens tower [Download Helix Visual Merge Tool Today | Perforce](https://www.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%A8%A1%E6%9D%BF/%E5%85%AC%E5%8F%B8%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%A8%A1%E6%9D%BF/%E5%85%AC%E5%8F%B8%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</guid><description>1 2 3 title:禅道 账号：wangchenchen 密码：Wang123 1 2 3 title:Jenkins 账号：wangchenchen 密码：gemcc@pm.me 1 2 3 title:GitLab 账号：wangchenchen 密码：63767412 1 2 3 title:Ubuntu 账号：ubuntu 密码：12345678 1 2 3 title:Windows 账号：Wangcc 密码：Wangcc01 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</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%A8%A1%E6%9D%BF/%E6%9C%AA%E5%91%BD%E5%90%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%A8%A1%E6%9D%BF/%E6%9C%AA%E5%91%BD%E5%90%8D/</guid><description>1 2 3 4 title:Admonition &amp;lt;figure class=&amp;#34;half&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20221211144629.png&amp;#34;/&amp;gt;&amp;lt;img src=&amp;#34;https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20221211144659.png&amp;#34;/&amp;gt; &amp;lt;/figure&amp;gt;</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%A8%A1%E6%9D%BF/%E6%AF%8F%E5%91%A8%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%A8%A1%E6%9D%BF/%E6%AF%8F%E5%91%A8%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/</guid><description>一周概览 ![[{{monday:gggg-MM-DD}}]] ![[{{tuesday:gggg-MM-DD}}]] ![[{{wednesday:gggg-MM-DD}}]] ![[{{thursday:gggg-MM-DD}}]] ![[{{friday:gggg-MM-DD}}]] ![[{{saturday:gggg-MM-DD}}]] ![[{{sunday:gggg-MM-DD}}]]</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E5%91%A8/2022-W50/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E5%91%A8/2022-W50/</guid><description>一周概览 ![[2022-12-12]] ![[2022-12-13]] ![[2022-12-14]] ![[2022-12-15]] ![[2022-12-16]]</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E5%91%A8/2023-W04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E5%91%A8/2023-W04/</guid><description>一周概览 ![[2023-01-29]] ![[2023-01-23]] ![[2023-01-24]] ![[2023-01-25]] ![[2023-01-26]] ![[2023-01-27]] ![[2023-01-28]]</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-11/</guid><description>1 2 3 4 5 title: 微服务框架运行和react运行有什么区别 icon: book 1. 用微服务框架可以控制子项目的生命周期和主项目进行联调 2. 微服务框架会导出子项目的reducer交给主项目的redux统一管理</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-12/</guid><description>1 2 3 title:自学一天 ES6string方法 &amp;lt;img src=&amp;#34;https://cdn.jsdelivr.net/gh/chenchen2692/Gallery-Img/20221212103243.png&amp;#34;/&amp;gt;</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-13/</guid><description>1 2 title:遇到错误 SassError: Undefined variable. 解决方案：将 SCSS 文件导入主 SCSS 文件时，请确保使用 @import &amp;#39;&amp;#39;;在所有文件上。**不要使用**@import URL（文件的路径）;。 它们是不一样的。 1 2 title:组件问题 获取验证码刚开始使用[前置/后置标签]标签实现，后发现使用 suffix更加合适 1 2 title:完成更换手机号弹窗 更换手机弹窗完成70%，完成表单验证和获取验证码倒计时功能。但使用组件为antd，通过项目中代码发现原来使用的是司南弹窗库，明天需要询问需要用哪种方式完成</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-14/</guid><description>1 title:发烧一天两夜</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-15/</guid><description>1 title:完成更换手机号和重置私钥 1 2 title:存在问题 intl-tel-input用于输入和验证国际电话号码的 JavaScript 插件在虚拟机中安装显示缺少依赖</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-16/</guid><description>1 title:今日目标：尽可能完成账号注销功能</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-17/</guid><description/></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2022-12-18/</guid><description/></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-28/</guid><description>1 2 3 4 title:上午 icon:person-digging 上午完善鼠标移入的弹窗效果，优化了项目结构</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-29/</guid><description>1 2 3 4 5 * 表单使用延时器进行防抖 * useReducer 进行复杂的状态管理 * useContent 上下文 简化代码 * current.focus()使页面加载时聚焦 * 导入图片，可以直接使用import导入 再通过src={}动态绑定图片地址</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-30/</guid><description/></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-01-31/</guid><description/></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-01/</guid><description>中午吃了凉皮和肉夹馍，晚上预计吃饺子，下午想申请github学生 ，试了好久没成功</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-02/</guid><description>1 2 3 工资评价不如预期，S23u评价不如预期 双喜临门 ![引用退格1](https://www.google.com/imgres?imgurl=https%3A%2F%2Fi4.hoopchina.com.cn%2Fhupuapp%2Fbbs%2F192%2F44076192%2F1625805560_7991161IMG_5844.PNG%3Fx-oss-process%3Dimage%2Fresize%2Cw_600%2Fformat%2Cjpg%2Fquality%2CQ_60&amp;amp;imgrefurl=https%3A%2F%2Fbbs.hupu.com%2F44125017.html&amp;amp;tbnid=kcCZguve3Bc-iM&amp;amp;vet=10CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ..i&amp;amp;docid=qLVw5Oai9HDLgM&amp;amp;w=600&amp;amp;h=636&amp;amp;itg=1&amp;amp;q=%E8%A5%BF%E7%BA%A2%E6%9F%BF%E9%A6%96%E5%AF%8C%20%E5%8F%8C%E5%96%9C%E4%B8%B4%E9%97%A8%E8%A1%A8%E6%83%85%E5%8C%85&amp;amp;ved=0CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ) ![湘湖1](https://www.google.com/imgres?imgurl=https%3A%2F%2Fi4.hoopchina.com.cn%2Fhupuapp%2Fbbs%2F192%2F44076192%2F1625805560_7991161IMG_5844.PNG%3Fx-oss-process%3Dimage%2Fresize%2Cw_600%2Fformat%2Cjpg%2Fquality%2CQ_60&amp;amp;imgrefurl=https%3A%2F%2Fbbs.hupu.com%2F44125017.html&amp;amp;tbnid=kcCZguve3Bc-iM&amp;amp;vet=10CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ..i&amp;amp;docid=qLVw5Oai9HDLgM&amp;amp;w=600&amp;amp;h=636&amp;amp;itg=1&amp;amp;q=%E8%A5%BF%E7%BA%A2%E6%9F%BF%E9%A6%96%E5%AF%8C%20%E5%8F%8C%E5%96%9C%E4%B8%B4%E9%97%A8%E8%A1%A8%E6%83%85%E5%8C%85&amp;amp;ved=0CAIQxiAoAGoXChMI2NDstPj1_AIVAAAAAB0AAAAAECQ) 上午完成了购物车商品价格，要注意购物车的商品数量不能仅以数组的长度来展示，因为可能有免费的商品，需要使用 Array.prototype.reduce()来处理</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-03/</guid><description>Hack | A typeface designed for source code (sourcefoundry.org)
tonsky/FiraCode：带有编程连字的免费等宽字体 (github.com)</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-04/</guid><description/></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-05/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 async function fetchMoviesHandler() { await fetch(&amp;#39;https://swapi.</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-07/</guid><description>1 配置开发环境 ![[使用自定义钩子处理表单]]</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-14/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 title:表格点击标题跳转不知道怎么获取参数 解决方案：通过查询antd的api 最后通过onclick回调将当前点击所属行的数据传递到onclick函数中 解决方案： ```js { title: &amp;#39;操作&amp;#39;, dataIndex: &amp;#39;rowguid&amp;#39;, key: &amp;#39;rowguid&amp;#39;, render: (text, record) =&amp;gt; ( &amp;lt;Space size=&amp;#34;middle&amp;#34;&amp;gt; &amp;lt;Button type=&amp;#34;primary&amp;#34; size=&amp;#34;small&amp;#34; &amp;gt;修改&amp;lt;/Button&amp;gt; &amp;lt;Button type=&amp;#34;danger&amp;#34; size=&amp;#34;small&amp;#34; onClick={(e)=&amp;gt;delByGuid(text)}&amp;gt;删除&amp;lt;/Button&amp;gt; &amp;lt;/Space&amp;gt; ) } onClick={(e)=&amp;gt;delByGuid(text)} 1 2 3 4 5 6 7 title: git两个分支merge之后还存在不同 git merge不是根据文件的差异来的，是根据提交来的。 就算master分支和dev分支同一个文件中的同一行存在差异，但是只要在dev分支上你在上一次merge到这一次merge之间没有对这一行做过改动（注意：换行也算改动），那么这一次merge的时候git将不认为它们是冲突。 理论上说这种情况很难出现，因为dev通常是基于master分支新建的，不会存在dev分支和master分支同一个文件同一行存在不同，而且dev分支上还没有对这一行做过改动。</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-18/</guid><description>学习了grid布局 ![[Grid 布局]]
学习了数组的at方法返回指定位置的元素 ![[Array.prototype.at()]]</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E6%AF%8F%E6%97%A5%E7%AC%94%E8%AE%B0/%E6%97%A5/2023-02-25/</guid><description/></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/%E4%BB%BB%E5%8A%A1%E4%B8%AD%E5%BF%83%E5%8F%91%E5%B8%83%E4%B8%8E%E9%A2%84%E8%A7%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/%E4%BB%BB%E5%8A%A1%E4%B8%AD%E5%BF%83%E5%8F%91%E5%B8%83%E4%B8%8E%E9%A2%84%E8%A7%88/</guid><description>1 2 title: antd的datepicker出现date.clone is not a function 浏览器中存在redux的缓存，需要对缓存进行monet格式处理，并使用扩展运算符使数据中的文字保持不变</description></item><item><title/><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1%E5%8F%91%E5%B8%83%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1%E5%8F%91%E5%B8%83%E7%AE%A1%E7%90%86/</guid><description>#开始时间 2月8日 #预计结束时间 2月15日 #实际结束时间 2月14日
![[2023-02-14]]</description></item><item><title>Antd目录</title><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Antd/Antd%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/Antd/Antd%E7%9B%AE%E5%BD%95/</guid><description>[[antd轮播图带箭头样式]]
[[antd-popover样式更改，及参数详解]]</description></item><item><title>Majmunu</title><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/MarkDown%E8%AF%AD%E6%B3%95-%E8%B6%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/MarkDown%E8%AF%AD%E6%B3%95-%E8%B6%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</guid><description>什么是 Markdown? Markdown 是一款轻量级标记语言，不同于HTML (Hypertext Markup Language)，Markdown 的语法非常简单 且 容易上手 Markdown 以 纯文本格式 编写文档，依赖键盘而非鼠标，专注于写作本身，感受书写的魅力 Markdown 的通过添加一些简单的 标识符，让文本具有恰到好处的格式 Markdown 核心特征就是 删繁剪芜， **简扼 **+ 精炼 Markdown 是 笔记 与 网页文章 的最佳载体 Down 的核心：坐 下 来，就能把思维写 下 来 牛津高阶英汉双解词典第九版 中，关于 down 的释义： Markdown 相关软件推荐 Markdown 书写软件 推荐：Typora 优秀的 MD网页文章 书写软件 点击跳转下载地址 318 Markdown 笔记软件 推荐：Obsidian 银河系最强 MD+ 双向链 笔记软件 点击跳转下载地址 396 Markdown 语法 1.</description></item><item><title>个人仓库</title><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93%E7%9B%AE%E5%BD%95/</guid><description>[[工作笔记/个人仓库/Antd/Antd目录]] [[React/React扩展]]</description></item><item><title>🪴 GitHub Copilot 键盘快捷键.</title><link>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/git/GitHub-Copilot-%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majmunu.github.io/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/git/GitHub-Copilot-%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description> 接受内联代码建议 -Tab 关闭内联代码建议 - Esc 显示下一个建议 - Alt + ] 或 Option (⌥) + ] 显示上一个建议 - Alt + [ 或 Option (⌥) + [ 触发建议 - Alt + \ 或 Option (⌥) + \ 在单独的窗格中打开十个建议 — Ctrl + Enter</description></item></channel></rss>