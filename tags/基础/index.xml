<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>基础 on</title><link>https://wangc.tech/tags/%E5%9F%BA%E7%A1%80/</link><description>Recent content in 基础 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wangc.tech/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Node.js</title><link>https://wangc.tech/Record/DigitalGarden/Node/Introduction-to-Node.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wangc.tech/Record/DigitalGarden/Node/Introduction-to-Node.js/</guid><description>Introduction to Node.js 基本组件 全局 Node.js 全局对象
在浏览器 JavaScript 中，通常 window 是全局对象，而 Node.js 中的全局对象是 global，所有全局变量（除了 global 本身以外）都是 global 对象的属性。在 Node.</description></item><item><title>NebulasFundamentals</title><link>https://wangc.tech/Record/DigitalGarden/Nebulas/Nebulas-Fundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wangc.tech/Record/DigitalGarden/Nebulas/Nebulas-Fundamentals/</guid><description/></item><item><title>TypeScript Fundamentals</title><link>https://wangc.tech/Record/DigitalGarden/Typescript/TypeScript-Fundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wangc.tech/Record/DigitalGarden/Typescript/TypeScript-Fundamentals/</guid><description>TypeScript Fundamentals 对象，数值和元组 现在我们知道了如何键入简单的变量和函数，让我们做一些事情集合更有趣一点：在 JavaScript 中，这包括对象和数组。
可选类型 我们可以使用以下运算符声明此属性是可选的：?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 function printCar(car: { make: string model: string year: number chargeVoltage?</description></item></channel></rss>